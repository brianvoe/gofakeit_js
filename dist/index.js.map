{"version":3,"file":"index.js","sources":["../src/funcs.ts","../src/styles.ts","../src/field-error.ts","../src/api.ts","../src/input-datetime.ts","../src/input-text.ts","../src/input-misc.ts","../src/input-number.ts","../src/autofill.ts"],"sourcesContent":["// Function list types\nexport interface Func {\n  value: string; // function name\n  display: string;\n  category: string;\n}\n\n// This file is generated/maintained manually to avoid heavy runtime requests.\n// It must export a normalized list and fast lookup helpers used by inference.\n\nconst FUNCS: Func[] = [{\"value\":\"phraseadverb\",\"display\":\"Adverb Phrase\",\"category\":\"word\"},{\"value\":\"country\",\"display\":\"Country\",\"category\":\"address\"},{\"value\":\"latituderange\",\"display\":\"Latitude Range\",\"category\":\"address\"},{\"value\":\"longituderange\",\"display\":\"Longitude Range\",\"category\":\"address\"},{\"value\":\"bs\",\"display\":\"BS\",\"category\":\"company\"},{\"value\":\"hackerabbreviation\",\"display\":\"Hacker Abbreviation\",\"category\":\"hacker\"},{\"value\":\"hackeringverb\",\"display\":\"Hackering Verb\",\"category\":\"hacker\"},{\"value\":\"uint64\",\"display\":\"Uint64\",\"category\":\"number\"},{\"value\":\"hobby\",\"display\":\"Hobby\",\"category\":\"person\"},{\"value\":\"errorhttpclient\",\"display\":\"HTTP client error\",\"category\":\"error\"},{\"value\":\"programminglanguage\",\"display\":\"Programming Language\",\"category\":\"language\"},{\"value\":\"minecraftarmortier\",\"display\":\"Minecraft armor tier\",\"category\":\"minecraft\"},{\"value\":\"songname\",\"display\":\"Song Name\",\"category\":\"song\"},{\"value\":\"nouncommon\",\"display\":\"Noun Common\",\"category\":\"word\"},{\"value\":\"nouncollectivepeople\",\"display\":\"Noun Collective People\",\"category\":\"word\"},{\"value\":\"verbaction\",\"display\":\"Action Verb\",\"category\":\"word\"},{\"value\":\"celebrityactor\",\"display\":\"Celebrity Actor\",\"category\":\"celebrity\"},{\"value\":\"safecolor\",\"display\":\"Safe Color\",\"category\":\"color\"},{\"value\":\"minecraftvillagerstation\",\"display\":\"Minecraft villager station\",\"category\":\"minecraft\"},{\"value\":\"company\",\"display\":\"Company\",\"category\":\"company\"},{\"value\":\"productaudience\",\"display\":\"Product Audience\",\"category\":\"product\"},{\"value\":\"beerhop\",\"display\":\"Beer Hop\",\"category\":\"beer\"},{\"value\":\"hackerverb\",\"display\":\"Hacker Verb\",\"category\":\"hacker\"},{\"value\":\"int32\",\"display\":\"Int32\",\"category\":\"number\"},{\"value\":\"longitude\",\"display\":\"Longitude\",\"category\":\"address\"},{\"value\":\"beeryeast\",\"display\":\"Beer Yeast\",\"category\":\"beer\"},{\"value\":\"emojicategory\",\"display\":\"Emoji Category\",\"category\":\"emoji\"},{\"value\":\"snack\",\"display\":\"Snack\",\"category\":\"food\"},{\"value\":\"minecraftbiome\",\"display\":\"Minecraft biome\",\"category\":\"minecraft\"},{\"value\":\"flipacoin\",\"display\":\"Flip A Coin\",\"category\":\"misc\"},{\"value\":\"uintrange\",\"display\":\"UintRange\",\"category\":\"number\"},{\"value\":\"verbhelping\",\"display\":\"Helping Verb\",\"category\":\"word\"},{\"value\":\"blurb\",\"display\":\"Blurb\",\"category\":\"company\"},{\"value\":\"emoji\",\"display\":\"Emoji\",\"category\":\"emoji\"},{\"value\":\"uintn\",\"display\":\"UintN\",\"category\":\"number\"},{\"value\":\"price\",\"display\":\"Price\",\"category\":\"payment\"},{\"value\":\"adjectiveproper\",\"display\":\"Proper Adjective\",\"category\":\"word\"},{\"value\":\"nouncountable\",\"display\":\"Noun Countable\",\"category\":\"word\"},{\"value\":\"username\",\"display\":\"Username\",\"category\":\"auth\"},{\"value\":\"buzzword\",\"display\":\"Buzzword\",\"category\":\"company\"},{\"value\":\"map\",\"display\":\"Map\",\"category\":\"generate\"},{\"value\":\"loremipsumsentence\",\"display\":\"Lorem Ipsum Sentence\",\"category\":\"word\"},{\"value\":\"moviegenre\",\"display\":\"Genre\",\"category\":\"movie\"},{\"value\":\"int16\",\"display\":\"Int16\",\"category\":\"number\"},{\"value\":\"namesuffix\",\"display\":\"Name Suffix\",\"category\":\"person\"},{\"value\":\"weighted\",\"display\":\"Weighted\",\"category\":\"misc\"},{\"value\":\"emojidescription\",\"display\":\"Emoji Description\",\"category\":\"emoji\"},{\"value\":\"minecraftanimal\",\"display\":\"Minecraft animal\",\"category\":\"minecraft\"},{\"value\":\"shuffleints\",\"display\":\"Shuffle Ints\",\"category\":\"number\"},{\"value\":\"creditcardtype\",\"display\":\"Credit Card Type\",\"category\":\"payment\"},{\"value\":\"bitcoinaddress\",\"display\":\"Bitcoin Address\",\"category\":\"payment\"},{\"value\":\"drink\",\"display\":\"Drink\",\"category\":\"food\"},{\"value\":\"intrange\",\"display\":\"IntRange\",\"category\":\"number\"},{\"value\":\"currencylong\",\"display\":\"Currency Long\",\"category\":\"payment\"},{\"value\":\"teams\",\"display\":\"Teams\",\"category\":\"person\"},{\"value\":\"adjectivequantitative\",\"display\":\"Quantitative Adjective\",\"category\":\"word\"},{\"value\":\"adjectivepossessive\",\"display\":\"Possessive Adjective\",\"category\":\"word\"},{\"value\":\"bird\",\"display\":\"Bird\",\"category\":\"animal\"},{\"value\":\"pastdate\",\"display\":\"PastDate\",\"category\":\"time\"},{\"value\":\"ipv4address\",\"display\":\"IPv4 Address\",\"category\":\"internet\"},{\"value\":\"shufflestrings\",\"display\":\"Shuffle Strings\",\"category\":\"string\"},{\"value\":\"verblinking\",\"display\":\"Linking Verb\",\"category\":\"word\"},{\"value\":\"interjection\",\"display\":\"Interjection\",\"category\":\"word\"},{\"value\":\"second\",\"display\":\"Second\",\"category\":\"time\"},{\"value\":\"pronounpossessive\",\"display\":\"Pronoun Possessive\",\"category\":\"word\"},{\"value\":\"errorobject\",\"display\":\"Error object word\",\"category\":\"error\"},{\"value\":\"middlename\",\"display\":\"Middle Name\",\"category\":\"person\"},{\"value\":\"email_text\",\"display\":\"Random text email Document\",\"category\":\"template\"},{\"value\":\"streetnumber\",\"display\":\"Street Number\",\"category\":\"address\"},{\"value\":\"minute\",\"display\":\"Minute\",\"category\":\"time\"},{\"value\":\"productupc\",\"display\":\"Product UPC\",\"category\":\"product\"},{\"value\":\"template\",\"display\":\"Template\",\"category\":\"template\"},{\"value\":\"pronoun\",\"display\":\"Pronoun\",\"category\":\"word\"},{\"value\":\"zip\",\"display\":\"Zip\",\"category\":\"address\"},{\"value\":\"day\",\"display\":\"Day\",\"category\":\"time\"},{\"value\":\"json\",\"display\":\"JSON\",\"category\":\"file\"},{\"value\":\"xml\",\"display\":\"XML\",\"category\":\"file\"},{\"value\":\"lunch\",\"display\":\"Lunch\",\"category\":\"food\"},{\"value\":\"connectiveexamplify\",\"display\":\"Connective Examplify\",\"category\":\"word\"},{\"value\":\"productname\",\"display\":\"Product Name\",\"category\":\"product\"},{\"value\":\"productusecase\",\"display\":\"Product Use Case\",\"category\":\"product\"},{\"value\":\"productsuffix\",\"display\":\"Product Suffix\",\"category\":\"product\"},{\"value\":\"randomstring\",\"display\":\"Random String\",\"category\":\"string\"},{\"value\":\"timezone\",\"display\":\"Timezone\",\"category\":\"time\"},{\"value\":\"dessert\",\"display\":\"Dessert\",\"category\":\"food\"},{\"value\":\"imagejpeg\",\"display\":\"Image JPEG\",\"category\":\"image\"},{\"value\":\"creditcardnumber\",\"display\":\"Credit Card Number\",\"category\":\"payment\"},{\"value\":\"nouncollectivething\",\"display\":\"Noun Collective Thing\",\"category\":\"word\"},{\"value\":\"verbintransitive\",\"display\":\"Intransitive Verb\",\"category\":\"word\"},{\"value\":\"streetsuffix\",\"display\":\"Street Suffix\",\"category\":\"address\"},{\"value\":\"isin\",\"display\":\"ISIN\",\"category\":\"finance\"},{\"value\":\"person\",\"display\":\"Person\",\"category\":\"person\"},{\"value\":\"cartransmissiontype\",\"display\":\"Car Transmission Type\",\"category\":\"car\"},{\"value\":\"email\",\"display\":\"Email\",\"category\":\"person\"},{\"value\":\"productbenefit\",\"display\":\"Product Benefit\",\"category\":\"product\"},{\"value\":\"lettern\",\"display\":\"LetterN\",\"category\":\"string\"},{\"value\":\"adverb\",\"display\":\"Adverb\",\"category\":\"word\"},{\"value\":\"preposition\",\"display\":\"Preposition\",\"category\":\"word\"},{\"value\":\"prepositiondouble\",\"display\":\"Preposition Double\",\"category\":\"word\"},{\"value\":\"timezonefull\",\"display\":\"Timezone Full\",\"category\":\"time\"},{\"value\":\"errordatabase\",\"display\":\"Database error\",\"category\":\"error\"},{\"value\":\"fileextension\",\"display\":\"File Extension\",\"category\":\"file\"},{\"value\":\"cusip\",\"display\":\"CUSIP\",\"category\":\"finance\"},{\"value\":\"movie\",\"display\":\"Movie\",\"category\":\"movie\"},{\"value\":\"nameprefix\",\"display\":\"Name Prefix\",\"category\":\"person\"},{\"value\":\"product\",\"display\":\"Product\",\"category\":\"product\"},{\"value\":\"connectivelisting\",\"display\":\"Connective Listing\",\"category\":\"word\"},{\"value\":\"timezoneabv\",\"display\":\"Timezone Abbreviation\",\"category\":\"time\"},{\"value\":\"lastname\",\"display\":\"Last Name\",\"category\":\"person\"},{\"value\":\"vowel\",\"display\":\"Vowel\",\"category\":\"string\"},{\"value\":\"markdown\",\"display\":\"Random markdown document\",\"category\":\"template\"},{\"value\":\"connectivetime\",\"display\":\"Connective Time\",\"category\":\"word\"},{\"value\":\"phrase\",\"display\":\"Phrase\",\"category\":\"word\"},{\"value\":\"countryabr\",\"display\":\"Country Abbreviation\",\"category\":\"address\"},{\"value\":\"beermalt\",\"display\":\"Beer Malt\",\"category\":\"beer\"},{\"value\":\"nouncollectiveanimal\",\"display\":\"Noun Collective Animal\",\"category\":\"word\"},{\"value\":\"emojialias\",\"display\":\"Emoji Alias\",\"category\":\"emoji\"},{\"value\":\"httpstatuscode\",\"display\":\"HTTP Status Code\",\"category\":\"internet\"},{\"value\":\"adjectiveindefinite\",\"display\":\"Indefinite Adjective\",\"category\":\"word\"},{\"value\":\"question\",\"display\":\"Question\",\"category\":\"word\"},{\"value\":\"cat\",\"display\":\"Cat\",\"category\":\"animal\"},{\"value\":\"carmaker\",\"display\":\"Car Maker\",\"category\":\"car\"},{\"value\":\"ipv6address\",\"display\":\"IPv6 Address\",\"category\":\"internet\"},{\"value\":\"httpstatuscodesimple\",\"display\":\"HTTP Status Code Simple\",\"category\":\"internet\"},{\"value\":\"minecraftarmorpart\",\"display\":\"Minecraft armor part\",\"category\":\"minecraft\"},{\"value\":\"minecraftmobneutral\",\"display\":\"Minecraft mob neutral\",\"category\":\"minecraft\"},{\"value\":\"currencyshort\",\"display\":\"Currency Short\",\"category\":\"payment\"},{\"value\":\"achaccount\",\"display\":\"ACH Account Number\",\"category\":\"payment\"},{\"value\":\"song\",\"display\":\"Song\",\"category\":\"song\"},{\"value\":\"prepositionsimple\",\"display\":\"Preposition Simple\",\"category\":\"word\"},{\"value\":\"verbtransitive\",\"display\":\"Transitive Verb\",\"category\":\"word\"},{\"value\":\"slogan\",\"display\":\"Slogan\",\"category\":\"company\"},{\"value\":\"loglevel\",\"display\":\"Log Level\",\"category\":\"internet\"},{\"value\":\"currency\",\"display\":\"Currency\",\"category\":\"payment\"},{\"value\":\"creditcardcvv\",\"display\":\"Credit Card CVV\",\"category\":\"payment\"},{\"value\":\"phoneformatted\",\"display\":\"Phone Formatted\",\"category\":\"person\"},{\"value\":\"adjective\",\"display\":\"Adjective\",\"category\":\"word\"},{\"value\":\"connectivecomplaint\",\"display\":\"Connective Complaint\",\"category\":\"word\"},{\"value\":\"productcategory\",\"display\":\"Product Category\",\"category\":\"product\"},{\"value\":\"beeralcohol\",\"display\":\"Beer Alcohol\",\"category\":\"beer\"},{\"value\":\"date\",\"display\":\"Date\",\"category\":\"time\"},{\"value\":\"nanosecond\",\"display\":\"Nanosecond\",\"category\":\"time\"},{\"value\":\"language\",\"display\":\"Language\",\"category\":\"language\"},{\"value\":\"productisbn\",\"display\":\"Product ISBN\",\"category\":\"product\"},{\"value\":\"hexcolor\",\"display\":\"Hex Color\",\"category\":\"color\"},{\"value\":\"daterange\",\"display\":\"DateRange\",\"category\":\"time\"},{\"value\":\"minecraftvillagerjob\",\"display\":\"Minecraft villager job\",\"category\":\"minecraft\"},{\"value\":\"noundeterminer\",\"display\":\"Noun Determiner\",\"category\":\"word\"},{\"value\":\"password\",\"display\":\"Password\",\"category\":\"auth\"},{\"value\":\"job\",\"display\":\"Job\",\"category\":\"company\"},{\"value\":\"safariuseragent\",\"display\":\"Safari User Agent\",\"category\":\"internet\"},{\"value\":\"randomint\",\"display\":\"Random Int\",\"category\":\"number\"},{\"value\":\"hexuint\",\"display\":\"HexUint\",\"category\":\"number\"},{\"value\":\"comment\",\"display\":\"Comment\",\"category\":\"word\"},{\"value\":\"state\",\"display\":\"State\",\"category\":\"address\"},{\"value\":\"breakfast\",\"display\":\"Breakfast\",\"category\":\"food\"},{\"value\":\"dinner\",\"display\":\"Dinner\",\"category\":\"food\"},{\"value\":\"banktype\",\"display\":\"Bank Type\",\"category\":\"payment\"},{\"value\":\"streetname\",\"display\":\"Street Name\",\"category\":\"address\"},{\"value\":\"errorgrpc\",\"display\":\"gRPC error\",\"category\":\"error\"},{\"value\":\"operauseragent\",\"display\":\"Opera User Agent\",\"category\":\"internet\"},{\"value\":\"minecraftmobboss\",\"display\":\"Minecraft mob boss\",\"category\":\"minecraft\"},{\"value\":\"float32\",\"display\":\"Float32\",\"category\":\"number\"},{\"value\":\"songgenre\",\"display\":\"Genre\",\"category\":\"song\"},{\"value\":\"phrasenoun\",\"display\":\"Noun Phrase\",\"category\":\"word\"},{\"value\":\"monthstring\",\"display\":\"Month String\",\"category\":\"time\"},{\"value\":\"loremipsumword\",\"display\":\"Lorem Ipsum Word\",\"category\":\"word\"},{\"value\":\"productmaterial\",\"display\":\"Product Material\",\"category\":\"product\"},{\"value\":\"adjectiveinterrogative\",\"display\":\"Interrogative Adjective\",\"category\":\"word\"},{\"value\":\"booktitle\",\"display\":\"Title\",\"category\":\"book\"},{\"value\":\"uint32\",\"display\":\"Uint32\",\"category\":\"number\"},{\"value\":\"phrasepreposition\",\"display\":\"Preposition Phrase\",\"category\":\"word\"},{\"value\":\"animal\",\"display\":\"Animal\",\"category\":\"animal\"},{\"value\":\"fruit\",\"display\":\"Fruit\",\"category\":\"food\"},{\"value\":\"regex\",\"display\":\"Regex\",\"category\":\"generate\"},{\"value\":\"minecraftweapon\",\"display\":\"Minecraft weapon\",\"category\":\"minecraft\"},{\"value\":\"beeribu\",\"display\":\"Beer IBU\",\"category\":\"beer\"},{\"value\":\"minecraftmobhostile\",\"display\":\"Minecraft mob hostile\",\"category\":\"minecraft\"},{\"value\":\"randomuint\",\"display\":\"Random Uint\",\"category\":\"number\"},{\"value\":\"achrouting\",\"display\":\"ACH Routing Number\",\"category\":\"payment\"},{\"value\":\"bankname\",\"display\":\"Bank Name\",\"category\":\"payment\"},{\"value\":\"gender\",\"display\":\"Gender\",\"category\":\"person\"},{\"value\":\"pronoundemonstrative\",\"display\":\"Pronoun Demonstrative\",\"category\":\"word\"},{\"value\":\"pronounrelative\",\"display\":\"Pronoun Relative\",\"category\":\"word\"},{\"value\":\"street\",\"display\":\"Street\",\"category\":\"address\"},{\"value\":\"year\",\"display\":\"Year\",\"category\":\"time\"},{\"value\":\"gamertag\",\"display\":\"Gamertag\",\"category\":\"game\"},{\"value\":\"int\",\"display\":\"Int\",\"category\":\"number\"},{\"value\":\"cartype\",\"display\":\"Car Type\",\"category\":\"car\"},{\"value\":\"timezoneoffset\",\"display\":\"Timezone Offset\",\"category\":\"time\"},{\"value\":\"name\",\"display\":\"Name\",\"category\":\"person\"},{\"value\":\"hackernoun\",\"display\":\"Hacker Noun\",\"category\":\"hacker\"},{\"value\":\"inputname\",\"display\":\"Input Name\",\"category\":\"html\"},{\"value\":\"float32range\",\"display\":\"Float32 Range\",\"category\":\"number\"},{\"value\":\"beerstyle\",\"display\":\"Beer Style\",\"category\":\"beer\"},{\"value\":\"book\",\"display\":\"Book\",\"category\":\"book\"},{\"value\":\"celebritybusiness\",\"display\":\"Celebrity Business\",\"category\":\"celebrity\"},{\"value\":\"month\",\"display\":\"Month\",\"category\":\"time\"},{\"value\":\"macaddress\",\"display\":\"MAC Address\",\"category\":\"internet\"},{\"value\":\"uint8\",\"display\":\"Uint8\",\"category\":\"number\"},{\"value\":\"firstname\",\"display\":\"First Name\",\"category\":\"person\"},{\"value\":\"adjectivedescriptive\",\"display\":\"Descriptive Adjective\",\"category\":\"word\"},{\"value\":\"dog\",\"display\":\"Dog\",\"category\":\"animal\"},{\"value\":\"beername\",\"display\":\"Beer Name\",\"category\":\"beer\"},{\"value\":\"vegetable\",\"display\":\"Vegetable\",\"category\":\"food\"},{\"value\":\"useragent\",\"display\":\"User Agent\",\"category\":\"internet\"},{\"value\":\"minecraftore\",\"display\":\"Minecraft ore\",\"category\":\"minecraft\"},{\"value\":\"nounconcrete\",\"display\":\"Noun Concrete\",\"category\":\"word\"},{\"value\":\"verb\",\"display\":\"Verb\",\"category\":\"word\"},{\"value\":\"stateabr\",\"display\":\"State Abbreviation\",\"category\":\"address\"},{\"value\":\"error\",\"display\":\"Error\",\"category\":\"error\"},{\"value\":\"loremipsumparagraph\",\"display\":\"Lorem Ipsum Paragraph\",\"category\":\"word\"},{\"value\":\"digit\",\"display\":\"Digit\",\"category\":\"string\"},{\"value\":\"numerify\",\"display\":\"Numerify\",\"category\":\"string\"},{\"value\":\"hipstersentence\",\"display\":\"Hipster Sentence\",\"category\":\"hipster\"},{\"value\":\"hipsterparagraph\",\"display\":\"Hipster Paragraph\",\"category\":\"hipster\"},{\"value\":\"float64\",\"display\":\"Float64\",\"category\":\"number\"},{\"value\":\"sentencesimple\",\"display\":\"Simple Sentence\",\"category\":\"word\"},{\"value\":\"farmanimal\",\"display\":\"Farm Animal\",\"category\":\"animal\"},{\"value\":\"carmodel\",\"display\":\"Car Model\",\"category\":\"car\"},{\"value\":\"dice\",\"display\":\"Dice\",\"category\":\"game\"},{\"value\":\"minecraftvillagerlevel\",\"display\":\"Minecraft villager level\",\"category\":\"minecraft\"},{\"value\":\"productfeature\",\"display\":\"Product Feature\",\"category\":\"product\"},{\"value\":\"lexify\",\"display\":\"Lexify\",\"category\":\"string\"},{\"value\":\"word\",\"display\":\"Word\",\"category\":\"word\"},{\"value\":\"httpversion\",\"display\":\"HTTP Version\",\"category\":\"internet\"},{\"value\":\"companysuffix\",\"display\":\"Company Suffix\",\"category\":\"company\"},{\"value\":\"errorhttp\",\"display\":\"HTTP error\",\"category\":\"error\"},{\"value\":\"connectivecomparative\",\"display\":\"Connective Comparitive\",\"category\":\"word\"},{\"value\":\"carfueltype\",\"display\":\"Car Fuel Type\",\"category\":\"car\"},{\"value\":\"letter\",\"display\":\"Letter\",\"category\":\"string\"},{\"value\":\"adjectivedemonstrative\",\"display\":\"Demonstrative Adjective\",\"category\":\"word\"},{\"value\":\"streetprefix\",\"display\":\"Street Prefix\",\"category\":\"address\"},{\"value\":\"rgbcolor\",\"display\":\"RGB Color\",\"category\":\"color\"},{\"value\":\"sql\",\"display\":\"SQL\",\"category\":\"database\"},{\"value\":\"fixed_width\",\"display\":\"Fixed Width\",\"category\":\"generate\"},{\"value\":\"imagepng\",\"display\":\"Image PNG\",\"category\":\"image\"},{\"value\":\"domainsuffix\",\"display\":\"Domain Suffix\",\"category\":\"internet\"},{\"value\":\"languageabbreviation\",\"display\":\"Language Abbreviation\",\"category\":\"language\"},{\"value\":\"uint\",\"display\":\"Uint\",\"category\":\"number\"},{\"value\":\"bookauthor\",\"display\":\"Author\",\"category\":\"book\"},{\"value\":\"joblevel\",\"display\":\"Job Level\",\"category\":\"company\"},{\"value\":\"filemimetype\",\"display\":\"File Mime Type\",\"category\":\"file\"},{\"value\":\"domainname\",\"display\":\"Domain Name\",\"category\":\"internet\"},{\"value\":\"number\",\"display\":\"Number\",\"category\":\"number\"},{\"value\":\"productdimension\",\"display\":\"Product Dimension\",\"category\":\"product\"},{\"value\":\"adverbplace\",\"display\":\"Adverb Place\",\"category\":\"word\"},{\"value\":\"phraseverb\",\"display\":\"Verb Phrase\",\"category\":\"word\"},{\"value\":\"appname\",\"display\":\"App Name\",\"category\":\"app\"},{\"value\":\"celebritysport\",\"display\":\"Celebrity Sport\",\"category\":\"celebrity\"},{\"value\":\"hour\",\"display\":\"Hour\",\"category\":\"time\"},{\"value\":\"hipsterword\",\"display\":\"Hipster Word\",\"category\":\"hipster\"},{\"value\":\"languagebcp\",\"display\":\"Language BCP\",\"category\":\"language\"},{\"value\":\"minecraftdye\",\"display\":\"Minecraft dye\",\"category\":\"minecraft\"},{\"value\":\"moviename\",\"display\":\"Movie Name\",\"category\":\"movie\"},{\"value\":\"float64range\",\"display\":\"Float64 Range\",\"category\":\"number\"},{\"value\":\"emojitag\",\"display\":\"Emoji Tag\",\"category\":\"emoji\"},{\"value\":\"url\",\"display\":\"URL\",\"category\":\"internet\"},{\"value\":\"creditcardexp\",\"display\":\"Credit Card Exp\",\"category\":\"payment\"},{\"value\":\"adverbmanner\",\"display\":\"Adverb Manner\",\"category\":\"word\"},{\"value\":\"adverbtimeindefinite\",\"display\":\"Adverb Time Indefinite\",\"category\":\"word\"},{\"value\":\"adverbfrequencydefinite\",\"display\":\"Adverb Frequency Definite\",\"category\":\"word\"},{\"value\":\"connectivecasual\",\"display\":\"Connective Casual\",\"category\":\"word\"},{\"value\":\"nounproper\",\"display\":\"Noun Proper\",\"category\":\"word\"},{\"value\":\"bookgenre\",\"display\":\"Genre\",\"category\":\"book\"},{\"value\":\"timezoneregion\",\"display\":\"Timezone Region\",\"category\":\"time\"},{\"value\":\"hackeradjective\",\"display\":\"Hacker Adjective\",\"category\":\"hacker\"},{\"value\":\"httpmethod\",\"display\":\"HTTP Method\",\"category\":\"internet\"},{\"value\":\"minecrafttool\",\"display\":\"Minecraft tool\",\"category\":\"minecraft\"},{\"value\":\"minecraftfood\",\"display\":\"Minecraft food\",\"category\":\"minecraft\"},{\"value\":\"minecraftweather\",\"display\":\"Minecraft weather\",\"category\":\"minecraft\"},{\"value\":\"petname\",\"display\":\"Pet Name\",\"category\":\"animal\"},{\"value\":\"beerblg\",\"display\":\"Beer BLG\",\"category\":\"beer\"},{\"value\":\"csv\",\"display\":\"CSV\",\"category\":\"file\"},{\"value\":\"hackerphrase\",\"display\":\"Hacker Phrase\",\"category\":\"hacker\"},{\"value\":\"school\",\"display\":\"School\",\"category\":\"school\"},{\"value\":\"prepositioncompound\",\"display\":\"Preposition Compound\",\"category\":\"word\"},{\"value\":\"address\",\"display\":\"Address\",\"category\":\"address\"},{\"value\":\"futuredate\",\"display\":\"FutureDate\",\"category\":\"time\"},{\"value\":\"adverbtimedefinite\",\"display\":\"Adverb Time Definite\",\"category\":\"word\"},{\"value\":\"pronounreflective\",\"display\":\"Pronoun Reflective\",\"category\":\"word\"},{\"value\":\"appauthor\",\"display\":\"App Author\",\"category\":\"app\"},{\"value\":\"jobdescriptor\",\"display\":\"Job Descriptor\",\"category\":\"company\"},{\"value\":\"errorhttpserver\",\"display\":\"HTTP server error\",\"category\":\"error\"},{\"value\":\"int64\",\"display\":\"Int64\",\"category\":\"number\"},{\"value\":\"noununcountable\",\"display\":\"Noun Uncountable\",\"category\":\"word\"},{\"value\":\"color\",\"display\":\"Color\",\"category\":\"color\"},{\"value\":\"nicecolors\",\"display\":\"Nice Colors\",\"category\":\"color\"},{\"value\":\"jobtitle\",\"display\":\"Job Title\",\"category\":\"company\"},{\"value\":\"chromeuseragent\",\"display\":\"Chrome User Agent\",\"category\":\"internet\"},{\"value\":\"minecraftmobpassive\",\"display\":\"Minecraft mob passive\",\"category\":\"minecraft\"},{\"value\":\"latitude\",\"display\":\"Latitude\",\"category\":\"address\"},{\"value\":\"appversion\",\"display\":\"App Version\",\"category\":\"app\"},{\"value\":\"car\",\"display\":\"Car\",\"category\":\"car\"},{\"value\":\"uint16\",\"display\":\"Uint16\",\"category\":\"number\"},{\"value\":\"adverbdegree\",\"display\":\"Adverb Degree\",\"category\":\"word\"},{\"value\":\"svg\",\"display\":\"Image SVG\",\"category\":\"html\"},{\"value\":\"int8\",\"display\":\"Int8\",\"category\":\"number\"},{\"value\":\"digitn\",\"display\":\"DigitN\",\"category\":\"string\"},{\"value\":\"adverbfrequencyindefinite\",\"display\":\"Adverb Frequency Indefinite\",\"category\":\"word\"},{\"value\":\"noun\",\"display\":\"Noun\",\"category\":\"word\"},{\"value\":\"pronounobject\",\"display\":\"Pronoun Object\",\"category\":\"word\"},{\"value\":\"errorruntime\",\"display\":\"Runtime error\",\"category\":\"error\"},{\"value\":\"errorvalidation\",\"display\":\"Validation error\",\"category\":\"error\"},{\"value\":\"firefoxuseragent\",\"display\":\"Firefox User Agent\",\"category\":\"internet\"},{\"value\":\"uuid\",\"display\":\"UUID\",\"category\":\"misc\"},{\"value\":\"creditcard\",\"display\":\"Credit Card\",\"category\":\"payment\"},{\"value\":\"phone\",\"display\":\"Phone\",\"category\":\"person\"},{\"value\":\"intn\",\"display\":\"IntN\",\"category\":\"number\"},{\"value\":\"bitcoinprivatekey\",\"display\":\"Bitcoin Private Key\",\"category\":\"payment\"},{\"value\":\"pronounpersonal\",\"display\":\"Pronoun Personal\",\"category\":\"word\"},{\"value\":\"sentence\",\"display\":\"Sentence\",\"category\":\"word\"},{\"value\":\"generate\",\"display\":\"Generate\",\"category\":\"generate\"},{\"value\":\"ssn\",\"display\":\"SSN\",\"category\":\"person\"},{\"value\":\"connective\",\"display\":\"Connective\",\"category\":\"word\"},{\"value\":\"pronounindefinite\",\"display\":\"Pronoun Indefinite\",\"category\":\"word\"},{\"value\":\"quote\",\"display\":\"Quote\",\"category\":\"word\"},{\"value\":\"animaltype\",\"display\":\"Animal Type\",\"category\":\"animal\"},{\"value\":\"weekday\",\"display\":\"Weekday\",\"category\":\"time\"},{\"value\":\"pronouninterrogative\",\"display\":\"Pronoun Interrogative\",\"category\":\"word\"},{\"value\":\"paragraph\",\"display\":\"Paragraph\",\"category\":\"word\"},{\"value\":\"city\",\"display\":\"City\",\"category\":\"address\"},{\"value\":\"minecraftwood\",\"display\":\"Minecraft wood\",\"category\":\"minecraft\"},{\"value\":\"bool\",\"display\":\"Boolean\",\"category\":\"misc\"},{\"value\":\"productdescription\",\"display\":\"Product Description\",\"category\":\"product\"},{\"value\":\"songartist\",\"display\":\"Song Artist\",\"category\":\"song\"},{\"value\":\"nounabstract\",\"display\":\"Noun Abstract\",\"category\":\"word\"}];\n\nconst FUNCS_VALUES: Set<string> = new Set(\n\tFUNCS.map(e => e.value.toLowerCase())\n);\n\nexport function hasFunc(name: string): boolean {\n\treturn FUNCS_VALUES.has(name.toLowerCase());\n}\n\nexport function getFuncs() {\n\treturn FUNCS;\n}\n","// Centralized style tokens for injected UI (avoid dependency on site CSS)\n\nexport const GOFAKEIT_COLORS = {\n\tprimary: '#ffa000',\n\twhite: '#ffffff',\n\tsuccess: '#48c774',\n\terror: '#ff3860',\n\tinfo: '#209cee',\n\ttext: '#ffffff',\n\tborder: '#686868',\n\tbackground: '#ffffff',\n};\n\nexport const GOFAKEIT_SPACING = {\n\tbase: 24, // px\n\thalf: 12, // px\n\tquarter: 8, // px\n};\n\nexport const GOFAKEIT_BORDER = {\n\tradius: 6, // px\n\twidth: 2, // px\n};\n\nexport const GOFAKEIT_FONT = {\n\tsize: 14, // px\n\tfamily: 'Helvetica, Arial, sans-serif',\n};\n","import { GOFAKEIT_COLORS, GOFAKEIT_SPACING, GOFAKEIT_BORDER, GOFAKEIT_FONT } from './styles';\n\n// Show error message as a floating tooltip over a form field\nexport function showFieldError(element: Element, message: string): void {\n  // Remove any existing error message\n  const existingError = document.querySelector('.gofakeit-error-tooltip');\n  if (existingError) {\n    existingError.remove();\n  }\n\n  // Create error tooltip element\n  const tooltip = document.createElement('div');\n  tooltip.className = 'gofakeit-error-tooltip';\n  tooltip.style.cssText = `\n    position: absolute;\n    z-index: 10001;\n    color: ${GOFAKEIT_COLORS.error};\n    font-size: ${GOFAKEIT_FONT.size}px;\n    font-family: ${GOFAKEIT_FONT.family};\n    background-color: ${GOFAKEIT_COLORS.background};\n    padding: ${GOFAKEIT_SPACING.quarter}px ${GOFAKEIT_SPACING.half}px;\n    border-radius: ${GOFAKEIT_BORDER.radius}px;\n    border: 1px solid ${GOFAKEIT_COLORS.error};\n    box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n    max-width: 300px;\n    word-wrap: break-word;\n    opacity: 0;\n    transform: translateY(-10px);\n    transition: opacity 0.3s ease, transform 0.3s ease;\n    pointer-events: none;\n  `;\n  tooltip.textContent = message;\n\n  // Add to body\n  document.body.appendChild(tooltip);\n\n  // Function to update tooltip position\n  function updateTooltipPosition() {\n    const rect = element.getBoundingClientRect();\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n    \n    const left = rect.left + scrollLeft;\n    const top = rect.top + scrollTop - tooltip.offsetHeight - 8;\n    \n    tooltip.style.left = `${left}px`;\n    tooltip.style.top = `${top}px`;\n  }\n\n  // Initial positioning\n  updateTooltipPosition();\n\n  // Add scroll and resize listeners\n  const scrollHandler = () => updateTooltipPosition();\n  const resizeHandler = () => updateTooltipPosition();\n  \n  // Listen to scroll events on window and all scrollable elements\n  window.addEventListener('scroll', scrollHandler, { passive: true });\n  window.addEventListener('resize', resizeHandler, { passive: true });\n  \n  // Also listen to scroll events on all elements with overflow scroll\n  const scrollableElements = document.querySelectorAll('*');\n  const scrollableListeners: Array<{ element: Element, handler: () => void }> = [];\n  \n  scrollableElements.forEach(el => {\n    const style = window.getComputedStyle(el);\n    if (style.overflow === 'scroll' || style.overflowY === 'scroll' || style.overflow === 'auto' || style.overflowY === 'auto') {\n      const listener = () => updateTooltipPosition();\n      el.addEventListener('scroll', listener, { passive: true });\n      scrollableListeners.push({ element: el, handler: listener });\n    }\n  });\n\n  // Fade in\n  requestAnimationFrame(() => {\n    tooltip.style.opacity = '1';\n    tooltip.style.transform = 'translateY(0)';\n  });\n\n  // Remove tooltip after 5 seconds with fade out\n  setTimeout(() => {\n    tooltip.style.opacity = '0';\n    tooltip.style.transform = 'translateY(-10px)';\n    \n    // Remove event listeners\n    window.removeEventListener('scroll', scrollHandler);\n    window.removeEventListener('resize', resizeHandler);\n    \n    // Remove scrollable element listeners\n    scrollableListeners.forEach(({ element, handler }) => {\n      element.removeEventListener('scroll', handler);\n    });\n    \n    setTimeout(() => {\n      if (tooltip.parentElement) {\n        tooltip.parentElement.removeChild(tooltip);\n      }\n    }, 300);\n  }, 5000);\n}\n","// Base URL for the Gofakeit API\nconst GOFAKEIT_API_BASE = 'https://api.gofakeit.com/funcs'\n\nexport interface ApiResponse {\n  success: boolean;\n  data?: string;\n  error?: string;\n  status?: number;\n}\n\n// Fetch data from gofakeit API\nexport async function callFunc(func: string): Promise<ApiResponse> {\n  // Check if the function contains query parameters\n  const questionMarkIndex = func.indexOf('?');\n  \n  if (questionMarkIndex !== -1) {\n    // Function has query parameters - use POST with JSON body\n    const functionName = func.substring(0, questionMarkIndex);\n    const queryString = func.substring(questionMarkIndex + 1);\n    \n    // Parse query parameters into an object\n    const params: Record<string, unknown> = {};\n    const searchParams = new URLSearchParams(queryString);\n    \n    for (const [key, value] of searchParams.entries()) {\n      // Try to parse as number if possible\n      const numValue = parseFloat(value);\n      params[key] = isNaN(numValue) ? value : numValue;\n    }\n    \n    return makeRequest('POST', `${GOFAKEIT_API_BASE}/${functionName}`, params);\n  } else {\n    // Simple function - use GET request\n    return makeRequest('GET', `${GOFAKEIT_API_BASE}/${func}`);\n  }\n}\n\n// Fetch random string from an array of strings using gofakeit API\nexport async function fetchRandomString(strings: string[]): Promise<ApiResponse> {\n  return makeRequest('POST', `${GOFAKEIT_API_BASE}/randomstring`, { strs: strings });\n}\n\n// Base HTTP request function\nasync function makeRequest(method: 'GET' | 'POST', url: string, body?: Record<string, unknown>): Promise<ApiResponse> {\n  try {\n    const options: {\n      method: string;\n      headers: Record<string, string>;\n      body?: string;\n    } = {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    };\n\n    if (method === 'POST' && body) {\n      options.body = JSON.stringify(body);\n    }\n\n    const response = await fetch(url, options);\n    \n    if (!response.ok) {\n      return {\n        success: false,\n        error: `HTTP error! status: ${response.status}`,\n        status: response.status\n      };\n    }\n    \n    const data = await response.text();\n    return {\n      success: true,\n      data: data\n    };\n  } catch (error) {\n    console.error(`[Gofakeit Autofill] Error in ${method} request to ${url}:`, error);\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Unknown error'\n    };\n  }\n}\n","import { callFunc } from './api';\nimport { handleError } from './autofill';\n\n// Get ISO week number for a date\nfunction getISOWeek(date: Date): number {\n  const d = new Date(date.getTime());\n  d.setUTCHours(0, 0, 0, 0);\n  // Thursday in current week decides the year\n  d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() || 7));\n  // January 4 is always in week 1\n  const week1 = new Date(d.getUTCFullYear(), 0, 4);\n  // Adjust to Thursday in week 1 and count number of weeks from date to week1\n  const week = Math.ceil((((d.getTime() - week1.getTime()) / 86400000) - 3 + (week1.getUTCDay() || 7)) / 7);\n  return week;\n}\n\n// Handle date/time input elements\nexport async function handleDateTimeInput(element: HTMLInputElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  const inputType = element.type.toLowerCase();\n  \n  try {\n    switch (inputType) {\n      case 'date': {\n        // Use the provided function or default to 'date'\n        const dateFunc = gofakeitFunc === 'true' ? 'date' : gofakeitFunc;\n        const dateResponse = await callFunc(dateFunc);\n        \n        if (!dateResponse.success) {\n          console.warn(`[Gofakeit Autofill] Error for ${inputType} input:`, dateResponse.error);\n          if (dateResponse.status === 400) {\n            handleError(element, `Failed to get random ${inputType}`);\n          }\n          return { success: false, usedFunc: dateFunc };\n        }\n        \n        // Parse the ISO date string (e.g., \"1935-03-01T19:02:35Z\") and extract just the date part\n        try {\n          const dateString = dateResponse.data!;\n          const dateMatch = dateString.match(/^(\\d{4}-\\d{2}-\\d{2})/);\n          if (dateMatch) {\n            element.value = dateMatch[1]; // Extract YYYY-MM-DD part\n          } else {\n            console.warn('[Gofakeit Autofill] Could not parse date from response:', dateString);\n            return { success: false, usedFunc: dateFunc };\n          }\n        } catch (error) {\n          console.warn('[Gofakeit Autofill] Error parsing date response:', error);\n          return { success: false, usedFunc: dateFunc };\n        }\n        break;\n      }\n        \n      case 'time': {\n        // Use gofakeit hour and minute functions to create time format\n        const hourResponse = await callFunc('hour');\n        const minuteResponse = await callFunc('minute');\n        \n        if (!hourResponse.success || !minuteResponse.success) {\n          console.warn('[Gofakeit Autofill] Error getting hour or minute:', hourResponse.error || minuteResponse.error);\n          if (hourResponse.status === 400 || minuteResponse.status === 400) {\n            handleError(element, 'Failed to get random time');\n          }\n          return { success: false, usedFunc: 'hour/minute' };\n        }\n        \n        // Format time as HH:MM\n        const hour = hourResponse.data!.padStart(2, '0');\n        const minute = minuteResponse.data!.padStart(2, '0');\n        element.value = `${hour}:${minute}`;\n        break;\n      }\n        \n      case 'datetime-local': {\n        // Use the provided function or default to 'date' (which includes time)\n        const datetimeFunc = gofakeitFunc === 'true' ? 'date' : gofakeitFunc;\n        const datetimeResponse = await callFunc(datetimeFunc);\n        \n        if (!datetimeResponse.success) {\n          console.warn(`[Gofakeit Autofill] Error for ${inputType} input:`, datetimeResponse.error);\n          if (datetimeResponse.status === 400) {\n            handleError(element, `Failed to get random ${inputType}`);\n          }\n          return { success: false, usedFunc: datetimeFunc };\n        }\n        \n        // Parse the ISO datetime string (e.g., \"1935-03-01T19:02:35Z\") and extract datetime-local format\n        try {\n          const datetimeString = datetimeResponse.data!;\n          const datetimeMatch = datetimeString.match(/^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}):\\d{2}/);\n          if (datetimeMatch) {\n            element.value = datetimeMatch[1]; // Extract YYYY-MM-DDTHH:MM part\n          } else {\n            console.warn('[Gofakeit Autofill] Could not parse datetime from response:', datetimeString);\n            return { success: false, usedFunc: datetimeFunc };\n          }\n        } catch (error) {\n          console.warn('[Gofakeit Autofill] Error parsing datetime response:', error);\n          return { success: false, usedFunc: datetimeFunc };\n        }\n        break;\n      }\n        \n      case 'month': {\n        // Use gofakeit year and month functions\n        const yearResponse = await callFunc('year');\n        const monthResponse = await callFunc('month');\n        \n        if (!yearResponse.success || !monthResponse.success) {\n          console.warn('[Gofakeit Autofill] Error getting year or month:', yearResponse.error || monthResponse.error);\n          if (yearResponse.status === 400 || monthResponse.status === 400) {\n            handleError(element, 'Failed to get random month');\n          }\n          return { success: false, usedFunc: 'year/month' };\n        }\n        \n        // Format month as YYYY-MM\n        const month = monthResponse.data!.padStart(2, '0');\n        element.value = `${yearResponse.data!}-${month}`;\n        break;\n      }\n        \n      case 'week': {\n        // Use the provided function or default to year + number range\n        const weekFunc = gofakeitFunc === 'true' ? 'date' : gofakeitFunc;\n        \n        if (weekFunc === 'date' || weekFunc.startsWith('daterange')) {\n          // Use date/daterange function and extract week from the result\n          const weekDateResponse = await callFunc(weekFunc);\n          \n          if (!weekDateResponse.success) {\n            console.warn('[Gofakeit Autofill] Error getting date for week:', weekDateResponse.error);\n            if (weekDateResponse.status === 400) {\n              handleError(element, 'Failed to get random week');\n            }\n            return { success: false, usedFunc: weekFunc };\n          }\n          \n          // Parse the ISO date string and extract week\n          try {\n            const dateString = weekDateResponse.data!;\n            const dateMatch = dateString.match(/^(\\d{4}-\\d{2}-\\d{2})/);\n            if (dateMatch) {\n              const date = new Date(dateMatch[1]);\n              const year = date.getFullYear();\n              const week = getISOWeek(date);\n              element.value = `${year}-W${week.toString().padStart(2, '0')}`;\n            } else {\n              console.warn('[Gofakeit Autofill] Could not parse date for week from response:', dateString);\n              return { success: false, usedFunc: weekFunc };\n            }\n          } catch (error) {\n            console.warn('[Gofakeit Autofill] Error parsing date for week:', error);\n            return { success: false, usedFunc: weekFunc };\n          }\n        } else {\n          // Use gofakeit year and number range for week (1-53)\n          const weekYearResponse = await callFunc('year');\n          const weekResponse = await callFunc('number?min=1&max=53');\n          \n          if (!weekYearResponse.success || !weekResponse.success) {\n            console.warn('[Gofakeit Autofill] Error getting year or week:', weekYearResponse.error || weekResponse.error);\n            if (weekYearResponse.status === 400 || weekResponse.status === 400) {\n              handleError(element, 'Failed to get random week');\n            }\n            return { success: false, usedFunc: 'year/number?min=1&max=53' };\n          }\n          \n          // Format week as YYYY-W## (ISO week format)\n          const week = weekResponse.data!.padStart(2, '0');\n          element.value = `${weekYearResponse.data!}-W${week}`;\n        }\n        break;\n      }\n        \n      default:\n        console.warn('[Gofakeit Autofill] Unknown date/time input type:', inputType);\n        return { success: false, usedFunc: gofakeitFunc };\n    }\n    \n    // Trigger events to ensure any listeners are notified\n    element.dispatchEvent(new Event('input', { bubbles: true }));\n    element.dispatchEvent(new Event('change', { bubbles: true }));\n    \n    return { success: true, usedFunc: gofakeitFunc === 'true' ? inputType : gofakeitFunc };\n    \n  } catch (error) {\n    console.warn(`[Gofakeit Autofill] Unexpected error handling ${inputType} input:`, error);\n    return { success: false, usedFunc: gofakeitFunc };\n  }\n}\n","import { callFunc } from './api';\nimport { handleError } from './autofill';\n\n// Handle text input elements (text, email, tel, password, search, url, color)\nexport async function handleTextInput(element: HTMLInputElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  const inputType = element.type.toLowerCase();\n  \n  // Map input types to appropriate gofakeit functions if 'true' is passed\n  let functionToCall = gofakeitFunc;\n  if (gofakeitFunc === 'true') {\n    switch (inputType) {\n      case 'email':\n        functionToCall = 'email';\n        break;\n      case 'tel':\n        functionToCall = 'phone';\n        break;\n      case 'password':\n        functionToCall = 'password';\n        break;\n      case 'search':\n        functionToCall = 'word';\n        break;\n      case 'url':\n        functionToCall = 'url';\n        break;\n      case 'color':\n        functionToCall = 'hexcolor';\n        break;\n      default:\n        functionToCall = 'word'; // Default for text inputs\n    }\n  }\n  \n  const response = await callFunc(functionToCall);\n  \n  if (!response.success) {\n    console.warn(`[Gofakeit Autofill] Error for function ${functionToCall}:`, response.error);\n    \n    if (response.status === 400) {\n      handleError(element, '', functionToCall);\n    }\n    return { success: false, usedFunc: functionToCall };\n  }\n  \n  element.value = response.data!;\n  \n  // Trigger events to ensure any listeners are notified\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n  element.dispatchEvent(new Event('change', { bubbles: true }));\n  \n  return { success: true, usedFunc: functionToCall };\n}\n\n// Handle textarea elements\nexport async function handleTextarea(element: HTMLTextAreaElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  // Use sentence function if 'true' is passed, otherwise use the provided function\n  const functionToCall = gofakeitFunc === 'true' ? 'sentence' : gofakeitFunc;\n  const response = await callFunc(functionToCall);\n  \n  if (!response.success) {\n    console.warn(`[Gofakeit Autofill] Error for function ${functionToCall}:`, response.error);\n    \n    if (response.status === 400) {\n      handleError(element, '', functionToCall);\n    }\n    return { success: false, usedFunc: functionToCall };\n  }\n  \n  element.value = response.data!;\n  \n  // Trigger events to ensure any listeners are notified\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n  element.dispatchEvent(new Event('change', { bubbles: true }));\n  \n  return { success: true, usedFunc: functionToCall };\n}\n","import { callFunc, fetchRandomString } from './api';\nimport { handleError } from './autofill';\n\n// Handle checkbox input elements\nexport async function handleCheckbox(element: HTMLInputElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  // Find the checkbox group by name\n  const checkboxGroup = findCheckboxGroup(element);\n  \n  if (checkboxGroup.length === 0) {\n    console.warn('[Gofakeit Autofill] No checkbox group found for element:', element);\n    return { success: false, usedFunc: 'bool' };\n  }\n  \n  // Use boolean function if 'true' is passed, otherwise use the provided function\n  const functionToCall = gofakeitFunc === 'true' ? 'bool' : gofakeitFunc;\n  \n  // For checkbox groups, we want to select multiple checkboxes\n  if (gofakeitFunc === 'true') {\n    // Select roughly half of the checkboxes in the group\n    const numToSelect = Math.max(1, Math.ceil(checkboxGroup.length / 2));\n    \n    // Clear all checkboxes first\n    checkboxGroup.forEach(cb => {\n      cb.checked = false;\n      cb.dispatchEvent(new Event('change', { bubbles: true }));\n    });\n    \n    // Select random checkboxes using API\n    const selectedIndices = new Set<number>();\n    for (let i = 0; i < numToSelect; i++) {\n      const boolResponse = await callFunc('bool');\n      if (boolResponse.success) {\n        const shouldSelect = boolResponse.data!.toLowerCase() === 'true' || boolResponse.data!.toLowerCase() === '1';\n        if (shouldSelect) {\n          // Find an unselected checkbox\n          const availableIndices = Array.from({ length: checkboxGroup.length }, (_, i) => i)\n            .filter(i => !selectedIndices.has(i));\n          \n          if (availableIndices.length > 0) {\n            const randomIndex = availableIndices[Math.floor(Math.random() * availableIndices.length)];\n            selectedIndices.add(randomIndex);\n            checkboxGroup[randomIndex].checked = true;\n            checkboxGroup[randomIndex].dispatchEvent(new Event('change', { bubbles: true }));\n          }\n        }\n      }\n    }\n  } else {\n    // For custom functions, use the response to determine which checkboxes to select\n    const response = await callFunc(functionToCall);\n    \n    if (!response.success) {\n      console.warn(`[Gofakeit Autofill] Error for function ${functionToCall}:`, response.error);\n      \n      if (response.status === 400) {\n        handleError(element, '', functionToCall);\n      }\n      return { success: false, usedFunc: functionToCall };\n    }\n    \n    // Clear all checkboxes first\n    checkboxGroup.forEach(cb => {\n      cb.checked = false;\n      cb.dispatchEvent(new Event('change', { bubbles: true }));\n    });\n    \n    // Parse the response to determine which checkboxes to select\n    const values = response.data!.split(',').map(v => v.trim());\n    \n    checkboxGroup.forEach((cb, index) => {\n      const shouldCheck = values.includes(cb.value) || values.includes(index.toString());\n      cb.checked = shouldCheck;\n      cb.dispatchEvent(new Event('change', { bubbles: true }));\n    });\n  }\n  \n  return { success: true, usedFunc: functionToCall };\n}\n\n// Handle radio input elements\nexport async function handleRadio(element: HTMLInputElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  // Find the radio group by name\n  const radioGroup = findRadioGroup(element);\n  \n  if (radioGroup.length === 0) {\n    console.warn('[Gofakeit Autofill] No radio group found for element:', element);\n    return { success: false, usedFunc: 'bool' };\n  }\n  \n  // Use boolean function if 'true' is passed, otherwise use the provided function\n  const functionToCall = gofakeitFunc === 'true' ? 'bool' : gofakeitFunc;\n  \n  // For radio groups, we want to select exactly one radio button\n  if (gofakeitFunc === 'true') {\n    // Clear all radio buttons first\n    radioGroup.forEach((rb: HTMLInputElement) => {\n      rb.checked = false;\n      rb.dispatchEvent(new Event('change', { bubbles: true }));\n    });\n    \n    // Select a random radio button using API\n    const boolResponse = await callFunc('bool');\n    if (boolResponse.success) {\n      const shouldSelect = boolResponse.data!.toLowerCase() === 'true' || boolResponse.data!.toLowerCase() === '1';\n      if (shouldSelect) {\n        const randomIndex = Math.floor(Math.random() * radioGroup.length);\n        radioGroup[randomIndex].checked = true;\n        radioGroup[randomIndex].dispatchEvent(new Event('change', { bubbles: true }));\n      }\n    }\n  } else {\n    // For custom functions, use the response to determine which radio button to select\n    const response = await callFunc(functionToCall);\n    \n    if (!response.success) {\n      console.warn(`[Gofakeit Autofill] Error for function ${functionToCall}:`, response.error);\n      \n      if (response.status === 400) {\n        handleError(element, '', functionToCall);\n      }\n      return { success: false, usedFunc: functionToCall };\n    }\n    \n    // Clear all radio buttons first\n    radioGroup.forEach((rb: HTMLInputElement) => {\n      rb.checked = false;\n      rb.dispatchEvent(new Event('change', { bubbles: true }));\n    });\n    \n    // Parse the response to determine which radio button to select\n    const value = response.data!.trim();\n    \n    // Try to find by value first, then by index\n    let selectedRadio = radioGroup.find((rb: HTMLInputElement) => rb.value === value);\n    if (!selectedRadio && !isNaN(Number(value))) {\n      const index = parseInt(value);\n      if (index >= 0 && index < radioGroup.length) {\n        selectedRadio = radioGroup[index];\n      }\n    }\n    \n    // If no match found, select the first one\n    if (selectedRadio) {\n      selectedRadio.checked = true;\n      selectedRadio.dispatchEvent(new Event('change', { bubbles: true }));\n    }\n  }\n  \n  return { success: true, usedFunc: functionToCall };\n}\n\n// Helper function to find checkbox group\nfunction findCheckboxGroup(element: HTMLInputElement): HTMLInputElement[] {\n  if (element.type !== 'checkbox') return [element];\n  \n  // Look for checkboxes with the same name or in the same container\n  const name = element.name;\n  const container = element.closest('form, div, fieldset') || document;\n  \n  if (name) {\n    // Find checkboxes with the same name\n    return Array.from(container.querySelectorAll(`input[type=\"checkbox\"][name=\"${name}\"]`));\n  } else {\n    // Find checkboxes in the same container\n    return Array.from(container.querySelectorAll('input[type=\"checkbox\"]'));\n  }\n}\n\n// Helper function to find radio group\nfunction findRadioGroup(element: HTMLInputElement): HTMLInputElement[] {\n  if (element.type !== 'radio') return [element];\n  \n  // Look for radio buttons with the same name\n  const name = element.name;\n  const container = element.closest('form, div, fieldset') || document;\n  \n  if (name) {\n    // Find radio buttons with the same name\n    return Array.from(container.querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`));\n  } else {\n    // Find radio buttons in the same container\n    return Array.from(container.querySelectorAll('input[type=\"radio\"]'));\n  }\n}\n\n// Handle select dropdown\nexport async function handleSelectWithFunction(element: HTMLSelectElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  const options = Array.from(element.options).map(option => option.value).filter(value => value !== '');\n  \n  if (options.length === 0) {\n    console.warn('[Gofakeit Autofill] Select element has no valid options:', element);\n    return { success: false, usedFunc: gofakeitFunc };\n  }\n  \n  let response;\n  if (gofakeitFunc === 'true') {\n    // Use random selection for 'true'\n    response = await fetchRandomString(options);\n  } else {\n    // Use custom function\n    response = await callFunc(gofakeitFunc);\n  }\n  \n  if (!response.success) {\n    console.warn(`[Gofakeit Autofill] Error for select:`, response.error);\n    if (response.status === 400) {\n      handleError(element, 'Failed to get selection');\n    }\n    return { success: false, usedFunc: gofakeitFunc };\n  }\n  \n  if (element.multiple) {\n    // Handle multiselect\n    Array.from(element.options).forEach(option => option.selected = false);\n    \n    if (gofakeitFunc === 'true') {\n      // For random selection, select multiple options (roughly half)\n      const numToSelect = Math.min(Math.ceil(options.length / 2), options.length);\n      const selectedValues = [response.data!];\n      \n      // Add more random selections\n      const remainingOptions = options.filter(opt => opt !== response.data!);\n      for (let i = 1; i < numToSelect && remainingOptions.length > 0; i++) {\n        const randomIndex = Math.floor(Math.random() * remainingOptions.length);\n        selectedValues.push(remainingOptions.splice(randomIndex, 1)[0]);\n      }\n      \n      selectedValues.forEach(value => {\n        const option = element.options.namedItem(value) || Array.from(element.options).find(opt => opt.value === value);\n        if (option) option.selected = true;\n      });\n    } else {\n      // Parse comma-separated values for custom function\n      const selectedValues = response.data!.split(',').map(val => val.trim()).filter(val => val !== '');\n      selectedValues.forEach(value => {\n        const option = element.options.namedItem(value) || Array.from(element.options).find(opt => opt.value === value);\n        if (option) option.selected = true;\n      });\n    }\n  } else {\n    element.value = response.data!;\n  }\n  \n  element.dispatchEvent(new Event('change', { bubbles: true }));\n  return { success: true, usedFunc: gofakeitFunc === 'true' ? 'random' : gofakeitFunc };\n}\n","import { callFunc } from './api';\nimport { handleError } from './autofill';\n\n// Handle number input elements\nexport async function handleNumberInput(element: HTMLInputElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  // Use number function if 'true' is passed, otherwise use the provided function\n  const functionToCall = gofakeitFunc === 'true' ? 'number' : gofakeitFunc;\n  const response = await callFunc(functionToCall);\n  \n  if (!response.success) {\n    console.warn(`[Gofakeit Autofill] Error for function ${functionToCall}:`, response.error);\n    \n    if (response.status === 400) {\n      handleError(element, '', functionToCall);\n    }\n    return { success: false, usedFunc: functionToCall };\n  }\n  \n  element.value = response.data!;\n  \n  // Trigger events to ensure any listeners are notified\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n  element.dispatchEvent(new Event('change', { bubbles: true }));\n  \n  return { success: true, usedFunc: functionToCall };\n}\n\n// Handle range input elements\nexport async function handleRangeInput(element: HTMLInputElement): Promise<{ success: boolean, usedFunc: string }> {\n  // For range inputs, always use gofakeit API with min/max from the element\n  const min = parseFloat(element.min) || 0;\n  const max = parseFloat(element.max) || 100;\n  \n  // Use number function with min/max parameters\n  const functionToCall = `number?min=${min}&max=${max}`;\n  const response = await callFunc(functionToCall);\n  \n  if (!response.success) {\n    console.warn(`[Gofakeit Autofill] Error for range input:`, response.error);\n    \n    if (response.status === 400) {\n      handleError(element, 'Failed to get random number for range');\n    }\n    return { success: false, usedFunc: functionToCall };\n  }\n  \n  element.value = response.data!;\n  \n  // Trigger events to ensure any listeners are notified\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n  element.dispatchEvent(new Event('change', { bubbles: true }));\n  \n  return { success: true, usedFunc: functionToCall };\n}\n","import { hasFunc } from './funcs';\nimport { GOFAKEIT_COLORS } from './styles';\nimport { showFieldError } from './field-error';\nimport { handleDateTimeInput } from './input-datetime';\nimport { handleTextInput, handleTextarea } from './input-text';\nimport { handleCheckbox, handleRadio, handleSelectWithFunction } from './input-misc';\nimport { handleNumberInput, handleRangeInput } from './input-number';\n\n// Settings interface for autofill configuration\nexport interface AutofillSettings {\n  smart?: boolean;\n}\n\n// ============================================================================\n// MAIN PUBLIC FUNCTIONS (Entry Points)\n// ============================================================================\n\n// Unified autofill function that handles all cases\nexport async function autofill(target?: HTMLElement | Element, settings?: AutofillSettings): Promise<boolean | void> {\n  const defaultSettings: AutofillSettings = { smart: true }; // Default to true for backward compatibility\n  const finalSettings = { ...defaultSettings, ...settings };\n  \n  // No parameters - autofill all form fields on the page\n  if (!target) {\n    return autofillAll(finalSettings);\n  }\n  \n  // If target is a container (has form fields), autofill the container\n  if (target instanceof HTMLElement && hasFormFields(target)) {\n    return autofillContainer(target, finalSettings);\n  }\n  \n  // If target is a form element, autofill just that element\n  if (target instanceof HTMLInputElement || target instanceof HTMLTextAreaElement || target instanceof HTMLSelectElement) {\n    const success = await autofillElement(target, finalSettings);\n    if (!success) {\n      showNotification('Failed to autofill the specified element', 'error');\n    }\n    return success;\n  }\n  \n  // If target is a container but doesn't have form fields, try to find a container\n  if (target instanceof HTMLElement) {\n    const container = findFormContainer(target);\n    if (container) {\n      return autofillContainer(container, finalSettings);\n    }\n  }\n  \n  // For non-form elements, return false instead of falling back to autofill all\n  return false;\n}\n\n// Autofill all form fields on the page\nasync function autofillAll(settings: AutofillSettings): Promise<void> {\n  const elements = queryFormElements();\n  const smartMode = settings.smart ?? true;\n\n  // Smart mode: Fill ALL form fields (except those explicitly excluded)\n  // Manual mode: Only fill fields with data-gofakeit attributes\n  const targetsBase = smartMode\n    ? elements\n    : elements.filter((el) => (el as Element).hasAttribute('data-gofakeit'));\n  const targets = targetsBase.filter((el) => !isDataGofakeitFalse(el));\n\n  if (targets.length === 0) {\n    if (!smartMode) {\n      showNotification('No data-gofakeit fields exist. Turn on Smart mode to fill all form fields.', 'info');\n    } else {\n      showNotification('No form fields found to autofill', 'info');\n    }\n    return;\n  }\n\n  console.log(`[Gofakeit] Found ${targets.length} elements to generate data for`);\n  showNotification(`Starting data generation for ${targets.length} fields...`, 'info');\n\n  const results = await processElements(targets, settings);\n  showResults(results.success, results.failed, 'Autofill');\n}\n\n// Autofill all fields within a specific container\nasync function autofillContainer(container: HTMLElement, settings: AutofillSettings): Promise<void> {\n  const elements = queryFormElements(container);\n  const smartMode = settings.smart ?? true;\n\n  // Smart mode: Fill ALL form fields in container (except those explicitly excluded)\n  // Manual mode: Only fill fields with data-gofakeit attributes\n  const targetsBase = smartMode\n    ? elements\n    : elements.filter((el) => (el as Element).hasAttribute('data-gofakeit'));\n  const targets = targetsBase.filter((el) => !isDataGofakeitFalse(el));\n\n  if (targets.length === 0) {\n    if (!smartMode) {\n      showNotification('No data-gofakeit fields exist in this section. Turn on Smart mode to fill all form fields.', 'info');\n    } else {\n      showNotification('No form fields found in this container', 'info');\n    }\n    return;\n  }\n  \n  console.log(`[Gofakeit] Found ${targets.length} elements to generate data for in container`);\n  showNotification(`Starting data generation for ${targets.length} fields...`, 'info');\n  \n  const results = await processElements(targets, settings);\n  showResults(results.success, results.failed, 'Container autofill');\n}\n\n// Main autofill function that routes to specific handlers\nasync function autofillElement(element: Element, settings: AutofillSettings): Promise<boolean> {\n  const gofakeitFunc = element.getAttribute('data-gofakeit');\n  if (typeof gofakeitFunc === 'string' && gofakeitFunc.trim().toLowerCase() === 'false') {\n    return false;\n  }\n  \n  const smartMode = settings.smart ?? true;\n  // Smart mode: Fill any form field (even without data-gofakeit attribute)\n  // Manual mode: Only fill fields that have data-gofakeit attributes\n  if (!gofakeitFunc && !smartMode) {\n    return false;\n  }\n\n  try {\n    // Handle select dropdowns\n    if (element instanceof HTMLSelectElement) {\n      const funcToUse = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : 'true';\n      const { success, usedFunc } = await handleSelectWithFunction(element, funcToUse);\n      if (success) {\n        showFunctionBadge(element, usedFunc);\n      }\n      return success;\n    }\n    \n    // Handle textarea elements\n    if (element instanceof HTMLTextAreaElement) {\n      const funcToUse = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : 'sentence';\n      const { success, usedFunc } = await handleTextarea(element, funcToUse);\n      if (success) {\n        showFunctionBadge(element, usedFunc);\n      }\n      return success;\n    }\n    \n    // Handle input elements\n    if (element instanceof HTMLInputElement) {\n      const inputType = element.type.toLowerCase();\n      \n      // Handle checkbox inputs\n      if (inputType === 'checkbox') {\n        const passToHandler = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : 'true';\n        const { success, usedFunc } = await handleCheckbox(element, passToHandler);\n        if (success) {\n          showFunctionBadge(element, usedFunc);\n        }\n        return success;\n      }\n      \n      // Handle radio inputs\n      if (inputType === 'radio') {\n        const passToHandler = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : 'true';\n        const { success, usedFunc } = await handleRadio(element, passToHandler);\n        if (success) {\n          showFunctionBadge(element, usedFunc);\n        }\n        return success;\n      }\n      \n      // Handle number inputs\n      if (inputType === 'number') {\n        const inferred = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : (await inferFunctionForInput(element));\n        const { success, usedFunc } = await handleNumberInput(element, inferred);\n        if (success) {\n          showFunctionBadge(element, usedFunc);\n        }\n        return success;\n      }\n      \n      // Handle range inputs\n      if (inputType === 'range') {\n        const { success, usedFunc } = await handleRangeInput(element);\n        if (success) {\n          showFunctionBadge(element, usedFunc);\n        }\n        return success;\n      }\n      \n      // Handle date/time inputs\n      if (inputType === 'date' || inputType === 'time' || inputType === 'datetime-local' || \n          inputType === 'month' || inputType === 'week') {\n        const inferred = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : (await inferFunctionForInput(element));\n        const { success, usedFunc } = await handleDateTimeInput(element, inferred);\n        if (success) {\n          showFunctionBadge(element, usedFunc);\n        }\n        return success;\n      }\n      \n      // Handle text inputs (text, email, tel, password, search, url, color, etc.)\n      const inferred = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : (await inferFunctionForInput(element));\n      const { success, usedFunc } = await handleTextInput(element, inferred);\n      if (success) {\n        showFunctionBadge(element, usedFunc);\n      }\n      return success;\n    }\n    \n    console.warn('[Gofakeit] Unsupported element type:', element);\n    return false;\n    \n  } catch (error) {\n    console.error('[Gofakeit] Unexpected error generating data for element:', element, error);\n    return false;\n  }\n}\n\n// ============================================================================\n// PROCESSING FUNCTIONS (Called by main functions)\n// ============================================================================\n\n// Query all form elements that can be autofilled\nfunction queryFormElements(container?: HTMLElement): Element[] {\n  const selector = 'input, textarea, select';\n  const nodeList = container ? container.querySelectorAll(selector) : document.querySelectorAll(selector);\n  const elements: Element[] = [];\n  nodeList.forEach((el) => {\n    if (el instanceof HTMLInputElement) {\n      if (el.type === 'hidden' || el.disabled || el.readOnly) return;\n      elements.push(el);\n    } else if (el instanceof HTMLTextAreaElement) {\n      if (el.disabled || el.readOnly) return;\n      elements.push(el);\n    } else if (el instanceof HTMLSelectElement) {\n      if (el.disabled) return;\n      elements.push(el);\n    }\n  });\n  return elements;\n}\n\nfunction isDataGofakeitFalse(el: Element): boolean {\n  const val = (el as Element).getAttribute && (el as Element).getAttribute('data-gofakeit');\n  return typeof val === 'string' && val.trim().toLowerCase() === 'false';\n}\n\n// Get unique elements, handling checkbox and radio groups\nfunction getUniqueElements(elements: Element[]): Element[] {\n  const uniqueElements: Element[] = [];\n  const processedGroups = new Set<string>();\n  \n  for (const element of elements) {\n    if (element instanceof HTMLInputElement) {\n      const inputType = element.type.toLowerCase();\n      \n      if (inputType === 'checkbox' || inputType === 'radio') {\n        const name = element.name;\n        if (name && processedGroups.has(name)) {\n          // Skip if we've already processed this group\n          continue;\n        }\n        if (name) {\n          processedGroups.add(name);\n        }\n      }\n    }\n    \n    uniqueElements.push(element);\n  }\n  \n  return uniqueElements;\n}\n\n// Process multiple elements and track results\nasync function processElements(elements: Element[], settings: AutofillSettings): Promise<{ success: number, failed: number }> {\n  let successfulCount = 0;\n  let failedCount = 0;\n  \n  // Get unique elements to avoid processing checkbox/radio groups multiple times\n  const uniqueElements = getUniqueElements(elements);\n\n  for (const element of uniqueElements) {\n    try {\n      const success = await autofillElement(element, settings);\n      if (success) {\n        successfulCount++;\n        \n        // Monitor if the value gets cleared after a short delay\n        setTimeout(() => {\n          if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\n            if (element.value === '') {\n              console.warn('[Gofakeit Autofill] Value was cleared for element:', element);\n            }\n          } else if (element instanceof HTMLSelectElement) {\n            if (element.value === '') {\n              console.warn('[Gofakeit Autofill] Value was cleared for select:', element);\n            }\n          }\n        }, 1000);\n        \n      } else {\n        failedCount++;\n      }\n    } catch (error) {\n      failedCount++;\n      console.warn(`[Gofakeit Autofill] Failed to autofill element:`, element, error);\n    }\n  }\n\n  return { success: successfulCount, failed: failedCount };\n}\n\n// Show results notification\nfunction showResults(successfulCount: number, failedCount: number, context: string): void {\n  // Show successful count notification\n  if (successfulCount > 0) {\n    console.log(`[Gofakeit] ${context} completed successfully for ${successfulCount} fields`);\n    showNotification(`Successfully generated data for ${successfulCount} fields!`, 'success');\n  }\n  \n  // Show failed count notification\n  if (failedCount > 0) {\n    console.error(`[Gofakeit] ${context} failed for ${failedCount} fields`);\n    showNotification(`Failed to generate data for ${failedCount} fields.`, 'error');\n  }\n  \n  // If no fields were processed at all\n  if (successfulCount === 0 && failedCount === 0) {\n    console.log(`[Gofakeit] ${context} - no fields were processed`);\n    showNotification(`No fields were processed.`, 'info');\n  }\n}\n\n// ============================================================================\n// UTILITY FUNCTIONS (Called by various functions)\n// ============================================================================\n\n// Handle error display and field highlighting\nexport function handleError(element: Element, error: string, functionName?: string): void {\n  if (element instanceof HTMLElement) {\n    element.style.border = `2px solid ${GOFAKEIT_COLORS.error}`;\n    \n    setTimeout(() => {\n      element.style.border = '';\n    }, 5000);\n  }\n  \n  const message = functionName ? `Invalid function: ${functionName}` : error;\n  showFieldError(element, message);\n}\n\n// Check if an element contains form fields with data-gofakeit attributes\nexport function hasFormFields(element: HTMLElement): boolean {\n  const formFields = element.querySelectorAll('input[data-gofakeit], textarea[data-gofakeit], select[data-gofakeit]');\n  return formFields.length > 0;\n}\n\n// Check if an element is a form field with data-gofakeit attribute\nexport function isFormField(element: HTMLElement): boolean {\n  return (\n    (element.tagName === 'INPUT' || element.tagName === 'TEXTAREA' || element.tagName === 'SELECT') &&\n    element.hasAttribute('data-gofakeit')\n  );\n}\n\n// Display a small badge showing the function used for this field\nfunction showFunctionBadge(element: Element, funcName: string): void {\n  if (!(element instanceof HTMLElement)) return;\n\n  const badge = document.createElement('div');\n  badge.textContent = funcName;\n  badge.style.position = 'fixed';\n  badge.style.background = GOFAKEIT_COLORS.primary;\n  badge.style.color = '#000';\n  badge.style.fontFamily = 'Arial, sans-serif';\n  badge.style.fontSize = '11px';\n  badge.style.padding = '3px 8px';\n  badge.style.borderRadius = '6px';\n  badge.style.boxShadow = '0 2px 6px rgba(0,0,0,0.25)';\n  badge.style.zIndex = '2147483647';\n  badge.style.opacity = '0';\n  badge.style.transform = 'translateY(-6px)';\n  badge.style.transition = 'opacity 200ms ease, transform 200ms ease';\n  badge.style.pointerEvents = 'none';\n\n  const updatePosition = () => {\n    const rect = element.getBoundingClientRect();\n    const vh = window.innerHeight || document.documentElement.clientHeight;\n    const vw = window.innerWidth || document.documentElement.clientWidth;\n\n    // If the element is completely out of the viewport, hide the badge entirely\n    const outOfView = rect.bottom <= 0 || rect.top >= vh || rect.right <= 0 || rect.left >= vw;\n    if (outOfView) {\n      badge.style.display = 'none';\n      return;\n    }\n\n    // Otherwise, ensure it's visible and position above-left of the field\n    if (badge.style.display === 'none') badge.style.display = 'block';\n    const top = rect.top - 8;\n    const left = rect.left;\n    badge.style.top = `${top}px`;\n    badge.style.left = `${left}px`;\n  };\n\n  document.body.appendChild(badge);\n  updatePosition();\n\n  // Animate in\n  requestAnimationFrame(() => {\n    badge.style.opacity = '1';\n    badge.style.transform = 'translateY(-12px)';\n  });\n\n  // Track movement while visible\n  const onScroll = () => updatePosition();\n  const onResize = () => updatePosition();\n  window.addEventListener('scroll', onScroll, true);\n  window.addEventListener('resize', onResize, true);\n\n  // Observe element size/position changes\n  let ro: ResizeObserver | null = null;\n  if (typeof ResizeObserver !== 'undefined') {\n    ro = new ResizeObserver(() => updatePosition());\n    try { ro.observe(element); } catch { /* ignore */ }\n  }\n\n  // Animate out and remove after extended delay\n  const DISPLAY_MS = 6000;\n  setTimeout(() => {\n    badge.style.opacity = '0';\n    badge.style.transform = 'translateY(-6px)';\n    setTimeout(() => {\n      window.removeEventListener('scroll', onScroll, true);\n      window.removeEventListener('resize', onResize, true);\n      if (ro) {\n        try { ro.disconnect(); } catch { /* ignore */ }\n        ro = null;\n      }\n      if (badge.parentNode) badge.parentNode.removeChild(badge);\n    }, 220);\n  }, DISPLAY_MS);\n}\n\n\n\n// Extract nearby/associated label text for context\nfunction getAssociatedLabelText(input: HTMLInputElement): string {\n  const texts: string[] = [];\n  const id = input.id;\n  // aria-labelledby\n  const labelledBy = input.getAttribute('aria-labelledby');\n  if (labelledBy) {\n    labelledBy.split(/\\s+/).forEach((ref) => {\n      const el = document.getElementById(ref);\n      if (el && el.textContent) texts.push(el.textContent);\n    });\n  }\n  // explicit label[for]\n  if (id) {\n    try {\n      const lbl = document.querySelector('label[for=\"' + id.replace(/\"/g, '\\\\\"') + '\"]') as HTMLLabelElement | null;\n      if (lbl && lbl.textContent) texts.push(lbl.textContent);\n    } catch { /* ignore */ }\n  }\n  // implicit parent label\n  const closestLabel = input.closest('label');\n  if (closestLabel && closestLabel.textContent) texts.push(closestLabel.textContent);\n  // previous sibling label (common in some UIs)\n  const prev = input.previousElementSibling as HTMLElement | null;\n  if (prev && prev.tagName === 'LABEL' && prev.textContent) texts.push(prev.textContent);\n  return texts.join(' ').toLowerCase();\n}\n\n// Infer best-fit function name for an input based on type/name/placeholder\nasync function inferFunctionForInput(input: HTMLInputElement): Promise<string> {\n  const type = input.type.toLowerCase();\n  const name = (input.name || '').toLowerCase();\n  const id = (input.id || '').toLowerCase();\n  const placeholder = (input.placeholder || '').toLowerCase();\n  const autocomplete = (input.autocomplete || '').toLowerCase();\n  const ariaLabel = (input.getAttribute('aria-label') || '').toLowerCase();\n  const labelText = getAssociatedLabelText(input);\n\n  const text = `${name} ${id} ${placeholder} ${autocomplete} ${ariaLabel} ${labelText}`;\n\n  // Helper to ensure function exists\n  const pick = (fn: string, fallback: string = 'word'): string => (hasFunc(fn) ? fn : fallback);\n\n  // Direct type mappings\n  if (type === 'email' || /email/.test(text)) return pick('email');\n  if (type === 'password' || /password|pass/.test(text)) return pick('password');\n  if (type === 'tel' || /phone|tel|mobile/.test(text)) return pick('phone');\n  if (type === 'url' || /url|website/.test(text)) return pick('url');\n  if (type === 'color' || /color/.test(text)) return pick('hexcolor');\n  // Numeric-like hints (avoid matching 'account' via word boundaries)\n  if (type === 'number' || /\\b(?:age|qty|quantity|count|amount)\\b/.test(text)) {\n    return hasFunc('number') ? 'number?min=1&max=9999' : 'word';\n  }\n\n  // Placeholder-only numeric hint: if no numeric type but placeholder looks numeric\n  // Example: placeholder=\"0.000\" → float-like; placeholder=\"123\" → int-like\n  if ((type === '' || type === 'text')) {\n    const placeholderRaw = (input.placeholder || '').trim();\n    if (/^[+-]?\\d+$/.test(placeholderRaw)) {\n      const digits = Math.min(placeholderRaw.replace(/[^0-9]/g, '').length || 1, 9);\n      const max = Math.pow(10, digits) - 1;\n      return `number?min=0&max=${max}`;\n    }\n    if (/^[+-]?\\d+\\.\\d+$/.test(placeholderRaw)) {\n      const parts = placeholderRaw.replace(/[^0-9.]/g, '').split('.');\n      const fracDigits = Math.min((parts[1] || '2').length, 6);\n      return `generate?str={number:0,100}.{generate:${'#'.repeat(fracDigits)}}`;\n    }\n  }\n\n  // Credit card number detection\n  const looksLikeCcField =\n    /credit\\s*card|card\\b|cc\\b/.test(text) && /(number|no|num)/.test(text) ||\n    /card[-_ ]?number|credit[-_ ]?card[-_ ]?number/.test(text) ||\n    ariaLabel.includes('credit card number') ||\n    placeholder.includes('••••') ||\n    (input.maxLength >= 16 && input.maxLength <= 19 && (/card|credit/.test(text)));\n  if (looksLikeCcField) {\n    return 'creditcardnumber';\n  }\n\n  // Credit card CVV/CVC/Security Code\n  if (/\\bcvv\\b|\\bcvc\\b|security\\s*code|card\\s*code|\\bcid\\b|\\bcv2\\b/.test(text)) {\n    if (hasFunc('creditcardcvv')) return 'creditcardcvv';\n  }\n\n  // Credit card Expiry / Expiration date\n  if (/\\bexp(iry|iration)?\\b|valid\\s*(thru|through)|mm\\s*\\/\\s*yy|yy\\s*\\/\\s*mm|mm\\s*yy|yy\\s*mm|expiry\\s*date|exp\\.?\\s*date/.test(text)\n      || /\\b\\d{2}\\s*\\/\\s*\\d{2}\\b/.test((input.value || '').toLowerCase())) {\n    if (hasFunc('creditcardexp')) return 'creditcardexp';\n  }\n\n  // After card-specific checks, fall back to general date/time\n  if (type === 'date' || /\\bdate\\b|\\bdob\\b|birthday/.test(text)) return pick('date');\n  if (type === 'time' || /\\btime\\b/.test(text)) return pick('date');\n  if (type === 'datetime-local' || /\\bdatetime\\b|appointment/.test(text)) return pick('date');\n\n  // Bank account and routing numbers\n  if (/\\baccount\\b\\s*(?:number|no)\\b|\\bacct\\b/.test(text) || /\\baccount\\s*number\\b/.test(placeholder)) {\n    if (hasFunc('achaccount')) return 'achaccount';\n  }\n  if (/routing\\s*(number|no)|\\baba\\b/.test(text)) {\n    if (hasFunc('achrouting')) return 'achrouting';\n  }\n\n  // Common field heuristics\n  // Address line 2 / unit identifiers (must come before generic address/street)\n  if (/(^|\\b)(apartment|apt|suite|unit|floor|bldg|building|room|ste|address[-_ ]?line[-_ ]?2|address2|addr2|line[-_ ]?2)(\\b|$)/.test(text)) {\n    return pick('unit');\n  }\n  if (/first\\s*name|firstname|first_name|given/.test(text)) return pick('firstname');\n  if (/last\\s*name|lastname|last_name|surname|family/.test(text)) return pick('lastname');\n  if (/full\\s*name|fullname/.test(text)) return pick('name');\n  if (/city/.test(text)) return pick('city');\n  if (/state|province|region/.test(text)) return pick('state');\n  if (/\\bpostal\\b|\\bpostal[-_ ]?code\\b|\\bpostcode\\b|\\bzip\\b|\\bzip[-_ ]?code\\b/.test(text)) {\n    return hasFunc('postcode') ? 'postcode' : 'zip';\n  }\n  if (/address|street/.test(text)) return pick('street');\n  if (/company|organization|org/.test(text)) return pick('company');\n  if (/job|title|role/.test(text)) return pick('jobtitle', pick('job'));\n  if (/website|domain/.test(text)) return pick('url');\n  if (/username|user\\b/.test(text)) return pick('username');\n\n  // Fallbacks\n  if (type === 'search') return 'word';\n  if (hasFunc('word')) return 'word';\n  return 'word';\n}\n\n// Find the closest container that has form fields with data-gofakeit attributes\nexport function findFormContainer(element: HTMLElement): HTMLElement | null {\n  // Check if the current element has form fields\n  if (hasFormFields(element)) {\n    return element;\n  }\n  \n  // Check parent elements\n  let parent = element.parentElement;\n  while (parent) {\n    if (hasFormFields(parent)) {\n      return parent;\n    }\n    parent = parent.parentElement;\n  }\n  \n  return null;\n}\n\n// Simple notification function (can be overridden by the consuming application)\nfunction showNotification(message: string, type: 'success' | 'error' | 'info' = 'info'): void {\n  console.log(`[Gofakeit ${type.toUpperCase()}] ${message}`);\n}\n"],"names":["FUNCS","FUNCS_VALUES","hasFunc","name","getFuncs","GOFAKEIT_COLORS","GOFAKEIT_SPACING","GOFAKEIT_BORDER","GOFAKEIT_FONT","showFieldError","element","message","existingError","tooltip","updateTooltipPosition","rect","scrollTop","scrollLeft","left","top","scrollHandler","resizeHandler","scrollableElements","scrollableListeners","el","style","listener","handler","GOFAKEIT_API_BASE","callFunc","func","questionMarkIndex","functionName","queryString","params","searchParams","key","value","numValue","makeRequest","fetchRandomString","strings","method","url","body","options","response","error","getISOWeek","date","d","week1","handleDateTimeInput","gofakeitFunc","inputType","dateFunc","dateResponse","handleError","dateString","dateMatch","hourResponse","minuteResponse","hour","minute","datetimeFunc","datetimeResponse","datetimeString","datetimeMatch","yearResponse","monthResponse","month","weekFunc","weekDateResponse","year","week","weekYearResponse","weekResponse","handleTextInput","functionToCall","handleTextarea","handleCheckbox","checkboxGroup","findCheckboxGroup","numToSelect","cb","selectedIndices","i","boolResponse","availableIndices","_","randomIndex","values","v","index","shouldCheck","handleRadio","radioGroup","findRadioGroup","rb","selectedRadio","container","handleSelectWithFunction","option","selectedValues","remainingOptions","opt","val","handleNumberInput","handleRangeInput","min","max","autofill","target","settings","finalSettings","autofillAll","hasFormFields","autofillContainer","success","autofillElement","showNotification","findFormContainer","elements","queryFormElements","smartMode","targets","isDataGofakeitFalse","results","processElements","showResults","funcToUse","usedFunc","showFunctionBadge","passToHandler","inferred","inferFunctionForInput","selector","nodeList","getUniqueElements","uniqueElements","processedGroups","successfulCount","failedCount","context","funcName","badge","updatePosition","vh","vw","onScroll","onResize","ro","getAssociatedLabelText","input","texts","id","labelledBy","ref","lbl","closestLabel","prev","type","placeholder","autocomplete","ariaLabel","labelText","text","pick","fn","fallback","placeholderRaw","digits","parts","fracDigits","parent"],"mappings":"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"}