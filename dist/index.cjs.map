{"version":3,"file":"index.cjs","sources":["../src/funcs-short.ts","../src/styles.ts","../src/field-error.ts","../src/api.ts","../src/input-datetime.ts","../src/input-text.ts","../src/input-misc.ts","../src/input-number.ts","../src/autofill.ts"],"sourcesContent":["import { FuncShortEntry } from './api';\n\n// This file is generated/maintained manually to avoid heavy runtime requests.\n// It must export a normalized list and fast lookup helpers used by inference.\n\nexport const FUNC_SHORT: FuncShortEntry[] = [{\"value\":\"phraseadverb\",\"display\":\"Adverb Phrase\",\"category\":\"word\"},{\"value\":\"country\",\"display\":\"Country\",\"category\":\"address\"},{\"value\":\"latituderange\",\"display\":\"Latitude Range\",\"category\":\"address\"},{\"value\":\"longituderange\",\"display\":\"Longitude Range\",\"category\":\"address\"},{\"value\":\"bs\",\"display\":\"BS\",\"category\":\"company\"},{\"value\":\"hackerabbreviation\",\"display\":\"Hacker Abbreviation\",\"category\":\"hacker\"},{\"value\":\"hackeringverb\",\"display\":\"Hackering Verb\",\"category\":\"hacker\"},{\"value\":\"uint64\",\"display\":\"Uint64\",\"category\":\"number\"},{\"value\":\"hobby\",\"display\":\"Hobby\",\"category\":\"person\"},{\"value\":\"errorhttpclient\",\"display\":\"HTTP client error\",\"category\":\"error\"},{\"value\":\"programminglanguage\",\"display\":\"Programming Language\",\"category\":\"language\"},{\"value\":\"minecraftarmortier\",\"display\":\"Minecraft armor tier\",\"category\":\"minecraft\"},{\"value\":\"songname\",\"display\":\"Song Name\",\"category\":\"song\"},{\"value\":\"nouncommon\",\"display\":\"Noun Common\",\"category\":\"word\"},{\"value\":\"nouncollectivepeople\",\"display\":\"Noun Collective People\",\"category\":\"word\"},{\"value\":\"verbaction\",\"display\":\"Action Verb\",\"category\":\"word\"},{\"value\":\"celebrityactor\",\"display\":\"Celebrity Actor\",\"category\":\"celebrity\"},{\"value\":\"safecolor\",\"display\":\"Safe Color\",\"category\":\"color\"},{\"value\":\"minecraftvillagerstation\",\"display\":\"Minecraft villager station\",\"category\":\"minecraft\"},{\"value\":\"company\",\"display\":\"Company\",\"category\":\"company\"},{\"value\":\"productaudience\",\"display\":\"Product Audience\",\"category\":\"product\"},{\"value\":\"beerhop\",\"display\":\"Beer Hop\",\"category\":\"beer\"},{\"value\":\"hackerverb\",\"display\":\"Hacker Verb\",\"category\":\"hacker\"},{\"value\":\"int32\",\"display\":\"Int32\",\"category\":\"number\"},{\"value\":\"longitude\",\"display\":\"Longitude\",\"category\":\"address\"},{\"value\":\"beeryeast\",\"display\":\"Beer Yeast\",\"category\":\"beer\"},{\"value\":\"emojicategory\",\"display\":\"Emoji Category\",\"category\":\"emoji\"},{\"value\":\"snack\",\"display\":\"Snack\",\"category\":\"food\"},{\"value\":\"minecraftbiome\",\"display\":\"Minecraft biome\",\"category\":\"minecraft\"},{\"value\":\"flipacoin\",\"display\":\"Flip A Coin\",\"category\":\"misc\"},{\"value\":\"uintrange\",\"display\":\"UintRange\",\"category\":\"number\"},{\"value\":\"verbhelping\",\"display\":\"Helping Verb\",\"category\":\"word\"},{\"value\":\"blurb\",\"display\":\"Blurb\",\"category\":\"company\"},{\"value\":\"emoji\",\"display\":\"Emoji\",\"category\":\"emoji\"},{\"value\":\"uintn\",\"display\":\"UintN\",\"category\":\"number\"},{\"value\":\"price\",\"display\":\"Price\",\"category\":\"payment\"},{\"value\":\"adjectiveproper\",\"display\":\"Proper Adjective\",\"category\":\"word\"},{\"value\":\"nouncountable\",\"display\":\"Noun Countable\",\"category\":\"word\"},{\"value\":\"username\",\"display\":\"Username\",\"category\":\"auth\"},{\"value\":\"buzzword\",\"display\":\"Buzzword\",\"category\":\"company\"},{\"value\":\"map\",\"display\":\"Map\",\"category\":\"generate\"},{\"value\":\"loremipsumsentence\",\"display\":\"Lorem Ipsum Sentence\",\"category\":\"word\"},{\"value\":\"moviegenre\",\"display\":\"Genre\",\"category\":\"movie\"},{\"value\":\"int16\",\"display\":\"Int16\",\"category\":\"number\"},{\"value\":\"namesuffix\",\"display\":\"Name Suffix\",\"category\":\"person\"},{\"value\":\"weighted\",\"display\":\"Weighted\",\"category\":\"misc\"},{\"value\":\"emojidescription\",\"display\":\"Emoji Description\",\"category\":\"emoji\"},{\"value\":\"minecraftanimal\",\"display\":\"Minecraft animal\",\"category\":\"minecraft\"},{\"value\":\"shuffleints\",\"display\":\"Shuffle Ints\",\"category\":\"number\"},{\"value\":\"creditcardtype\",\"display\":\"Credit Card Type\",\"category\":\"payment\"},{\"value\":\"bitcoinaddress\",\"display\":\"Bitcoin Address\",\"category\":\"payment\"},{\"value\":\"drink\",\"display\":\"Drink\",\"category\":\"food\"},{\"value\":\"intrange\",\"display\":\"IntRange\",\"category\":\"number\"},{\"value\":\"currencylong\",\"display\":\"Currency Long\",\"category\":\"payment\"},{\"value\":\"teams\",\"display\":\"Teams\",\"category\":\"person\"},{\"value\":\"adjectivequantitative\",\"display\":\"Quantitative Adjective\",\"category\":\"word\"},{\"value\":\"adjectivepossessive\",\"display\":\"Possessive Adjective\",\"category\":\"word\"},{\"value\":\"bird\",\"display\":\"Bird\",\"category\":\"animal\"},{\"value\":\"pastdate\",\"display\":\"PastDate\",\"category\":\"time\"},{\"value\":\"ipv4address\",\"display\":\"IPv4 Address\",\"category\":\"internet\"},{\"value\":\"shufflestrings\",\"display\":\"Shuffle Strings\",\"category\":\"string\"},{\"value\":\"verblinking\",\"display\":\"Linking Verb\",\"category\":\"word\"},{\"value\":\"interjection\",\"display\":\"Interjection\",\"category\":\"word\"},{\"value\":\"second\",\"display\":\"Second\",\"category\":\"time\"},{\"value\":\"pronounpossessive\",\"display\":\"Pronoun Possessive\",\"category\":\"word\"},{\"value\":\"errorobject\",\"display\":\"Error object word\",\"category\":\"error\"},{\"value\":\"middlename\",\"display\":\"Middle Name\",\"category\":\"person\"},{\"value\":\"email_text\",\"display\":\"Random text email Document\",\"category\":\"template\"},{\"value\":\"streetnumber\",\"display\":\"Street Number\",\"category\":\"address\"},{\"value\":\"minute\",\"display\":\"Minute\",\"category\":\"time\"},{\"value\":\"productupc\",\"display\":\"Product UPC\",\"category\":\"product\"},{\"value\":\"template\",\"display\":\"Template\",\"category\":\"template\"},{\"value\":\"pronoun\",\"display\":\"Pronoun\",\"category\":\"word\"},{\"value\":\"zip\",\"display\":\"Zip\",\"category\":\"address\"},{\"value\":\"day\",\"display\":\"Day\",\"category\":\"time\"},{\"value\":\"json\",\"display\":\"JSON\",\"category\":\"file\"},{\"value\":\"xml\",\"display\":\"XML\",\"category\":\"file\"},{\"value\":\"lunch\",\"display\":\"Lunch\",\"category\":\"food\"},{\"value\":\"connectiveexamplify\",\"display\":\"Connective Examplify\",\"category\":\"word\"},{\"value\":\"productname\",\"display\":\"Product Name\",\"category\":\"product\"},{\"value\":\"productusecase\",\"display\":\"Product Use Case\",\"category\":\"product\"},{\"value\":\"productsuffix\",\"display\":\"Product Suffix\",\"category\":\"product\"},{\"value\":\"randomstring\",\"display\":\"Random String\",\"category\":\"string\"},{\"value\":\"timezone\",\"display\":\"Timezone\",\"category\":\"time\"},{\"value\":\"dessert\",\"display\":\"Dessert\",\"category\":\"food\"},{\"value\":\"imagejpeg\",\"display\":\"Image JPEG\",\"category\":\"image\"},{\"value\":\"creditcardnumber\",\"display\":\"Credit Card Number\",\"category\":\"payment\"},{\"value\":\"nouncollectivething\",\"display\":\"Noun Collective Thing\",\"category\":\"word\"},{\"value\":\"verbintransitive\",\"display\":\"Intransitive Verb\",\"category\":\"word\"},{\"value\":\"streetsuffix\",\"display\":\"Street Suffix\",\"category\":\"address\"},{\"value\":\"isin\",\"display\":\"ISIN\",\"category\":\"finance\"},{\"value\":\"person\",\"display\":\"Person\",\"category\":\"person\"},{\"value\":\"cartransmissiontype\",\"display\":\"Car Transmission Type\",\"category\":\"car\"},{\"value\":\"email\",\"display\":\"Email\",\"category\":\"person\"},{\"value\":\"productbenefit\",\"display\":\"Product Benefit\",\"category\":\"product\"},{\"value\":\"lettern\",\"display\":\"LetterN\",\"category\":\"string\"},{\"value\":\"adverb\",\"display\":\"Adverb\",\"category\":\"word\"},{\"value\":\"preposition\",\"display\":\"Preposition\",\"category\":\"word\"},{\"value\":\"prepositiondouble\",\"display\":\"Preposition Double\",\"category\":\"word\"},{\"value\":\"timezonefull\",\"display\":\"Timezone Full\",\"category\":\"time\"},{\"value\":\"errordatabase\",\"display\":\"Database error\",\"category\":\"error\"},{\"value\":\"fileextension\",\"display\":\"File Extension\",\"category\":\"file\"},{\"value\":\"cusip\",\"display\":\"CUSIP\",\"category\":\"finance\"},{\"value\":\"movie\",\"display\":\"Movie\",\"category\":\"movie\"},{\"value\":\"nameprefix\",\"display\":\"Name Prefix\",\"category\":\"person\"},{\"value\":\"product\",\"display\":\"Product\",\"category\":\"product\"},{\"value\":\"connectivelisting\",\"display\":\"Connective Listing\",\"category\":\"word\"},{\"value\":\"timezoneabv\",\"display\":\"Timezone Abbreviation\",\"category\":\"time\"},{\"value\":\"lastname\",\"display\":\"Last Name\",\"category\":\"person\"},{\"value\":\"vowel\",\"display\":\"Vowel\",\"category\":\"string\"},{\"value\":\"markdown\",\"display\":\"Random markdown document\",\"category\":\"template\"},{\"value\":\"connectivetime\",\"display\":\"Connective Time\",\"category\":\"word\"},{\"value\":\"phrase\",\"display\":\"Phrase\",\"category\":\"word\"},{\"value\":\"countryabr\",\"display\":\"Country Abbreviation\",\"category\":\"address\"},{\"value\":\"beermalt\",\"display\":\"Beer Malt\",\"category\":\"beer\"},{\"value\":\"nouncollectiveanimal\",\"display\":\"Noun Collective Animal\",\"category\":\"word\"},{\"value\":\"emojialias\",\"display\":\"Emoji Alias\",\"category\":\"emoji\"},{\"value\":\"httpstatuscode\",\"display\":\"HTTP Status Code\",\"category\":\"internet\"},{\"value\":\"adjectiveindefinite\",\"display\":\"Indefinite Adjective\",\"category\":\"word\"},{\"value\":\"question\",\"display\":\"Question\",\"category\":\"word\"},{\"value\":\"cat\",\"display\":\"Cat\",\"category\":\"animal\"},{\"value\":\"carmaker\",\"display\":\"Car Maker\",\"category\":\"car\"},{\"value\":\"ipv6address\",\"display\":\"IPv6 Address\",\"category\":\"internet\"},{\"value\":\"httpstatuscodesimple\",\"display\":\"HTTP Status Code Simple\",\"category\":\"internet\"},{\"value\":\"minecraftarmorpart\",\"display\":\"Minecraft armor part\",\"category\":\"minecraft\"},{\"value\":\"minecraftmobneutral\",\"display\":\"Minecraft mob neutral\",\"category\":\"minecraft\"},{\"value\":\"currencyshort\",\"display\":\"Currency Short\",\"category\":\"payment\"},{\"value\":\"achaccount\",\"display\":\"ACH Account Number\",\"category\":\"payment\"},{\"value\":\"song\",\"display\":\"Song\",\"category\":\"song\"},{\"value\":\"prepositionsimple\",\"display\":\"Preposition Simple\",\"category\":\"word\"},{\"value\":\"verbtransitive\",\"display\":\"Transitive Verb\",\"category\":\"word\"},{\"value\":\"slogan\",\"display\":\"Slogan\",\"category\":\"company\"},{\"value\":\"loglevel\",\"display\":\"Log Level\",\"category\":\"internet\"},{\"value\":\"currency\",\"display\":\"Currency\",\"category\":\"payment\"},{\"value\":\"creditcardcvv\",\"display\":\"Credit Card CVV\",\"category\":\"payment\"},{\"value\":\"phoneformatted\",\"display\":\"Phone Formatted\",\"category\":\"person\"},{\"value\":\"adjective\",\"display\":\"Adjective\",\"category\":\"word\"},{\"value\":\"connectivecomplaint\",\"display\":\"Connective Complaint\",\"category\":\"word\"},{\"value\":\"productcategory\",\"display\":\"Product Category\",\"category\":\"product\"},{\"value\":\"beeralcohol\",\"display\":\"Beer Alcohol\",\"category\":\"beer\"},{\"value\":\"date\",\"display\":\"Date\",\"category\":\"time\"},{\"value\":\"nanosecond\",\"display\":\"Nanosecond\",\"category\":\"time\"},{\"value\":\"language\",\"display\":\"Language\",\"category\":\"language\"},{\"value\":\"productisbn\",\"display\":\"Product ISBN\",\"category\":\"product\"},{\"value\":\"hexcolor\",\"display\":\"Hex Color\",\"category\":\"color\"},{\"value\":\"daterange\",\"display\":\"DateRange\",\"category\":\"time\"},{\"value\":\"minecraftvillagerjob\",\"display\":\"Minecraft villager job\",\"category\":\"minecraft\"},{\"value\":\"noundeterminer\",\"display\":\"Noun Determiner\",\"category\":\"word\"},{\"value\":\"password\",\"display\":\"Password\",\"category\":\"auth\"},{\"value\":\"job\",\"display\":\"Job\",\"category\":\"company\"},{\"value\":\"safariuseragent\",\"display\":\"Safari User Agent\",\"category\":\"internet\"},{\"value\":\"randomint\",\"display\":\"Random Int\",\"category\":\"number\"},{\"value\":\"hexuint\",\"display\":\"HexUint\",\"category\":\"number\"},{\"value\":\"comment\",\"display\":\"Comment\",\"category\":\"word\"},{\"value\":\"state\",\"display\":\"State\",\"category\":\"address\"},{\"value\":\"breakfast\",\"display\":\"Breakfast\",\"category\":\"food\"},{\"value\":\"dinner\",\"display\":\"Dinner\",\"category\":\"food\"},{\"value\":\"banktype\",\"display\":\"Bank Type\",\"category\":\"payment\"},{\"value\":\"streetname\",\"display\":\"Street Name\",\"category\":\"address\"},{\"value\":\"errorgrpc\",\"display\":\"gRPC error\",\"category\":\"error\"},{\"value\":\"operauseragent\",\"display\":\"Opera User Agent\",\"category\":\"internet\"},{\"value\":\"minecraftmobboss\",\"display\":\"Minecraft mob boss\",\"category\":\"minecraft\"},{\"value\":\"float32\",\"display\":\"Float32\",\"category\":\"number\"},{\"value\":\"songgenre\",\"display\":\"Genre\",\"category\":\"song\"},{\"value\":\"phrasenoun\",\"display\":\"Noun Phrase\",\"category\":\"word\"},{\"value\":\"monthstring\",\"display\":\"Month String\",\"category\":\"time\"},{\"value\":\"loremipsumword\",\"display\":\"Lorem Ipsum Word\",\"category\":\"word\"},{\"value\":\"productmaterial\",\"display\":\"Product Material\",\"category\":\"product\"},{\"value\":\"adjectiveinterrogative\",\"display\":\"Interrogative Adjective\",\"category\":\"word\"},{\"value\":\"booktitle\",\"display\":\"Title\",\"category\":\"book\"},{\"value\":\"uint32\",\"display\":\"Uint32\",\"category\":\"number\"},{\"value\":\"phrasepreposition\",\"display\":\"Preposition Phrase\",\"category\":\"word\"},{\"value\":\"animal\",\"display\":\"Animal\",\"category\":\"animal\"},{\"value\":\"fruit\",\"display\":\"Fruit\",\"category\":\"food\"},{\"value\":\"regex\",\"display\":\"Regex\",\"category\":\"generate\"},{\"value\":\"minecraftweapon\",\"display\":\"Minecraft weapon\",\"category\":\"minecraft\"},{\"value\":\"beeribu\",\"display\":\"Beer IBU\",\"category\":\"beer\"},{\"value\":\"minecraftmobhostile\",\"display\":\"Minecraft mob hostile\",\"category\":\"minecraft\"},{\"value\":\"randomuint\",\"display\":\"Random Uint\",\"category\":\"number\"},{\"value\":\"achrouting\",\"display\":\"ACH Routing Number\",\"category\":\"payment\"},{\"value\":\"bankname\",\"display\":\"Bank Name\",\"category\":\"payment\"},{\"value\":\"gender\",\"display\":\"Gender\",\"category\":\"person\"},{\"value\":\"pronoundemonstrative\",\"display\":\"Pronoun Demonstrative\",\"category\":\"word\"},{\"value\":\"pronounrelative\",\"display\":\"Pronoun Relative\",\"category\":\"word\"},{\"value\":\"street\",\"display\":\"Street\",\"category\":\"address\"},{\"value\":\"year\",\"display\":\"Year\",\"category\":\"time\"},{\"value\":\"gamertag\",\"display\":\"Gamertag\",\"category\":\"game\"},{\"value\":\"int\",\"display\":\"Int\",\"category\":\"number\"},{\"value\":\"cartype\",\"display\":\"Car Type\",\"category\":\"car\"},{\"value\":\"timezoneoffset\",\"display\":\"Timezone Offset\",\"category\":\"time\"},{\"value\":\"name\",\"display\":\"Name\",\"category\":\"person\"},{\"value\":\"hackernoun\",\"display\":\"Hacker Noun\",\"category\":\"hacker\"},{\"value\":\"inputname\",\"display\":\"Input Name\",\"category\":\"html\"},{\"value\":\"float32range\",\"display\":\"Float32 Range\",\"category\":\"number\"},{\"value\":\"beerstyle\",\"display\":\"Beer Style\",\"category\":\"beer\"},{\"value\":\"book\",\"display\":\"Book\",\"category\":\"book\"},{\"value\":\"celebritybusiness\",\"display\":\"Celebrity Business\",\"category\":\"celebrity\"},{\"value\":\"month\",\"display\":\"Month\",\"category\":\"time\"},{\"value\":\"macaddress\",\"display\":\"MAC Address\",\"category\":\"internet\"},{\"value\":\"uint8\",\"display\":\"Uint8\",\"category\":\"number\"},{\"value\":\"firstname\",\"display\":\"First Name\",\"category\":\"person\"},{\"value\":\"adjectivedescriptive\",\"display\":\"Descriptive Adjective\",\"category\":\"word\"},{\"value\":\"dog\",\"display\":\"Dog\",\"category\":\"animal\"},{\"value\":\"beername\",\"display\":\"Beer Name\",\"category\":\"beer\"},{\"value\":\"vegetable\",\"display\":\"Vegetable\",\"category\":\"food\"},{\"value\":\"useragent\",\"display\":\"User Agent\",\"category\":\"internet\"},{\"value\":\"minecraftore\",\"display\":\"Minecraft ore\",\"category\":\"minecraft\"},{\"value\":\"nounconcrete\",\"display\":\"Noun Concrete\",\"category\":\"word\"},{\"value\":\"verb\",\"display\":\"Verb\",\"category\":\"word\"},{\"value\":\"stateabr\",\"display\":\"State Abbreviation\",\"category\":\"address\"},{\"value\":\"error\",\"display\":\"Error\",\"category\":\"error\"},{\"value\":\"loremipsumparagraph\",\"display\":\"Lorem Ipsum Paragraph\",\"category\":\"word\"},{\"value\":\"digit\",\"display\":\"Digit\",\"category\":\"string\"},{\"value\":\"numerify\",\"display\":\"Numerify\",\"category\":\"string\"},{\"value\":\"hipstersentence\",\"display\":\"Hipster Sentence\",\"category\":\"hipster\"},{\"value\":\"hipsterparagraph\",\"display\":\"Hipster Paragraph\",\"category\":\"hipster\"},{\"value\":\"float64\",\"display\":\"Float64\",\"category\":\"number\"},{\"value\":\"sentencesimple\",\"display\":\"Simple Sentence\",\"category\":\"word\"},{\"value\":\"farmanimal\",\"display\":\"Farm Animal\",\"category\":\"animal\"},{\"value\":\"carmodel\",\"display\":\"Car Model\",\"category\":\"car\"},{\"value\":\"dice\",\"display\":\"Dice\",\"category\":\"game\"},{\"value\":\"minecraftvillagerlevel\",\"display\":\"Minecraft villager level\",\"category\":\"minecraft\"},{\"value\":\"productfeature\",\"display\":\"Product Feature\",\"category\":\"product\"},{\"value\":\"lexify\",\"display\":\"Lexify\",\"category\":\"string\"},{\"value\":\"word\",\"display\":\"Word\",\"category\":\"word\"},{\"value\":\"httpversion\",\"display\":\"HTTP Version\",\"category\":\"internet\"},{\"value\":\"companysuffix\",\"display\":\"Company Suffix\",\"category\":\"company\"},{\"value\":\"errorhttp\",\"display\":\"HTTP error\",\"category\":\"error\"},{\"value\":\"connectivecomparative\",\"display\":\"Connective Comparitive\",\"category\":\"word\"},{\"value\":\"carfueltype\",\"display\":\"Car Fuel Type\",\"category\":\"car\"},{\"value\":\"letter\",\"display\":\"Letter\",\"category\":\"string\"},{\"value\":\"adjectivedemonstrative\",\"display\":\"Demonstrative Adjective\",\"category\":\"word\"},{\"value\":\"streetprefix\",\"display\":\"Street Prefix\",\"category\":\"address\"},{\"value\":\"rgbcolor\",\"display\":\"RGB Color\",\"category\":\"color\"},{\"value\":\"sql\",\"display\":\"SQL\",\"category\":\"database\"},{\"value\":\"fixed_width\",\"display\":\"Fixed Width\",\"category\":\"generate\"},{\"value\":\"imagepng\",\"display\":\"Image PNG\",\"category\":\"image\"},{\"value\":\"domainsuffix\",\"display\":\"Domain Suffix\",\"category\":\"internet\"},{\"value\":\"languageabbreviation\",\"display\":\"Language Abbreviation\",\"category\":\"language\"},{\"value\":\"uint\",\"display\":\"Uint\",\"category\":\"number\"},{\"value\":\"bookauthor\",\"display\":\"Author\",\"category\":\"book\"},{\"value\":\"joblevel\",\"display\":\"Job Level\",\"category\":\"company\"},{\"value\":\"filemimetype\",\"display\":\"File Mime Type\",\"category\":\"file\"},{\"value\":\"domainname\",\"display\":\"Domain Name\",\"category\":\"internet\"},{\"value\":\"number\",\"display\":\"Number\",\"category\":\"number\"},{\"value\":\"productdimension\",\"display\":\"Product Dimension\",\"category\":\"product\"},{\"value\":\"adverbplace\",\"display\":\"Adverb Place\",\"category\":\"word\"},{\"value\":\"phraseverb\",\"display\":\"Verb Phrase\",\"category\":\"word\"},{\"value\":\"appname\",\"display\":\"App Name\",\"category\":\"app\"},{\"value\":\"celebritysport\",\"display\":\"Celebrity Sport\",\"category\":\"celebrity\"},{\"value\":\"hour\",\"display\":\"Hour\",\"category\":\"time\"},{\"value\":\"hipsterword\",\"display\":\"Hipster Word\",\"category\":\"hipster\"},{\"value\":\"languagebcp\",\"display\":\"Language BCP\",\"category\":\"language\"},{\"value\":\"minecraftdye\",\"display\":\"Minecraft dye\",\"category\":\"minecraft\"},{\"value\":\"moviename\",\"display\":\"Movie Name\",\"category\":\"movie\"},{\"value\":\"float64range\",\"display\":\"Float64 Range\",\"category\":\"number\"},{\"value\":\"emojitag\",\"display\":\"Emoji Tag\",\"category\":\"emoji\"},{\"value\":\"url\",\"display\":\"URL\",\"category\":\"internet\"},{\"value\":\"creditcardexp\",\"display\":\"Credit Card Exp\",\"category\":\"payment\"},{\"value\":\"adverbmanner\",\"display\":\"Adverb Manner\",\"category\":\"word\"},{\"value\":\"adverbtimeindefinite\",\"display\":\"Adverb Time Indefinite\",\"category\":\"word\"},{\"value\":\"adverbfrequencydefinite\",\"display\":\"Adverb Frequency Definite\",\"category\":\"word\"},{\"value\":\"connectivecasual\",\"display\":\"Connective Casual\",\"category\":\"word\"},{\"value\":\"nounproper\",\"display\":\"Noun Proper\",\"category\":\"word\"},{\"value\":\"bookgenre\",\"display\":\"Genre\",\"category\":\"book\"},{\"value\":\"timezoneregion\",\"display\":\"Timezone Region\",\"category\":\"time\"},{\"value\":\"hackeradjective\",\"display\":\"Hacker Adjective\",\"category\":\"hacker\"},{\"value\":\"httpmethod\",\"display\":\"HTTP Method\",\"category\":\"internet\"},{\"value\":\"minecrafttool\",\"display\":\"Minecraft tool\",\"category\":\"minecraft\"},{\"value\":\"minecraftfood\",\"display\":\"Minecraft food\",\"category\":\"minecraft\"},{\"value\":\"minecraftweather\",\"display\":\"Minecraft weather\",\"category\":\"minecraft\"},{\"value\":\"petname\",\"display\":\"Pet Name\",\"category\":\"animal\"},{\"value\":\"beerblg\",\"display\":\"Beer BLG\",\"category\":\"beer\"},{\"value\":\"csv\",\"display\":\"CSV\",\"category\":\"file\"},{\"value\":\"hackerphrase\",\"display\":\"Hacker Phrase\",\"category\":\"hacker\"},{\"value\":\"school\",\"display\":\"School\",\"category\":\"school\"},{\"value\":\"prepositioncompound\",\"display\":\"Preposition Compound\",\"category\":\"word\"},{\"value\":\"address\",\"display\":\"Address\",\"category\":\"address\"},{\"value\":\"futuredate\",\"display\":\"FutureDate\",\"category\":\"time\"},{\"value\":\"adverbtimedefinite\",\"display\":\"Adverb Time Definite\",\"category\":\"word\"},{\"value\":\"pronounreflective\",\"display\":\"Pronoun Reflective\",\"category\":\"word\"},{\"value\":\"appauthor\",\"display\":\"App Author\",\"category\":\"app\"},{\"value\":\"jobdescriptor\",\"display\":\"Job Descriptor\",\"category\":\"company\"},{\"value\":\"errorhttpserver\",\"display\":\"HTTP server error\",\"category\":\"error\"},{\"value\":\"int64\",\"display\":\"Int64\",\"category\":\"number\"},{\"value\":\"noununcountable\",\"display\":\"Noun Uncountable\",\"category\":\"word\"},{\"value\":\"color\",\"display\":\"Color\",\"category\":\"color\"},{\"value\":\"nicecolors\",\"display\":\"Nice Colors\",\"category\":\"color\"},{\"value\":\"jobtitle\",\"display\":\"Job Title\",\"category\":\"company\"},{\"value\":\"chromeuseragent\",\"display\":\"Chrome User Agent\",\"category\":\"internet\"},{\"value\":\"minecraftmobpassive\",\"display\":\"Minecraft mob passive\",\"category\":\"minecraft\"},{\"value\":\"latitude\",\"display\":\"Latitude\",\"category\":\"address\"},{\"value\":\"appversion\",\"display\":\"App Version\",\"category\":\"app\"},{\"value\":\"car\",\"display\":\"Car\",\"category\":\"car\"},{\"value\":\"uint16\",\"display\":\"Uint16\",\"category\":\"number\"},{\"value\":\"adverbdegree\",\"display\":\"Adverb Degree\",\"category\":\"word\"},{\"value\":\"svg\",\"display\":\"Image SVG\",\"category\":\"html\"},{\"value\":\"int8\",\"display\":\"Int8\",\"category\":\"number\"},{\"value\":\"digitn\",\"display\":\"DigitN\",\"category\":\"string\"},{\"value\":\"adverbfrequencyindefinite\",\"display\":\"Adverb Frequency Indefinite\",\"category\":\"word\"},{\"value\":\"noun\",\"display\":\"Noun\",\"category\":\"word\"},{\"value\":\"pronounobject\",\"display\":\"Pronoun Object\",\"category\":\"word\"},{\"value\":\"errorruntime\",\"display\":\"Runtime error\",\"category\":\"error\"},{\"value\":\"errorvalidation\",\"display\":\"Validation error\",\"category\":\"error\"},{\"value\":\"firefoxuseragent\",\"display\":\"Firefox User Agent\",\"category\":\"internet\"},{\"value\":\"uuid\",\"display\":\"UUID\",\"category\":\"misc\"},{\"value\":\"creditcard\",\"display\":\"Credit Card\",\"category\":\"payment\"},{\"value\":\"phone\",\"display\":\"Phone\",\"category\":\"person\"},{\"value\":\"intn\",\"display\":\"IntN\",\"category\":\"number\"},{\"value\":\"bitcoinprivatekey\",\"display\":\"Bitcoin Private Key\",\"category\":\"payment\"},{\"value\":\"pronounpersonal\",\"display\":\"Pronoun Personal\",\"category\":\"word\"},{\"value\":\"sentence\",\"display\":\"Sentence\",\"category\":\"word\"},{\"value\":\"generate\",\"display\":\"Generate\",\"category\":\"generate\"},{\"value\":\"ssn\",\"display\":\"SSN\",\"category\":\"person\"},{\"value\":\"connective\",\"display\":\"Connective\",\"category\":\"word\"},{\"value\":\"pronounindefinite\",\"display\":\"Pronoun Indefinite\",\"category\":\"word\"},{\"value\":\"quote\",\"display\":\"Quote\",\"category\":\"word\"},{\"value\":\"animaltype\",\"display\":\"Animal Type\",\"category\":\"animal\"},{\"value\":\"weekday\",\"display\":\"Weekday\",\"category\":\"time\"},{\"value\":\"pronouninterrogative\",\"display\":\"Pronoun Interrogative\",\"category\":\"word\"},{\"value\":\"paragraph\",\"display\":\"Paragraph\",\"category\":\"word\"},{\"value\":\"city\",\"display\":\"City\",\"category\":\"address\"},{\"value\":\"minecraftwood\",\"display\":\"Minecraft wood\",\"category\":\"minecraft\"},{\"value\":\"bool\",\"display\":\"Boolean\",\"category\":\"misc\"},{\"value\":\"productdescription\",\"display\":\"Product Description\",\"category\":\"product\"},{\"value\":\"songartist\",\"display\":\"Song Artist\",\"category\":\"song\"},{\"value\":\"nounabstract\",\"display\":\"Noun Abstract\",\"category\":\"word\"}];\n\nexport const FUNC_SHORT_VALUES: Set<string> = new Set(\n\tFUNC_SHORT.map(e => e.value.toLowerCase())\n);\n\nexport function hasFunc(name: string): boolean {\n\treturn FUNC_SHORT_VALUES.has(name.toLowerCase());\n}\n","// Centralized style tokens for injected UI (avoid dependency on site CSS)\n\nexport const GOFAKEIT_COLORS = {\n\tprimary: '#ffa000',\n\twhite: '#ffffff',\n\tsuccess: '#48c774',\n\terror: '#ff3860',\n\tinfo: '#209cee',\n\ttext: '#ffffff',\n\tborder: '#686868',\n};\n\nexport const GOFAKEIT_SPACING = {\n\tbase: 24, // px\n\thalf: 12, // px\n\tquarter: 8, // px\n};\n\nexport const GOFAKEIT_BORDER = {\n\tradius: 6, // px\n\twidth: 2, // px\n};\n","// Show error message as a floating tooltip over a form field\nexport function showFieldError(element: Element, message: string): void {\n  // Remove any existing error message\n  const existingError = document.querySelector('.gofakeit-error-tooltip');\n  if (existingError) {\n    existingError.remove();\n  }\n\n  // Create error tooltip element\n  const tooltip = document.createElement('div');\n  tooltip.className = 'gofakeit-error-tooltip';\n  tooltip.style.cssText = `\n    position: absolute;\n    z-index: 10001;\n    color: var(--color-error);\n    font-size: var(--font-size);\n    font-family: var(--font-family);\n    background-color: var(--color-background);\n    padding: var(--spacing-quarter) var(--spacing-half);\n    border-radius: var(--border-radius);\n    border: 1px solid var(--color-error);\n    box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n    max-width: 300px;\n    word-wrap: break-word;\n    opacity: 0;\n    transform: translateY(-10px);\n    transition: opacity 0.3s ease, transform 0.3s ease;\n    pointer-events: none;\n  `;\n  tooltip.textContent = message;\n\n  // Add to body\n  document.body.appendChild(tooltip);\n\n  // Function to update tooltip position\n  function updateTooltipPosition() {\n    const rect = element.getBoundingClientRect();\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n    \n    const left = rect.left + scrollLeft;\n    const top = rect.top + scrollTop - tooltip.offsetHeight - 8;\n    \n    tooltip.style.left = `${left}px`;\n    tooltip.style.top = `${top}px`;\n  }\n\n  // Initial positioning\n  updateTooltipPosition();\n\n  // Add scroll and resize listeners\n  const scrollHandler = () => updateTooltipPosition();\n  const resizeHandler = () => updateTooltipPosition();\n  \n  // Listen to scroll events on window and all scrollable elements\n  window.addEventListener('scroll', scrollHandler, { passive: true });\n  window.addEventListener('resize', resizeHandler, { passive: true });\n  \n  // Also listen to scroll events on all elements with overflow scroll\n  const scrollableElements = document.querySelectorAll('*');\n  const scrollableListeners: Array<{ element: Element, handler: () => void }> = [];\n  \n  scrollableElements.forEach(el => {\n    const style = window.getComputedStyle(el);\n    if (style.overflow === 'scroll' || style.overflowY === 'scroll' || style.overflow === 'auto' || style.overflowY === 'auto') {\n      const listener = () => updateTooltipPosition();\n      el.addEventListener('scroll', listener, { passive: true });\n      scrollableListeners.push({ element: el, handler: listener });\n    }\n  });\n\n  // Fade in\n  requestAnimationFrame(() => {\n    tooltip.style.opacity = '1';\n    tooltip.style.transform = 'translateY(0)';\n  });\n\n  // Remove tooltip after 5 seconds with fade out\n  setTimeout(() => {\n    tooltip.style.opacity = '0';\n    tooltip.style.transform = 'translateY(-10px)';\n    \n    // Remove event listeners\n    window.removeEventListener('scroll', scrollHandler);\n    window.removeEventListener('resize', resizeHandler);\n    \n    // Remove scrollable element listeners\n    scrollableListeners.forEach(({ element, handler }) => {\n      element.removeEventListener('scroll', handler);\n    });\n    \n    setTimeout(() => {\n      if (tooltip.parentElement) {\n        tooltip.parentElement.removeChild(tooltip);\n      }\n    }, 300);\n  }, 5000);\n}\n","// Base URL for the Gofakeit API\nconst GOFAKEIT_API_BASE = 'https://api.gofakeit.com/funcs'\n\nexport interface ApiResponse {\n  success: boolean;\n  data?: string;\n  error?: string;\n  status?: number;\n}\n\n// Function list types\nexport interface FuncShortEntry {\n  value: string; // function name\n  display: string;\n  category: string;\n}\n\nexport interface FuncListShortResponse {\n  success: boolean;\n  data?: FuncShortEntry[];\n  error?: string;\n}\n\n// Fetch data from gofakeit API\nexport async function fetchGofakeitData(func: string): Promise<ApiResponse> {\n  // Check if the function contains query parameters\n  const questionMarkIndex = func.indexOf('?');\n  \n  if (questionMarkIndex !== -1) {\n    // Function has query parameters - use POST with JSON body\n    const functionName = func.substring(0, questionMarkIndex);\n    const queryString = func.substring(questionMarkIndex + 1);\n    \n    // Parse query parameters into an object\n    const params: Record<string, unknown> = {};\n    const searchParams = new URLSearchParams(queryString);\n    \n    for (const [key, value] of searchParams.entries()) {\n      // Try to parse as number if possible\n      const numValue = parseFloat(value);\n      params[key] = isNaN(numValue) ? value : numValue;\n    }\n    \n    return makeRequest('POST', `${GOFAKEIT_API_BASE}/${functionName}`, params);\n  } else {\n    // Simple function - use GET request\n    return makeRequest('GET', `${GOFAKEIT_API_BASE}/${func}`);\n  }\n}\n\n// Fetch random string from an array of strings using gofakeit API\nexport async function fetchRandomString(strings: string[]): Promise<ApiResponse> {\n  return makeRequest('POST', `${GOFAKEIT_API_BASE}/randomstring`, { strs: strings });\n}\n\n// Fetch the list of available functions from the API\nexport async function fetchFunctionList(): Promise<FuncListShortResponse> {\n  return fetchFunctionListShort();\n}\n\nexport async function fetchFunctionListShort(): Promise<FuncListShortResponse> {\n  try {\n    const response = await fetch(`${GOFAKEIT_API_BASE}/list/short`);\n    if (!response.ok) {\n      return { success: false, error: `HTTP error! status: ${response.status}` };\n    }\n    const data = await response.json();\n    return { success: true, data };\n  } catch (error) {\n    console.error('[Gofakeit] Error fetching short function list:', error);\n    return { success: false, error: error instanceof Error ? error.message : 'Unknown error' };\n  }\n}\n\n// Base HTTP request function\nasync function makeRequest(method: 'GET' | 'POST', url: string, body?: Record<string, unknown>): Promise<ApiResponse> {\n  try {\n    const options: {\n      method: string;\n      headers: Record<string, string>;\n      body?: string;\n    } = {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    };\n\n    if (method === 'POST' && body) {\n      options.body = JSON.stringify(body);\n    }\n\n    const response = await fetch(url, options);\n    \n    if (!response.ok) {\n      return {\n        success: false,\n        error: `HTTP error! status: ${response.status}`,\n        status: response.status\n      };\n    }\n    \n    const data = await response.text();\n    return {\n      success: true,\n      data: data\n    };\n  } catch (error) {\n    console.error(`[Gofakeit Autofill] Error in ${method} request to ${url}:`, error);\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Unknown error'\n    };\n  }\n}\n","import { fetchGofakeitData } from './api';\nimport { handleError } from './autofill';\n\n// Get ISO week number for a date\nfunction getISOWeek(date: Date): number {\n  const d = new Date(date.getTime());\n  d.setUTCHours(0, 0, 0, 0);\n  // Thursday in current week decides the year\n  d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() || 7));\n  // January 4 is always in week 1\n  const week1 = new Date(d.getUTCFullYear(), 0, 4);\n  // Adjust to Thursday in week 1 and count number of weeks from date to week1\n  const week = Math.ceil((((d.getTime() - week1.getTime()) / 86400000) - 3 + (week1.getUTCDay() || 7)) / 7);\n  return week;\n}\n\n// Handle date/time input elements\nexport async function handleDateTimeInput(element: HTMLInputElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  const inputType = element.type.toLowerCase();\n  \n  try {\n    switch (inputType) {\n      case 'date':\n        // Use the provided function or default to 'date'\n        const dateFunc = gofakeitFunc === 'true' ? 'date' : gofakeitFunc;\n        const dateResponse = await fetchGofakeitData(dateFunc);\n        \n        if (!dateResponse.success) {\n          console.warn(`[Gofakeit Autofill] Error for ${inputType} input:`, dateResponse.error);\n          if (dateResponse.status === 400) {\n            handleError(element, `Failed to get random ${inputType}`);\n          }\n          return { success: false, usedFunc: dateFunc };\n        }\n        \n        // Parse the ISO date string (e.g., \"1935-03-01T19:02:35Z\") and extract just the date part\n        try {\n          const dateString = dateResponse.data!;\n          const dateMatch = dateString.match(/^(\\d{4}-\\d{2}-\\d{2})/);\n          if (dateMatch) {\n            element.value = dateMatch[1]; // Extract YYYY-MM-DD part\n          } else {\n            console.warn('[Gofakeit Autofill] Could not parse date from response:', dateString);\n            return { success: false, usedFunc: dateFunc };\n          }\n        } catch (error) {\n          console.warn('[Gofakeit Autofill] Error parsing date response:', error);\n          return { success: false, usedFunc: dateFunc };\n        }\n        break;\n        \n      case 'time':\n        // Use gofakeit hour and minute functions to create time format\n        const hourResponse = await fetchGofakeitData('hour');\n        const minuteResponse = await fetchGofakeitData('minute');\n        \n        if (!hourResponse.success || !minuteResponse.success) {\n          console.warn('[Gofakeit Autofill] Error getting hour or minute:', hourResponse.error || minuteResponse.error);\n          if (hourResponse.status === 400 || minuteResponse.status === 400) {\n            handleError(element, 'Failed to get random time');\n          }\n          return { success: false, usedFunc: 'hour/minute' };\n        }\n        \n        // Format time as HH:MM\n        const hour = hourResponse.data!.padStart(2, '0');\n        const minute = minuteResponse.data!.padStart(2, '0');\n        element.value = `${hour}:${minute}`;\n        break;\n        \n      case 'datetime-local':\n        // Use the provided function or default to 'date' (which includes time)\n        const datetimeFunc = gofakeitFunc === 'true' ? 'date' : gofakeitFunc;\n        const datetimeResponse = await fetchGofakeitData(datetimeFunc);\n        \n        if (!datetimeResponse.success) {\n          console.warn(`[Gofakeit Autofill] Error for ${inputType} input:`, datetimeResponse.error);\n          if (datetimeResponse.status === 400) {\n            handleError(element, `Failed to get random ${inputType}`);\n          }\n          return { success: false, usedFunc: datetimeFunc };\n        }\n        \n        // Parse the ISO datetime string (e.g., \"1935-03-01T19:02:35Z\") and extract datetime-local format\n        try {\n          const datetimeString = datetimeResponse.data!;\n          const datetimeMatch = datetimeString.match(/^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}):\\d{2}/);\n          if (datetimeMatch) {\n            element.value = datetimeMatch[1]; // Extract YYYY-MM-DDTHH:MM part\n          } else {\n            console.warn('[Gofakeit Autofill] Could not parse datetime from response:', datetimeString);\n            return { success: false, usedFunc: datetimeFunc };\n          }\n        } catch (error) {\n          console.warn('[Gofakeit Autofill] Error parsing datetime response:', error);\n          return { success: false, usedFunc: datetimeFunc };\n        }\n        break;\n        \n      case 'month':\n        // Use gofakeit year and month functions\n        const yearResponse = await fetchGofakeitData('year');\n        const monthResponse = await fetchGofakeitData('month');\n        \n        if (!yearResponse.success || !monthResponse.success) {\n          console.warn('[Gofakeit Autofill] Error getting year or month:', yearResponse.error || monthResponse.error);\n          if (yearResponse.status === 400 || monthResponse.status === 400) {\n            handleError(element, 'Failed to get random month');\n          }\n          return { success: false, usedFunc: 'year/month' };\n        }\n        \n        // Format month as YYYY-MM\n        const month = monthResponse.data!.padStart(2, '0');\n        element.value = `${yearResponse.data!}-${month}`;\n        break;\n        \n      case 'week':\n        // Use the provided function or default to year + number range\n        const weekFunc = gofakeitFunc === 'true' ? 'date' : gofakeitFunc;\n        \n        if (weekFunc === 'date' || weekFunc.startsWith('daterange')) {\n          // Use date/daterange function and extract week from the result\n          const weekDateResponse = await fetchGofakeitData(weekFunc);\n          \n          if (!weekDateResponse.success) {\n            console.warn('[Gofakeit Autofill] Error getting date for week:', weekDateResponse.error);\n            if (weekDateResponse.status === 400) {\n              handleError(element, 'Failed to get random week');\n            }\n            return { success: false, usedFunc: weekFunc };\n          }\n          \n          // Parse the ISO date string and extract week\n          try {\n            const dateString = weekDateResponse.data!;\n            const dateMatch = dateString.match(/^(\\d{4}-\\d{2}-\\d{2})/);\n            if (dateMatch) {\n              const date = new Date(dateMatch[1]);\n              const year = date.getFullYear();\n              const week = getISOWeek(date);\n              element.value = `${year}-W${week.toString().padStart(2, '0')}`;\n            } else {\n              console.warn('[Gofakeit Autofill] Could not parse date for week from response:', dateString);\n              return { success: false, usedFunc: weekFunc };\n            }\n          } catch (error) {\n            console.warn('[Gofakeit Autofill] Error parsing date for week:', error);\n            return { success: false, usedFunc: weekFunc };\n          }\n        } else {\n          // Use gofakeit year and number range for week (1-53)\n          const weekYearResponse = await fetchGofakeitData('year');\n          const weekResponse = await fetchGofakeitData('number?min=1&max=53');\n          \n          if (!weekYearResponse.success || !weekResponse.success) {\n            console.warn('[Gofakeit Autofill] Error getting year or week:', weekYearResponse.error || weekResponse.error);\n            if (weekYearResponse.status === 400 || weekResponse.status === 400) {\n              handleError(element, 'Failed to get random week');\n            }\n            return { success: false, usedFunc: 'year/number?min=1&max=53' };\n          }\n          \n          // Format week as YYYY-W## (ISO week format)\n          const week = weekResponse.data!.padStart(2, '0');\n          element.value = `${weekYearResponse.data!}-W${week}`;\n        }\n        break;\n        \n      default:\n        console.warn('[Gofakeit Autofill] Unknown date/time input type:', inputType);\n        return { success: false, usedFunc: gofakeitFunc };\n    }\n    \n    // Trigger events to ensure any listeners are notified\n    element.dispatchEvent(new Event('input', { bubbles: true }));\n    element.dispatchEvent(new Event('change', { bubbles: true }));\n    \n    return { success: true, usedFunc: gofakeitFunc === 'true' ? inputType : gofakeitFunc };\n    \n  } catch (error) {\n    console.warn(`[Gofakeit Autofill] Unexpected error handling ${inputType} input:`, error);\n    return { success: false, usedFunc: gofakeitFunc };\n  }\n}\n","import { fetchGofakeitData } from './api';\nimport { handleError } from './autofill';\n\n// Handle text input elements (text, email, tel, password, search, url, color)\nexport async function handleTextInput(element: HTMLInputElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  const inputType = element.type.toLowerCase();\n  \n  // Map input types to appropriate gofakeit functions if 'true' is passed\n  let functionToCall = gofakeitFunc;\n  if (gofakeitFunc === 'true') {\n    switch (inputType) {\n      case 'email':\n        functionToCall = 'email';\n        break;\n      case 'tel':\n        functionToCall = 'phone';\n        break;\n      case 'password':\n        functionToCall = 'password';\n        break;\n      case 'search':\n        functionToCall = 'word';\n        break;\n      case 'url':\n        functionToCall = 'url';\n        break;\n      case 'color':\n        functionToCall = 'hexcolor';\n        break;\n      default:\n        functionToCall = 'word'; // Default for text inputs\n    }\n  }\n  \n  const response = await fetchGofakeitData(functionToCall);\n  \n  if (!response.success) {\n    console.warn(`[Gofakeit Autofill] Error for function ${functionToCall}:`, response.error);\n    \n    if (response.status === 400) {\n      handleError(element, '', functionToCall);\n    }\n    return { success: false, usedFunc: functionToCall };\n  }\n  \n  element.value = response.data!;\n  \n  // Trigger events to ensure any listeners are notified\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n  element.dispatchEvent(new Event('change', { bubbles: true }));\n  \n  return { success: true, usedFunc: functionToCall };\n}\n\n// Handle textarea elements\nexport async function handleTextarea(element: HTMLTextAreaElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  // Use sentence function if 'true' is passed, otherwise use the provided function\n  const functionToCall = gofakeitFunc === 'true' ? 'sentence' : gofakeitFunc;\n  const response = await fetchGofakeitData(functionToCall);\n  \n  if (!response.success) {\n    console.warn(`[Gofakeit Autofill] Error for function ${functionToCall}:`, response.error);\n    \n    if (response.status === 400) {\n      handleError(element, '', functionToCall);\n    }\n    return { success: false, usedFunc: functionToCall };\n  }\n  \n  element.value = response.data!;\n  \n  // Trigger events to ensure any listeners are notified\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n  element.dispatchEvent(new Event('change', { bubbles: true }));\n  \n  return { success: true, usedFunc: functionToCall };\n}\n","import { fetchGofakeitData, fetchRandomString } from './api';\nimport { handleError } from './autofill';\n\n// Handle checkbox input elements\nexport async function handleCheckbox(element: HTMLInputElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  // Find the checkbox group by name\n  const checkboxGroup = findCheckboxGroup(element);\n  \n  if (checkboxGroup.length === 0) {\n    console.warn('[Gofakeit Autofill] No checkbox group found for element:', element);\n    return { success: false, usedFunc: 'bool' };\n  }\n  \n  // Use boolean function if 'true' is passed, otherwise use the provided function\n  const functionToCall = gofakeitFunc === 'true' ? 'bool' : gofakeitFunc;\n  \n  // For checkbox groups, we want to select multiple checkboxes\n  if (gofakeitFunc === 'true') {\n    // Select roughly half of the checkboxes in the group\n    const numToSelect = Math.max(1, Math.ceil(checkboxGroup.length / 2));\n    \n    // Clear all checkboxes first\n    checkboxGroup.forEach(cb => {\n      cb.checked = false;\n      cb.dispatchEvent(new Event('change', { bubbles: true }));\n    });\n    \n    // Select random checkboxes using API\n    const selectedIndices = new Set<number>();\n    for (let i = 0; i < numToSelect; i++) {\n      const boolResponse = await fetchGofakeitData('bool');\n      if (boolResponse.success) {\n        const shouldSelect = boolResponse.data!.toLowerCase() === 'true' || boolResponse.data!.toLowerCase() === '1';\n        if (shouldSelect) {\n          // Find an unselected checkbox\n          const availableIndices = Array.from({ length: checkboxGroup.length }, (_, i) => i)\n            .filter(i => !selectedIndices.has(i));\n          \n          if (availableIndices.length > 0) {\n            const randomIndex = availableIndices[Math.floor(Math.random() * availableIndices.length)];\n            selectedIndices.add(randomIndex);\n            checkboxGroup[randomIndex].checked = true;\n            checkboxGroup[randomIndex].dispatchEvent(new Event('change', { bubbles: true }));\n          }\n        }\n      }\n    }\n  } else {\n    // For custom functions, use the response to determine which checkboxes to select\n    const response = await fetchGofakeitData(functionToCall);\n    \n    if (!response.success) {\n      console.warn(`[Gofakeit Autofill] Error for function ${functionToCall}:`, response.error);\n      \n      if (response.status === 400) {\n        handleError(element, '', functionToCall);\n      }\n      return { success: false, usedFunc: functionToCall };\n    }\n    \n    // Clear all checkboxes first\n    checkboxGroup.forEach(cb => {\n      cb.checked = false;\n      cb.dispatchEvent(new Event('change', { bubbles: true }));\n    });\n    \n    // Parse the response to determine which checkboxes to select\n    const values = response.data!.split(',').map(v => v.trim());\n    \n    checkboxGroup.forEach((cb, index) => {\n      const shouldCheck = values.includes(cb.value) || values.includes(index.toString());\n      cb.checked = shouldCheck;\n      cb.dispatchEvent(new Event('change', { bubbles: true }));\n    });\n  }\n  \n  return { success: true, usedFunc: functionToCall };\n}\n\n// Handle radio input elements\nexport async function handleRadio(element: HTMLInputElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  // Find the radio group by name\n  const radioGroup = findRadioGroup(element);\n  \n  if (radioGroup.length === 0) {\n    console.warn('[Gofakeit Autofill] No radio group found for element:', element);\n    return { success: false, usedFunc: 'bool' };\n  }\n  \n  // Use boolean function if 'true' is passed, otherwise use the provided function\n  const functionToCall = gofakeitFunc === 'true' ? 'bool' : gofakeitFunc;\n  \n  // For radio groups, we want to select exactly one radio button\n  if (gofakeitFunc === 'true') {\n    // Clear all radio buttons first\n    radioGroup.forEach((rb: HTMLInputElement) => {\n      rb.checked = false;\n      rb.dispatchEvent(new Event('change', { bubbles: true }));\n    });\n    \n    // Select a random radio button using API\n    const boolResponse = await fetchGofakeitData('bool');\n    if (boolResponse.success) {\n      const shouldSelect = boolResponse.data!.toLowerCase() === 'true' || boolResponse.data!.toLowerCase() === '1';\n      if (shouldSelect) {\n        const randomIndex = Math.floor(Math.random() * radioGroup.length);\n        radioGroup[randomIndex].checked = true;\n        radioGroup[randomIndex].dispatchEvent(new Event('change', { bubbles: true }));\n      }\n    }\n  } else {\n    // For custom functions, use the response to determine which radio button to select\n    const response = await fetchGofakeitData(functionToCall);\n    \n    if (!response.success) {\n      console.warn(`[Gofakeit Autofill] Error for function ${functionToCall}:`, response.error);\n      \n      if (response.status === 400) {\n        handleError(element, '', functionToCall);\n      }\n      return { success: false, usedFunc: functionToCall };\n    }\n    \n    // Clear all radio buttons first\n    radioGroup.forEach((rb: HTMLInputElement) => {\n      rb.checked = false;\n      rb.dispatchEvent(new Event('change', { bubbles: true }));\n    });\n    \n    // Parse the response to determine which radio button to select\n    const value = response.data!.trim();\n    \n    // Try to find by value first, then by index\n    let selectedRadio = radioGroup.find((rb: HTMLInputElement) => rb.value === value);\n    if (!selectedRadio && !isNaN(Number(value))) {\n      const index = parseInt(value);\n      if (index >= 0 && index < radioGroup.length) {\n        selectedRadio = radioGroup[index];\n      }\n    }\n    \n    // If no match found, select the first one\n    if (selectedRadio) {\n      selectedRadio.checked = true;\n      selectedRadio.dispatchEvent(new Event('change', { bubbles: true }));\n    }\n  }\n  \n  return { success: true, usedFunc: functionToCall };\n}\n\n// Helper function to find checkbox group\nfunction findCheckboxGroup(element: HTMLInputElement): HTMLInputElement[] {\n  if (element.type !== 'checkbox') return [element];\n  \n  // Look for checkboxes with the same name or in the same container\n  const name = element.name;\n  const container = element.closest('form, div, fieldset') || document;\n  \n  if (name) {\n    // Find checkboxes with the same name\n    return Array.from(container.querySelectorAll(`input[type=\"checkbox\"][name=\"${name}\"]`));\n  } else {\n    // Find checkboxes in the same container\n    return Array.from(container.querySelectorAll('input[type=\"checkbox\"]'));\n  }\n}\n\n// Helper function to find radio group\nfunction findRadioGroup(element: HTMLInputElement): HTMLInputElement[] {\n  if (element.type !== 'radio') return [element];\n  \n  // Look for radio buttons with the same name\n  const name = element.name;\n  const container = element.closest('form, div, fieldset') || document;\n  \n  if (name) {\n    // Find radio buttons with the same name\n    return Array.from(container.querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`));\n  } else {\n    // Find radio buttons in the same container\n    return Array.from(container.querySelectorAll('input[type=\"radio\"]'));\n  }\n}\n\n// Handle select dropdown\nexport async function handleSelectWithFunction(element: HTMLSelectElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  const options = Array.from(element.options).map(option => option.value).filter(value => value !== '');\n  \n  if (options.length === 0) {\n    console.warn('[Gofakeit Autofill] Select element has no valid options:', element);\n    return { success: false, usedFunc: gofakeitFunc };\n  }\n  \n  let response;\n  if (gofakeitFunc === 'true') {\n    // Use random selection for 'true'\n    response = await fetchRandomString(options);\n  } else {\n    // Use custom function\n    response = await fetchGofakeitData(gofakeitFunc);\n  }\n  \n  if (!response.success) {\n    console.warn(`[Gofakeit Autofill] Error for select:`, response.error);\n    if (response.status === 400) {\n      handleError(element, 'Failed to get selection');\n    }\n    return { success: false, usedFunc: gofakeitFunc };\n  }\n  \n  if (element.multiple) {\n    // Handle multiselect\n    Array.from(element.options).forEach(option => option.selected = false);\n    \n    if (gofakeitFunc === 'true') {\n      // For random selection, select multiple options (roughly half)\n      const numToSelect = Math.min(Math.ceil(options.length / 2), options.length);\n      const selectedValues = [response.data!];\n      \n      // Add more random selections\n      const remainingOptions = options.filter(opt => opt !== response.data!);\n      for (let i = 1; i < numToSelect && remainingOptions.length > 0; i++) {\n        const randomIndex = Math.floor(Math.random() * remainingOptions.length);\n        selectedValues.push(remainingOptions.splice(randomIndex, 1)[0]);\n      }\n      \n      selectedValues.forEach(value => {\n        const option = element.options.namedItem(value) || Array.from(element.options).find(opt => opt.value === value);\n        if (option) option.selected = true;\n      });\n    } else {\n      // Parse comma-separated values for custom function\n      const selectedValues = response.data!.split(',').map(val => val.trim()).filter(val => val !== '');\n      selectedValues.forEach(value => {\n        const option = element.options.namedItem(value) || Array.from(element.options).find(opt => opt.value === value);\n        if (option) option.selected = true;\n      });\n    }\n  } else {\n    element.value = response.data!;\n  }\n  \n  element.dispatchEvent(new Event('change', { bubbles: true }));\n  return { success: true, usedFunc: gofakeitFunc === 'true' ? 'random' : gofakeitFunc };\n}\n","import { fetchGofakeitData } from './api';\nimport { handleError } from './autofill';\n\n// Handle number input elements\nexport async function handleNumberInput(element: HTMLInputElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  // Use number function if 'true' is passed, otherwise use the provided function\n  const functionToCall = gofakeitFunc === 'true' ? 'number' : gofakeitFunc;\n  const response = await fetchGofakeitData(functionToCall);\n  \n  if (!response.success) {\n    console.warn(`[Gofakeit Autofill] Error for function ${functionToCall}:`, response.error);\n    \n    if (response.status === 400) {\n      handleError(element, '', functionToCall);\n    }\n    return { success: false, usedFunc: functionToCall };\n  }\n  \n  element.value = response.data!;\n  \n  // Trigger events to ensure any listeners are notified\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n  element.dispatchEvent(new Event('change', { bubbles: true }));\n  \n  return { success: true, usedFunc: functionToCall };\n}\n\n// Handle range input elements\nexport async function handleRangeInput(element: HTMLInputElement, _gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  // For range inputs, always use gofakeit API with min/max from the element\n  const min = parseFloat(element.min) || 0;\n  const max = parseFloat(element.max) || 100;\n  \n  // Use number function with min/max parameters\n  const functionToCall = `number?min=${min}&max=${max}`;\n  const response = await fetchGofakeitData(functionToCall);\n  \n  if (!response.success) {\n    console.warn(`[Gofakeit Autofill] Error for range input:`, response.error);\n    \n    if (response.status === 400) {\n      handleError(element, 'Failed to get random number for range');\n    }\n    return { success: false, usedFunc: functionToCall };\n  }\n  \n  element.value = response.data!;\n  \n  // Trigger events to ensure any listeners are notified\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n  element.dispatchEvent(new Event('change', { bubbles: true }));\n  \n  return { success: true, usedFunc: functionToCall };\n}\n","import { hasFunc } from './funcs-short';\nimport { GOFAKEIT_COLORS } from './styles';\nimport { showFieldError } from './field-error';\nimport { handleDateTimeInput } from './input-datetime';\nimport { handleTextInput, handleTextarea } from './input-text';\nimport { handleCheckbox, handleRadio, handleSelectWithFunction } from './input-misc';\nimport { handleNumberInput, handleRangeInput } from './input-number';\n\n// Chrome API type declaration\ndeclare const chrome: {\n  storage: {\n    sync: {\n      get: (keys: any, callback: (items: any) => void) => void;\n    };\n  };\n};\n\n// ============================================================================\n// MAIN PUBLIC FUNCTIONS (Entry Points)\n// ============================================================================\n\n// Autofill all form fields on the page\nexport async function autofillAll(): Promise<void> {\n  const elements = queryFormElements();\n  const smartEnabled = await isSmartFillEnabled();\n\n  const targetsBase = smartEnabled\n    ? elements\n    : elements.filter((el) => (el as Element).hasAttribute('data-gofakeit'));\n  const targets = targetsBase.filter((el) => !isDataGofakeitFalse(el));\n\n  if (targets.length === 0) {\n    if (!smartEnabled) {\n      showNotification('No data-gofakeit fields exist. Turn on Smart-fill to fill this page.', 'info');\n    } else {\n      showNotification('No form fields found to autofill', 'info');\n    }\n    return;\n  }\n\n  console.log(`[Gofakeit] Found ${targets.length} elements to generate data for`);\n  showNotification(`Starting data generation for ${targets.length} fields...`, 'info');\n\n  const results = await processElements(targets, 'Autofill');\n  showResults(results.success, results.failed, 'Autofill');\n}\n\n// Autofill all fields within a specific container\nexport async function autofillContainer(container: HTMLElement): Promise<void> {\n  const elements = queryFormElements(container);\n  const smartEnabled = await isSmartFillEnabled();\n\n  const targetsBase = smartEnabled\n    ? elements\n    : elements.filter((el) => (el as Element).hasAttribute('data-gofakeit'));\n  const targets = targetsBase.filter((el) => !isDataGofakeitFalse(el));\n\n  if (targets.length === 0) {\n    if (!smartEnabled) {\n      showNotification('No data-gofakeit fields exist in this section. Turn on Smart-fill to fill it.', 'info');\n    } else {\n      showNotification('No form fields found in this container', 'info');\n    }\n    return;\n  }\n  \n  console.log(`[Gofakeit] Found ${targets.length} elements to generate data for in container`);\n  showNotification(`Starting data generation for ${targets.length} fields...`, 'info');\n  \n  const results = await processElements(targets, 'Container autofill');\n  showResults(results.success, results.failed, 'Container autofill');\n}\n\n// Main autofill function that routes to specific handlers\nexport async function autofillElement(element: Element): Promise<boolean> {\n  const gofakeitFunc = element.getAttribute('data-gofakeit');\n  if (typeof gofakeitFunc === 'string' && gofakeitFunc.trim().toLowerCase() === 'false') {\n    return false;\n  }\n  const smartEnabled = await isSmartFillEnabled();\n  \n  if (!gofakeitFunc && !smartEnabled) {\n    return false;\n  }\n\n  try {\n    // Handle select dropdowns\n    if (element instanceof HTMLSelectElement) {\n      const funcToUse = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : 'true';\n      const { success, usedFunc } = await handleSelectWithFunction(element, funcToUse);\n      if (success) {\n        showFunctionBadge(element, usedFunc);\n      }\n      return success;\n    }\n    \n    // Handle textarea elements\n    if (element instanceof HTMLTextAreaElement) {\n      const funcToUse = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : 'sentence';\n      const { success, usedFunc } = await handleTextarea(element, funcToUse);\n      if (success) {\n        showFunctionBadge(element, usedFunc);\n      }\n      return success;\n    }\n    \n    // Handle input elements\n    if (element instanceof HTMLInputElement) {\n      const inputType = element.type.toLowerCase();\n      \n      // Handle checkbox inputs\n      if (inputType === 'checkbox') {\n        const passToHandler = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : 'true';\n        const { success, usedFunc } = await handleCheckbox(element, passToHandler);\n        if (success) {\n          showFunctionBadge(element, usedFunc);\n        }\n        return success;\n      }\n      \n      // Handle radio inputs\n      if (inputType === 'radio') {\n        const passToHandler = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : 'true';\n        const { success, usedFunc } = await handleRadio(element, passToHandler);\n        if (success) {\n          showFunctionBadge(element, usedFunc);\n        }\n        return success;\n      }\n      \n      // Handle number inputs\n      if (inputType === 'number') {\n        const inferred = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : (await inferFunctionForInput(element));\n        const { success, usedFunc } = await handleNumberInput(element, inferred);\n        if (success) {\n          showFunctionBadge(element, usedFunc);\n        }\n        return success;\n      }\n      \n      // Handle range inputs\n      if (inputType === 'range') {\n        const inferred = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : (await inferFunctionForInput(element));\n        const { success, usedFunc } = await handleRangeInput(element, inferred);\n        if (success) {\n          showFunctionBadge(element, usedFunc);\n        }\n        return success;\n      }\n      \n      // Handle date/time inputs\n      if (inputType === 'date' || inputType === 'time' || inputType === 'datetime-local' || \n          inputType === 'month' || inputType === 'week') {\n        const inferred = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : (await inferFunctionForInput(element));\n        const { success, usedFunc } = await handleDateTimeInput(element, inferred);\n        if (success) {\n          showFunctionBadge(element, usedFunc);\n        }\n        return success;\n      }\n      \n      // Handle text inputs (text, email, tel, password, search, url, color, etc.)\n      const inferred = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : (await inferFunctionForInput(element));\n      const { success, usedFunc } = await handleTextInput(element, inferred);\n      if (success) {\n        showFunctionBadge(element, usedFunc);\n      }\n      return success;\n    }\n    \n    console.warn('[Gofakeit] Unsupported element type:', element);\n    return false;\n    \n  } catch (error) {\n    console.error('[Gofakeit] Unexpected error generating data for element:', element, error);\n    return false;\n  }\n}\n\n// ============================================================================\n// PROCESSING FUNCTIONS (Called by main functions)\n// ============================================================================\n\n// Query all form elements that can be autofilled\nfunction queryFormElements(container?: HTMLElement): Element[] {\n  const selector = 'input, textarea, select';\n  const nodeList = container ? container.querySelectorAll(selector) : document.querySelectorAll(selector);\n  const elements: Element[] = [];\n  nodeList.forEach((el) => {\n    if (el instanceof HTMLInputElement) {\n      if (el.type === 'hidden' || el.disabled || el.readOnly) return;\n      elements.push(el);\n    } else if (el instanceof HTMLTextAreaElement) {\n      if (el.disabled || el.readOnly) return;\n      elements.push(el);\n    } else if (el instanceof HTMLSelectElement) {\n      if (el.disabled) return;\n      elements.push(el);\n    }\n  });\n  return elements;\n}\n\nfunction isDataGofakeitFalse(el: Element): boolean {\n  const val = (el as Element).getAttribute && (el as Element).getAttribute('data-gofakeit');\n  return typeof val === 'string' && val.trim().toLowerCase() === 'false';\n}\n\n// Get unique elements, handling checkbox and radio groups\nfunction getUniqueElements(elements: Element[]): Element[] {\n  const uniqueElements: Element[] = [];\n  const processedGroups = new Set<string>();\n  \n  for (const element of elements) {\n    if (element instanceof HTMLInputElement) {\n      const inputType = element.type.toLowerCase();\n      \n      if (inputType === 'checkbox' || inputType === 'radio') {\n        const name = element.name;\n        if (name && processedGroups.has(name)) {\n          // Skip if we've already processed this group\n          continue;\n        }\n        if (name) {\n          processedGroups.add(name);\n        }\n      }\n    }\n    \n    uniqueElements.push(element);\n  }\n  \n  return uniqueElements;\n}\n\n// Process multiple elements and track results\nasync function processElements(elements: Element[], _context: string): Promise<{ success: number, failed: number }> {\n  let successfulCount = 0;\n  let failedCount = 0;\n  \n  // Get unique elements to avoid processing checkbox/radio groups multiple times\n  const uniqueElements = getUniqueElements(elements);\n\n  for (const element of uniqueElements) {\n    try {\n      const success = await autofillElement(element);\n      if (success) {\n        successfulCount++;\n        \n        // Monitor if the value gets cleared after a short delay\n        setTimeout(() => {\n          if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\n            if (element.value === '') {\n              console.warn('[Gofakeit Autofill] Value was cleared for element:', element);\n            }\n          } else if (element instanceof HTMLSelectElement) {\n            if (element.value === '') {\n              console.warn('[Gofakeit Autofill] Value was cleared for select:', element);\n            }\n          }\n        }, 1000);\n        \n      } else {\n        failedCount++;\n      }\n    } catch (error) {\n      failedCount++;\n      console.warn(`[Gofakeit Autofill] Failed to autofill element:`, element, error);\n    }\n  }\n\n  return { success: successfulCount, failed: failedCount };\n}\n\n// Show results notification\nfunction showResults(successfulCount: number, failedCount: number, context: string): void {\n  // Show successful count notification\n  if (successfulCount > 0) {\n    console.log(`[Gofakeit] ${context} completed successfully for ${successfulCount} fields`);\n    showNotification(`Successfully generated data for ${successfulCount} fields!`, 'success');\n  }\n  \n  // Show failed count notification\n  if (failedCount > 0) {\n    console.error(`[Gofakeit] ${context} failed for ${failedCount} fields`);\n    showNotification(`Failed to generate data for ${failedCount} fields.`, 'error');\n  }\n  \n  // If no fields were processed at all\n  if (successfulCount === 0 && failedCount === 0) {\n    console.log(`[Gofakeit] ${context} - no fields were processed`);\n    showNotification(`No fields were processed.`, 'info');\n  }\n}\n\n// ============================================================================\n// UTILITY FUNCTIONS (Called by various functions)\n// ============================================================================\n\n// Handle error display and field highlighting\nexport function handleError(element: Element, error: string, functionName?: string): void {\n  if (element instanceof HTMLElement) {\n    element.style.border = `2px solid var(--color-error)`;\n    \n    setTimeout(() => {\n      element.style.border = '';\n    }, 5000);\n  }\n  \n  const message = functionName ? `Invalid function: ${functionName}` : error;\n  showFieldError(element, message);\n}\n\n// Check if an element contains form fields with data-gofakeit attributes\nexport function hasFormFields(element: HTMLElement): boolean {\n  const formFields = element.querySelectorAll('input[data-gofakeit], textarea[data-gofakeit], select[data-gofakeit]');\n  return formFields.length > 0;\n}\n\n// Check if an element is a form field with data-gofakeit attribute\nexport function isFormField(element: HTMLElement): boolean {\n  return (\n    (element.tagName === 'INPUT' || element.tagName === 'TEXTAREA' || element.tagName === 'SELECT') &&\n    element.hasAttribute('data-gofakeit')\n  );\n}\n\n// Display a small badge showing the function used for this field\nfunction showFunctionBadge(element: Element, funcName: string): void {\n  if (!(element instanceof HTMLElement)) return;\n\n  const badge = document.createElement('div');\n  badge.textContent = funcName;\n  badge.style.position = 'fixed';\n  badge.style.background = GOFAKEIT_COLORS.primary;\n  badge.style.color = '#000';\n  badge.style.fontFamily = 'Arial, sans-serif';\n  badge.style.fontSize = '11px';\n  badge.style.padding = '3px 8px';\n  badge.style.borderRadius = '6px';\n  badge.style.boxShadow = '0 2px 6px rgba(0,0,0,0.25)';\n  badge.style.zIndex = '2147483647';\n  badge.style.opacity = '0';\n  badge.style.transform = 'translateY(-6px)';\n  badge.style.transition = 'opacity 200ms ease, transform 200ms ease';\n  badge.style.pointerEvents = 'none';\n\n  const updatePosition = () => {\n    const rect = element.getBoundingClientRect();\n    const vh = window.innerHeight || document.documentElement.clientHeight;\n    const vw = window.innerWidth || document.documentElement.clientWidth;\n\n    // If the element is completely out of the viewport, hide the badge entirely\n    const outOfView = rect.bottom <= 0 || rect.top >= vh || rect.right <= 0 || rect.left >= vw;\n    if (outOfView) {\n      badge.style.display = 'none';\n      return;\n    }\n\n    // Otherwise, ensure it's visible and position above-left of the field\n    if (badge.style.display === 'none') badge.style.display = 'block';\n    const top = rect.top - 8;\n    const left = rect.left;\n    badge.style.top = `${top}px`;\n    badge.style.left = `${left}px`;\n  };\n\n  document.body.appendChild(badge);\n  updatePosition();\n\n  // Animate in\n  requestAnimationFrame(() => {\n    badge.style.opacity = '1';\n    badge.style.transform = 'translateY(-12px)';\n  });\n\n  // Track movement while visible\n  const onScroll = () => updatePosition();\n  const onResize = () => updatePosition();\n  window.addEventListener('scroll', onScroll, true);\n  window.addEventListener('resize', onResize, true);\n\n  // Observe element size/position changes\n  let ro: ResizeObserver | null = null;\n  if (typeof ResizeObserver !== 'undefined') {\n    ro = new ResizeObserver(() => updatePosition());\n    try { ro.observe(element); } catch {}\n  }\n\n  // Animate out and remove after extended delay\n  const DISPLAY_MS = 6000;\n  setTimeout(() => {\n    badge.style.opacity = '0';\n    badge.style.transform = 'translateY(-6px)';\n    setTimeout(() => {\n      window.removeEventListener('scroll', onScroll, true);\n      window.removeEventListener('resize', onResize, true);\n      if (ro) {\n        try { ro.disconnect(); } catch {}\n        ro = null;\n      }\n      if (badge.parentNode) badge.parentNode.removeChild(badge);\n    }, 220);\n  }, DISPLAY_MS);\n}\n\n// Read smart-fill setting\nasync function isSmartFillEnabled(): Promise<boolean> {\n  return new Promise((resolve) => {\n    try {\n      chrome.storage.sync.get({ gofakeitSmartFill: true }, (items) => {\n        resolve(!!items.gofakeitSmartFill);\n      });\n    } catch {\n      resolve(false);\n    }\n  });\n}\n\n// Extract nearby/associated label text for context\nfunction getAssociatedLabelText(input: HTMLInputElement): string {\n  const texts: string[] = [];\n  const id = input.id;\n  // aria-labelledby\n  const labelledBy = input.getAttribute('aria-labelledby');\n  if (labelledBy) {\n    labelledBy.split(/\\s+/).forEach((ref) => {\n      const el = document.getElementById(ref);\n      if (el && el.textContent) texts.push(el.textContent);\n    });\n  }\n  // explicit label[for]\n  if (id) {\n    try {\n      const lbl = document.querySelector('label[for=\"' + id.replace(/\"/g, '\\\\\"') + '\"]') as HTMLLabelElement | null;\n      if (lbl && lbl.textContent) texts.push(lbl.textContent);\n    } catch {}\n  }\n  // implicit parent label\n  const closestLabel = input.closest('label');\n  if (closestLabel && closestLabel.textContent) texts.push(closestLabel.textContent);\n  // previous sibling label (common in some UIs)\n  const prev = input.previousElementSibling as HTMLElement | null;\n  if (prev && prev.tagName === 'LABEL' && prev.textContent) texts.push(prev.textContent);\n  return texts.join(' ').toLowerCase();\n}\n\n// Infer best-fit function name for an input based on type/name/placeholder\nasync function inferFunctionForInput(input: HTMLInputElement): Promise<string> {\n  const type = input.type.toLowerCase();\n  const name = (input.name || '').toLowerCase();\n  const id = (input.id || '').toLowerCase();\n  const placeholder = (input.placeholder || '').toLowerCase();\n  const autocomplete = (input.autocomplete || '').toLowerCase();\n  const ariaLabel = (input.getAttribute('aria-label') || '').toLowerCase();\n  const labelText = getAssociatedLabelText(input);\n\n  const text = `${name} ${id} ${placeholder} ${autocomplete} ${ariaLabel} ${labelText}`;\n\n  // Helper to ensure function exists\n  const pick = (fn: string, fallback: string = 'word'): string => (hasFunc(fn) ? fn : fallback);\n\n  // Direct type mappings\n  if (type === 'email' || /email/.test(text)) return pick('email');\n  if (type === 'password' || /password|pass/.test(text)) return pick('password');\n  if (type === 'tel' || /phone|tel|mobile/.test(text)) return pick('phone');\n  if (type === 'url' || /url|website/.test(text)) return pick('url');\n  if (type === 'color' || /color/.test(text)) return pick('hexcolor');\n  // Numeric-like hints (avoid matching 'account' via word boundaries)\n  if (type === 'number' || /\\b(?:age|qty|quantity|count|amount)\\b/.test(text)) {\n    return hasFunc('number') ? 'number?min=1&max=9999' : 'word';\n  }\n\n  // Placeholder-only numeric hint: if no numeric type but placeholder looks numeric\n  // Example: placeholder=\"0.000\" → float-like; placeholder=\"123\" → int-like\n  if ((type === '' || type === 'text')) {\n    const placeholderRaw = (input.placeholder || '').trim();\n    if (/^[+-]?\\d+$/.test(placeholderRaw)) {\n      const digits = Math.min(placeholderRaw.replace(/[^0-9]/g, '').length || 1, 9);\n      const max = Math.pow(10, digits) - 1;\n      return `number?min=0&max=${max}`;\n    }\n    if (/^[+-]?\\d+\\.\\d+$/.test(placeholderRaw)) {\n      const parts = placeholderRaw.replace(/[^0-9.]/g, '').split('.');\n      const fracDigits = Math.min((parts[1] || '2').length, 6);\n      return `generate?str={number:0,100}.{generate:${'#'.repeat(fracDigits)}}`;\n    }\n  }\n\n  // Credit card number detection\n  const looksLikeCcField =\n    /credit\\s*card|card\\b|cc\\b/.test(text) && /(number|no|num)/.test(text) ||\n    /card[-_ ]?number|credit[-_ ]?card[-_ ]?number/.test(text) ||\n    ariaLabel.includes('credit card number') ||\n    placeholder.includes('••••') ||\n    (input.maxLength >= 16 && input.maxLength <= 19 && (/card|credit/.test(text)));\n  if (looksLikeCcField) {\n    return 'creditcardnumber';\n  }\n\n  // Credit card CVV/CVC/Security Code\n  if (/\\bcvv\\b|\\bcvc\\b|security\\s*code|card\\s*code|\\bcid\\b|\\bcv2\\b/.test(text)) {\n    if (hasFunc('creditcardcvv')) return 'creditcardcvv';\n  }\n\n  // Credit card Expiry / Expiration date\n  if (/\\bexp(iry|iration)?\\b|valid\\s*(thru|through)|mm\\s*\\/\\s*yy|yy\\s*\\/\\s*mm|mm\\s*yy|yy\\s*mm|expiry\\s*date|exp\\.?\\s*date/.test(text)\n      || /\\b\\d{2}\\s*\\/\\s*\\d{2}\\b/.test((input.value || '').toLowerCase())) {\n    if (hasFunc('creditcardexp')) return 'creditcardexp';\n  }\n\n  // After card-specific checks, fall back to general date/time\n  if (type === 'date' || /\\bdate\\b|\\bdob\\b|birthday/.test(text)) return pick('date');\n  if (type === 'time' || /\\btime\\b/.test(text)) return pick('date');\n  if (type === 'datetime-local' || /\\bdatetime\\b|appointment/.test(text)) return pick('date');\n\n  // Bank account and routing numbers\n  if (/\\baccount\\b\\s*(?:number|no)\\b|\\bacct\\b/.test(text) || /\\baccount\\s*number\\b/.test(placeholder)) {\n    if (hasFunc('achaccount')) return 'achaccount';\n  }\n  if (/routing\\s*(number|no)|\\baba\\b/.test(text)) {\n    if (hasFunc('achrouting')) return 'achrouting';\n  }\n\n  // Common field heuristics\n  // Address line 2 / unit identifiers (must come before generic address/street)\n  if (/(^|\\b)(apartment|apt|suite|unit|floor|bldg|building|room|ste|address[-_ ]?line[-_ ]?2|address2|addr2|line[-_ ]?2)(\\b|$)/.test(text)) {\n    return pick('unit');\n  }\n  if (/first\\s*name|firstname|first_name|given/.test(text)) return pick('firstname');\n  if (/last\\s*name|lastname|last_name|surname|family/.test(text)) return pick('lastname');\n  if (/full\\s*name|fullname/.test(text)) return pick('name');\n  if (/city/.test(text)) return pick('city');\n  if (/state|province|region/.test(text)) return pick('state');\n  if (/\\bpostal\\b|\\bpostal[-_ ]?code\\b|\\bpostcode\\b|\\bzip\\b|\\bzip[-_ ]?code\\b/.test(text)) {\n    return hasFunc('postcode') ? 'postcode' : 'zip';\n  }\n  if (/address|street/.test(text)) return pick('street');\n  if (/company|organization|org/.test(text)) return pick('company');\n  if (/job|title|role/.test(text)) return pick('jobtitle', pick('job'));\n  if (/website|domain/.test(text)) return pick('url');\n  if (/username|user\\b/.test(text)) return pick('username');\n\n  // Fallbacks\n  if (type === 'search') return 'word';\n  if (hasFunc('word')) return 'word';\n  return 'word';\n}\n\n// Find the closest container that has form fields with data-gofakeit attributes\nexport function findFormContainer(element: HTMLElement): HTMLElement | null {\n  // Check if the current element has form fields\n  if (hasFormFields(element)) {\n    return element;\n  }\n  \n  // Check parent elements\n  let parent = element.parentElement;\n  while (parent) {\n    if (hasFormFields(parent)) {\n      return parent;\n    }\n    parent = parent.parentElement;\n  }\n  \n  return null;\n}\n\n// Simple notification function (can be overridden by the consuming application)\nfunction showNotification(message: string, type: 'success' | 'error' | 'info' = 'info'): void {\n  console.log(`[Gofakeit ${type.toUpperCase()}] ${message}`);\n}\n"],"names":["element","i","success","usedFunc","inferred"],"mappings":"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"}