{"version":3,"file":"index.cjs","sources":["../src/funcs.ts","../src/styles.ts","../src/field-error.ts","../src/api.ts","../src/input-datetime.ts","../src/input-text.ts","../src/input-misc.ts","../src/input-number.ts","../src/autofill.ts"],"sourcesContent":["// Function list types\nexport interface Func {\n  value: string; // function name\n  display: string;\n  category: string;\n}\n\n// This file is generated/maintained manually to avoid heavy runtime requests.\n// It must export a normalized list and fast lookup helpers used by inference.\n\nconst FUNCS: Func[] = [{\"value\":\"phraseadverb\",\"display\":\"Adverb Phrase\",\"category\":\"word\"},{\"value\":\"country\",\"display\":\"Country\",\"category\":\"address\"},{\"value\":\"latituderange\",\"display\":\"Latitude Range\",\"category\":\"address\"},{\"value\":\"longituderange\",\"display\":\"Longitude Range\",\"category\":\"address\"},{\"value\":\"bs\",\"display\":\"BS\",\"category\":\"company\"},{\"value\":\"hackerabbreviation\",\"display\":\"Hacker Abbreviation\",\"category\":\"hacker\"},{\"value\":\"hackeringverb\",\"display\":\"Hackering Verb\",\"category\":\"hacker\"},{\"value\":\"uint64\",\"display\":\"Uint64\",\"category\":\"number\"},{\"value\":\"hobby\",\"display\":\"Hobby\",\"category\":\"person\"},{\"value\":\"errorhttpclient\",\"display\":\"HTTP client error\",\"category\":\"error\"},{\"value\":\"programminglanguage\",\"display\":\"Programming Language\",\"category\":\"language\"},{\"value\":\"minecraftarmortier\",\"display\":\"Minecraft armor tier\",\"category\":\"minecraft\"},{\"value\":\"songname\",\"display\":\"Song Name\",\"category\":\"song\"},{\"value\":\"nouncommon\",\"display\":\"Noun Common\",\"category\":\"word\"},{\"value\":\"nouncollectivepeople\",\"display\":\"Noun Collective People\",\"category\":\"word\"},{\"value\":\"verbaction\",\"display\":\"Action Verb\",\"category\":\"word\"},{\"value\":\"celebrityactor\",\"display\":\"Celebrity Actor\",\"category\":\"celebrity\"},{\"value\":\"safecolor\",\"display\":\"Safe Color\",\"category\":\"color\"},{\"value\":\"minecraftvillagerstation\",\"display\":\"Minecraft villager station\",\"category\":\"minecraft\"},{\"value\":\"company\",\"display\":\"Company\",\"category\":\"company\"},{\"value\":\"productaudience\",\"display\":\"Product Audience\",\"category\":\"product\"},{\"value\":\"beerhop\",\"display\":\"Beer Hop\",\"category\":\"beer\"},{\"value\":\"hackerverb\",\"display\":\"Hacker Verb\",\"category\":\"hacker\"},{\"value\":\"int32\",\"display\":\"Int32\",\"category\":\"number\"},{\"value\":\"longitude\",\"display\":\"Longitude\",\"category\":\"address\"},{\"value\":\"beeryeast\",\"display\":\"Beer Yeast\",\"category\":\"beer\"},{\"value\":\"emojicategory\",\"display\":\"Emoji Category\",\"category\":\"emoji\"},{\"value\":\"snack\",\"display\":\"Snack\",\"category\":\"food\"},{\"value\":\"minecraftbiome\",\"display\":\"Minecraft biome\",\"category\":\"minecraft\"},{\"value\":\"flipacoin\",\"display\":\"Flip A Coin\",\"category\":\"misc\"},{\"value\":\"uintrange\",\"display\":\"UintRange\",\"category\":\"number\"},{\"value\":\"verbhelping\",\"display\":\"Helping Verb\",\"category\":\"word\"},{\"value\":\"blurb\",\"display\":\"Blurb\",\"category\":\"company\"},{\"value\":\"emoji\",\"display\":\"Emoji\",\"category\":\"emoji\"},{\"value\":\"uintn\",\"display\":\"UintN\",\"category\":\"number\"},{\"value\":\"price\",\"display\":\"Price\",\"category\":\"payment\"},{\"value\":\"adjectiveproper\",\"display\":\"Proper Adjective\",\"category\":\"word\"},{\"value\":\"nouncountable\",\"display\":\"Noun Countable\",\"category\":\"word\"},{\"value\":\"username\",\"display\":\"Username\",\"category\":\"auth\"},{\"value\":\"buzzword\",\"display\":\"Buzzword\",\"category\":\"company\"},{\"value\":\"map\",\"display\":\"Map\",\"category\":\"generate\"},{\"value\":\"loremipsumsentence\",\"display\":\"Lorem Ipsum Sentence\",\"category\":\"word\"},{\"value\":\"moviegenre\",\"display\":\"Genre\",\"category\":\"movie\"},{\"value\":\"int16\",\"display\":\"Int16\",\"category\":\"number\"},{\"value\":\"namesuffix\",\"display\":\"Name Suffix\",\"category\":\"person\"},{\"value\":\"weighted\",\"display\":\"Weighted\",\"category\":\"misc\"},{\"value\":\"emojidescription\",\"display\":\"Emoji Description\",\"category\":\"emoji\"},{\"value\":\"minecraftanimal\",\"display\":\"Minecraft animal\",\"category\":\"minecraft\"},{\"value\":\"shuffleints\",\"display\":\"Shuffle Ints\",\"category\":\"number\"},{\"value\":\"creditcardtype\",\"display\":\"Credit Card Type\",\"category\":\"payment\"},{\"value\":\"bitcoinaddress\",\"display\":\"Bitcoin Address\",\"category\":\"payment\"},{\"value\":\"drink\",\"display\":\"Drink\",\"category\":\"food\"},{\"value\":\"intrange\",\"display\":\"IntRange\",\"category\":\"number\"},{\"value\":\"currencylong\",\"display\":\"Currency Long\",\"category\":\"payment\"},{\"value\":\"teams\",\"display\":\"Teams\",\"category\":\"person\"},{\"value\":\"adjectivequantitative\",\"display\":\"Quantitative Adjective\",\"category\":\"word\"},{\"value\":\"adjectivepossessive\",\"display\":\"Possessive Adjective\",\"category\":\"word\"},{\"value\":\"bird\",\"display\":\"Bird\",\"category\":\"animal\"},{\"value\":\"pastdate\",\"display\":\"PastDate\",\"category\":\"time\"},{\"value\":\"ipv4address\",\"display\":\"IPv4 Address\",\"category\":\"internet\"},{\"value\":\"shufflestrings\",\"display\":\"Shuffle Strings\",\"category\":\"string\"},{\"value\":\"verblinking\",\"display\":\"Linking Verb\",\"category\":\"word\"},{\"value\":\"interjection\",\"display\":\"Interjection\",\"category\":\"word\"},{\"value\":\"second\",\"display\":\"Second\",\"category\":\"time\"},{\"value\":\"pronounpossessive\",\"display\":\"Pronoun Possessive\",\"category\":\"word\"},{\"value\":\"errorobject\",\"display\":\"Error object word\",\"category\":\"error\"},{\"value\":\"middlename\",\"display\":\"Middle Name\",\"category\":\"person\"},{\"value\":\"email_text\",\"display\":\"Random text email Document\",\"category\":\"template\"},{\"value\":\"streetnumber\",\"display\":\"Street Number\",\"category\":\"address\"},{\"value\":\"minute\",\"display\":\"Minute\",\"category\":\"time\"},{\"value\":\"productupc\",\"display\":\"Product UPC\",\"category\":\"product\"},{\"value\":\"template\",\"display\":\"Template\",\"category\":\"template\"},{\"value\":\"pronoun\",\"display\":\"Pronoun\",\"category\":\"word\"},{\"value\":\"zip\",\"display\":\"Zip\",\"category\":\"address\"},{\"value\":\"day\",\"display\":\"Day\",\"category\":\"time\"},{\"value\":\"json\",\"display\":\"JSON\",\"category\":\"file\"},{\"value\":\"xml\",\"display\":\"XML\",\"category\":\"file\"},{\"value\":\"lunch\",\"display\":\"Lunch\",\"category\":\"food\"},{\"value\":\"connectiveexamplify\",\"display\":\"Connective Examplify\",\"category\":\"word\"},{\"value\":\"productname\",\"display\":\"Product Name\",\"category\":\"product\"},{\"value\":\"productusecase\",\"display\":\"Product Use Case\",\"category\":\"product\"},{\"value\":\"productsuffix\",\"display\":\"Product Suffix\",\"category\":\"product\"},{\"value\":\"randomstring\",\"display\":\"Random String\",\"category\":\"string\"},{\"value\":\"timezone\",\"display\":\"Timezone\",\"category\":\"time\"},{\"value\":\"dessert\",\"display\":\"Dessert\",\"category\":\"food\"},{\"value\":\"imagejpeg\",\"display\":\"Image JPEG\",\"category\":\"image\"},{\"value\":\"creditcardnumber\",\"display\":\"Credit Card Number\",\"category\":\"payment\"},{\"value\":\"nouncollectivething\",\"display\":\"Noun Collective Thing\",\"category\":\"word\"},{\"value\":\"verbintransitive\",\"display\":\"Intransitive Verb\",\"category\":\"word\"},{\"value\":\"streetsuffix\",\"display\":\"Street Suffix\",\"category\":\"address\"},{\"value\":\"isin\",\"display\":\"ISIN\",\"category\":\"finance\"},{\"value\":\"person\",\"display\":\"Person\",\"category\":\"person\"},{\"value\":\"cartransmissiontype\",\"display\":\"Car Transmission Type\",\"category\":\"car\"},{\"value\":\"email\",\"display\":\"Email\",\"category\":\"person\"},{\"value\":\"productbenefit\",\"display\":\"Product Benefit\",\"category\":\"product\"},{\"value\":\"lettern\",\"display\":\"LetterN\",\"category\":\"string\"},{\"value\":\"adverb\",\"display\":\"Adverb\",\"category\":\"word\"},{\"value\":\"preposition\",\"display\":\"Preposition\",\"category\":\"word\"},{\"value\":\"prepositiondouble\",\"display\":\"Preposition Double\",\"category\":\"word\"},{\"value\":\"timezonefull\",\"display\":\"Timezone Full\",\"category\":\"time\"},{\"value\":\"errordatabase\",\"display\":\"Database error\",\"category\":\"error\"},{\"value\":\"fileextension\",\"display\":\"File Extension\",\"category\":\"file\"},{\"value\":\"cusip\",\"display\":\"CUSIP\",\"category\":\"finance\"},{\"value\":\"movie\",\"display\":\"Movie\",\"category\":\"movie\"},{\"value\":\"nameprefix\",\"display\":\"Name Prefix\",\"category\":\"person\"},{\"value\":\"product\",\"display\":\"Product\",\"category\":\"product\"},{\"value\":\"connectivelisting\",\"display\":\"Connective Listing\",\"category\":\"word\"},{\"value\":\"timezoneabv\",\"display\":\"Timezone Abbreviation\",\"category\":\"time\"},{\"value\":\"lastname\",\"display\":\"Last Name\",\"category\":\"person\"},{\"value\":\"vowel\",\"display\":\"Vowel\",\"category\":\"string\"},{\"value\":\"markdown\",\"display\":\"Random markdown document\",\"category\":\"template\"},{\"value\":\"connectivetime\",\"display\":\"Connective Time\",\"category\":\"word\"},{\"value\":\"phrase\",\"display\":\"Phrase\",\"category\":\"word\"},{\"value\":\"countryabr\",\"display\":\"Country Abbreviation\",\"category\":\"address\"},{\"value\":\"beermalt\",\"display\":\"Beer Malt\",\"category\":\"beer\"},{\"value\":\"nouncollectiveanimal\",\"display\":\"Noun Collective Animal\",\"category\":\"word\"},{\"value\":\"emojialias\",\"display\":\"Emoji Alias\",\"category\":\"emoji\"},{\"value\":\"httpstatuscode\",\"display\":\"HTTP Status Code\",\"category\":\"internet\"},{\"value\":\"adjectiveindefinite\",\"display\":\"Indefinite Adjective\",\"category\":\"word\"},{\"value\":\"question\",\"display\":\"Question\",\"category\":\"word\"},{\"value\":\"cat\",\"display\":\"Cat\",\"category\":\"animal\"},{\"value\":\"carmaker\",\"display\":\"Car Maker\",\"category\":\"car\"},{\"value\":\"ipv6address\",\"display\":\"IPv6 Address\",\"category\":\"internet\"},{\"value\":\"httpstatuscodesimple\",\"display\":\"HTTP Status Code Simple\",\"category\":\"internet\"},{\"value\":\"minecraftarmorpart\",\"display\":\"Minecraft armor part\",\"category\":\"minecraft\"},{\"value\":\"minecraftmobneutral\",\"display\":\"Minecraft mob neutral\",\"category\":\"minecraft\"},{\"value\":\"currencyshort\",\"display\":\"Currency Short\",\"category\":\"payment\"},{\"value\":\"achaccount\",\"display\":\"ACH Account Number\",\"category\":\"payment\"},{\"value\":\"song\",\"display\":\"Song\",\"category\":\"song\"},{\"value\":\"prepositionsimple\",\"display\":\"Preposition Simple\",\"category\":\"word\"},{\"value\":\"verbtransitive\",\"display\":\"Transitive Verb\",\"category\":\"word\"},{\"value\":\"slogan\",\"display\":\"Slogan\",\"category\":\"company\"},{\"value\":\"loglevel\",\"display\":\"Log Level\",\"category\":\"internet\"},{\"value\":\"currency\",\"display\":\"Currency\",\"category\":\"payment\"},{\"value\":\"creditcardcvv\",\"display\":\"Credit Card CVV\",\"category\":\"payment\"},{\"value\":\"phoneformatted\",\"display\":\"Phone Formatted\",\"category\":\"person\"},{\"value\":\"adjective\",\"display\":\"Adjective\",\"category\":\"word\"},{\"value\":\"connectivecomplaint\",\"display\":\"Connective Complaint\",\"category\":\"word\"},{\"value\":\"productcategory\",\"display\":\"Product Category\",\"category\":\"product\"},{\"value\":\"beeralcohol\",\"display\":\"Beer Alcohol\",\"category\":\"beer\"},{\"value\":\"date\",\"display\":\"Date\",\"category\":\"time\"},{\"value\":\"nanosecond\",\"display\":\"Nanosecond\",\"category\":\"time\"},{\"value\":\"language\",\"display\":\"Language\",\"category\":\"language\"},{\"value\":\"productisbn\",\"display\":\"Product ISBN\",\"category\":\"product\"},{\"value\":\"hexcolor\",\"display\":\"Hex Color\",\"category\":\"color\"},{\"value\":\"daterange\",\"display\":\"DateRange\",\"category\":\"time\"},{\"value\":\"minecraftvillagerjob\",\"display\":\"Minecraft villager job\",\"category\":\"minecraft\"},{\"value\":\"noundeterminer\",\"display\":\"Noun Determiner\",\"category\":\"word\"},{\"value\":\"password\",\"display\":\"Password\",\"category\":\"auth\"},{\"value\":\"job\",\"display\":\"Job\",\"category\":\"company\"},{\"value\":\"safariuseragent\",\"display\":\"Safari User Agent\",\"category\":\"internet\"},{\"value\":\"randomint\",\"display\":\"Random Int\",\"category\":\"number\"},{\"value\":\"hexuint\",\"display\":\"HexUint\",\"category\":\"number\"},{\"value\":\"comment\",\"display\":\"Comment\",\"category\":\"word\"},{\"value\":\"state\",\"display\":\"State\",\"category\":\"address\"},{\"value\":\"breakfast\",\"display\":\"Breakfast\",\"category\":\"food\"},{\"value\":\"dinner\",\"display\":\"Dinner\",\"category\":\"food\"},{\"value\":\"banktype\",\"display\":\"Bank Type\",\"category\":\"payment\"},{\"value\":\"streetname\",\"display\":\"Street Name\",\"category\":\"address\"},{\"value\":\"errorgrpc\",\"display\":\"gRPC error\",\"category\":\"error\"},{\"value\":\"operauseragent\",\"display\":\"Opera User Agent\",\"category\":\"internet\"},{\"value\":\"minecraftmobboss\",\"display\":\"Minecraft mob boss\",\"category\":\"minecraft\"},{\"value\":\"float32\",\"display\":\"Float32\",\"category\":\"number\"},{\"value\":\"songgenre\",\"display\":\"Genre\",\"category\":\"song\"},{\"value\":\"phrasenoun\",\"display\":\"Noun Phrase\",\"category\":\"word\"},{\"value\":\"monthstring\",\"display\":\"Month String\",\"category\":\"time\"},{\"value\":\"loremipsumword\",\"display\":\"Lorem Ipsum Word\",\"category\":\"word\"},{\"value\":\"productmaterial\",\"display\":\"Product Material\",\"category\":\"product\"},{\"value\":\"adjectiveinterrogative\",\"display\":\"Interrogative Adjective\",\"category\":\"word\"},{\"value\":\"booktitle\",\"display\":\"Title\",\"category\":\"book\"},{\"value\":\"uint32\",\"display\":\"Uint32\",\"category\":\"number\"},{\"value\":\"phrasepreposition\",\"display\":\"Preposition Phrase\",\"category\":\"word\"},{\"value\":\"animal\",\"display\":\"Animal\",\"category\":\"animal\"},{\"value\":\"fruit\",\"display\":\"Fruit\",\"category\":\"food\"},{\"value\":\"regex\",\"display\":\"Regex\",\"category\":\"generate\"},{\"value\":\"minecraftweapon\",\"display\":\"Minecraft weapon\",\"category\":\"minecraft\"},{\"value\":\"beeribu\",\"display\":\"Beer IBU\",\"category\":\"beer\"},{\"value\":\"minecraftmobhostile\",\"display\":\"Minecraft mob hostile\",\"category\":\"minecraft\"},{\"value\":\"randomuint\",\"display\":\"Random Uint\",\"category\":\"number\"},{\"value\":\"achrouting\",\"display\":\"ACH Routing Number\",\"category\":\"payment\"},{\"value\":\"bankname\",\"display\":\"Bank Name\",\"category\":\"payment\"},{\"value\":\"gender\",\"display\":\"Gender\",\"category\":\"person\"},{\"value\":\"pronoundemonstrative\",\"display\":\"Pronoun Demonstrative\",\"category\":\"word\"},{\"value\":\"pronounrelative\",\"display\":\"Pronoun Relative\",\"category\":\"word\"},{\"value\":\"street\",\"display\":\"Street\",\"category\":\"address\"},{\"value\":\"year\",\"display\":\"Year\",\"category\":\"time\"},{\"value\":\"gamertag\",\"display\":\"Gamertag\",\"category\":\"game\"},{\"value\":\"int\",\"display\":\"Int\",\"category\":\"number\"},{\"value\":\"cartype\",\"display\":\"Car Type\",\"category\":\"car\"},{\"value\":\"timezoneoffset\",\"display\":\"Timezone Offset\",\"category\":\"time\"},{\"value\":\"name\",\"display\":\"Name\",\"category\":\"person\"},{\"value\":\"hackernoun\",\"display\":\"Hacker Noun\",\"category\":\"hacker\"},{\"value\":\"inputname\",\"display\":\"Input Name\",\"category\":\"html\"},{\"value\":\"float32range\",\"display\":\"Float32 Range\",\"category\":\"number\"},{\"value\":\"beerstyle\",\"display\":\"Beer Style\",\"category\":\"beer\"},{\"value\":\"book\",\"display\":\"Book\",\"category\":\"book\"},{\"value\":\"celebritybusiness\",\"display\":\"Celebrity Business\",\"category\":\"celebrity\"},{\"value\":\"month\",\"display\":\"Month\",\"category\":\"time\"},{\"value\":\"macaddress\",\"display\":\"MAC Address\",\"category\":\"internet\"},{\"value\":\"uint8\",\"display\":\"Uint8\",\"category\":\"number\"},{\"value\":\"firstname\",\"display\":\"First Name\",\"category\":\"person\"},{\"value\":\"adjectivedescriptive\",\"display\":\"Descriptive Adjective\",\"category\":\"word\"},{\"value\":\"dog\",\"display\":\"Dog\",\"category\":\"animal\"},{\"value\":\"beername\",\"display\":\"Beer Name\",\"category\":\"beer\"},{\"value\":\"vegetable\",\"display\":\"Vegetable\",\"category\":\"food\"},{\"value\":\"useragent\",\"display\":\"User Agent\",\"category\":\"internet\"},{\"value\":\"minecraftore\",\"display\":\"Minecraft ore\",\"category\":\"minecraft\"},{\"value\":\"nounconcrete\",\"display\":\"Noun Concrete\",\"category\":\"word\"},{\"value\":\"verb\",\"display\":\"Verb\",\"category\":\"word\"},{\"value\":\"stateabr\",\"display\":\"State Abbreviation\",\"category\":\"address\"},{\"value\":\"error\",\"display\":\"Error\",\"category\":\"error\"},{\"value\":\"loremipsumparagraph\",\"display\":\"Lorem Ipsum Paragraph\",\"category\":\"word\"},{\"value\":\"digit\",\"display\":\"Digit\",\"category\":\"string\"},{\"value\":\"numerify\",\"display\":\"Numerify\",\"category\":\"string\"},{\"value\":\"hipstersentence\",\"display\":\"Hipster Sentence\",\"category\":\"hipster\"},{\"value\":\"hipsterparagraph\",\"display\":\"Hipster Paragraph\",\"category\":\"hipster\"},{\"value\":\"float64\",\"display\":\"Float64\",\"category\":\"number\"},{\"value\":\"sentencesimple\",\"display\":\"Simple Sentence\",\"category\":\"word\"},{\"value\":\"farmanimal\",\"display\":\"Farm Animal\",\"category\":\"animal\"},{\"value\":\"carmodel\",\"display\":\"Car Model\",\"category\":\"car\"},{\"value\":\"dice\",\"display\":\"Dice\",\"category\":\"game\"},{\"value\":\"minecraftvillagerlevel\",\"display\":\"Minecraft villager level\",\"category\":\"minecraft\"},{\"value\":\"productfeature\",\"display\":\"Product Feature\",\"category\":\"product\"},{\"value\":\"lexify\",\"display\":\"Lexify\",\"category\":\"string\"},{\"value\":\"word\",\"display\":\"Word\",\"category\":\"word\"},{\"value\":\"httpversion\",\"display\":\"HTTP Version\",\"category\":\"internet\"},{\"value\":\"companysuffix\",\"display\":\"Company Suffix\",\"category\":\"company\"},{\"value\":\"errorhttp\",\"display\":\"HTTP error\",\"category\":\"error\"},{\"value\":\"connectivecomparative\",\"display\":\"Connective Comparitive\",\"category\":\"word\"},{\"value\":\"carfueltype\",\"display\":\"Car Fuel Type\",\"category\":\"car\"},{\"value\":\"letter\",\"display\":\"Letter\",\"category\":\"string\"},{\"value\":\"adjectivedemonstrative\",\"display\":\"Demonstrative Adjective\",\"category\":\"word\"},{\"value\":\"streetprefix\",\"display\":\"Street Prefix\",\"category\":\"address\"},{\"value\":\"rgbcolor\",\"display\":\"RGB Color\",\"category\":\"color\"},{\"value\":\"sql\",\"display\":\"SQL\",\"category\":\"database\"},{\"value\":\"fixed_width\",\"display\":\"Fixed Width\",\"category\":\"generate\"},{\"value\":\"imagepng\",\"display\":\"Image PNG\",\"category\":\"image\"},{\"value\":\"domainsuffix\",\"display\":\"Domain Suffix\",\"category\":\"internet\"},{\"value\":\"languageabbreviation\",\"display\":\"Language Abbreviation\",\"category\":\"language\"},{\"value\":\"uint\",\"display\":\"Uint\",\"category\":\"number\"},{\"value\":\"bookauthor\",\"display\":\"Author\",\"category\":\"book\"},{\"value\":\"joblevel\",\"display\":\"Job Level\",\"category\":\"company\"},{\"value\":\"filemimetype\",\"display\":\"File Mime Type\",\"category\":\"file\"},{\"value\":\"domainname\",\"display\":\"Domain Name\",\"category\":\"internet\"},{\"value\":\"number\",\"display\":\"Number\",\"category\":\"number\"},{\"value\":\"productdimension\",\"display\":\"Product Dimension\",\"category\":\"product\"},{\"value\":\"adverbplace\",\"display\":\"Adverb Place\",\"category\":\"word\"},{\"value\":\"phraseverb\",\"display\":\"Verb Phrase\",\"category\":\"word\"},{\"value\":\"appname\",\"display\":\"App Name\",\"category\":\"app\"},{\"value\":\"celebritysport\",\"display\":\"Celebrity Sport\",\"category\":\"celebrity\"},{\"value\":\"hour\",\"display\":\"Hour\",\"category\":\"time\"},{\"value\":\"hipsterword\",\"display\":\"Hipster Word\",\"category\":\"hipster\"},{\"value\":\"languagebcp\",\"display\":\"Language BCP\",\"category\":\"language\"},{\"value\":\"minecraftdye\",\"display\":\"Minecraft dye\",\"category\":\"minecraft\"},{\"value\":\"moviename\",\"display\":\"Movie Name\",\"category\":\"movie\"},{\"value\":\"float64range\",\"display\":\"Float64 Range\",\"category\":\"number\"},{\"value\":\"emojitag\",\"display\":\"Emoji Tag\",\"category\":\"emoji\"},{\"value\":\"url\",\"display\":\"URL\",\"category\":\"internet\"},{\"value\":\"creditcardexp\",\"display\":\"Credit Card Exp\",\"category\":\"payment\"},{\"value\":\"adverbmanner\",\"display\":\"Adverb Manner\",\"category\":\"word\"},{\"value\":\"adverbtimeindefinite\",\"display\":\"Adverb Time Indefinite\",\"category\":\"word\"},{\"value\":\"adverbfrequencydefinite\",\"display\":\"Adverb Frequency Definite\",\"category\":\"word\"},{\"value\":\"connectivecasual\",\"display\":\"Connective Casual\",\"category\":\"word\"},{\"value\":\"nounproper\",\"display\":\"Noun Proper\",\"category\":\"word\"},{\"value\":\"bookgenre\",\"display\":\"Genre\",\"category\":\"book\"},{\"value\":\"timezoneregion\",\"display\":\"Timezone Region\",\"category\":\"time\"},{\"value\":\"hackeradjective\",\"display\":\"Hacker Adjective\",\"category\":\"hacker\"},{\"value\":\"httpmethod\",\"display\":\"HTTP Method\",\"category\":\"internet\"},{\"value\":\"minecrafttool\",\"display\":\"Minecraft tool\",\"category\":\"minecraft\"},{\"value\":\"minecraftfood\",\"display\":\"Minecraft food\",\"category\":\"minecraft\"},{\"value\":\"minecraftweather\",\"display\":\"Minecraft weather\",\"category\":\"minecraft\"},{\"value\":\"petname\",\"display\":\"Pet Name\",\"category\":\"animal\"},{\"value\":\"beerblg\",\"display\":\"Beer BLG\",\"category\":\"beer\"},{\"value\":\"csv\",\"display\":\"CSV\",\"category\":\"file\"},{\"value\":\"hackerphrase\",\"display\":\"Hacker Phrase\",\"category\":\"hacker\"},{\"value\":\"school\",\"display\":\"School\",\"category\":\"school\"},{\"value\":\"prepositioncompound\",\"display\":\"Preposition Compound\",\"category\":\"word\"},{\"value\":\"address\",\"display\":\"Address\",\"category\":\"address\"},{\"value\":\"futuredate\",\"display\":\"FutureDate\",\"category\":\"time\"},{\"value\":\"adverbtimedefinite\",\"display\":\"Adverb Time Definite\",\"category\":\"word\"},{\"value\":\"pronounreflective\",\"display\":\"Pronoun Reflective\",\"category\":\"word\"},{\"value\":\"appauthor\",\"display\":\"App Author\",\"category\":\"app\"},{\"value\":\"jobdescriptor\",\"display\":\"Job Descriptor\",\"category\":\"company\"},{\"value\":\"errorhttpserver\",\"display\":\"HTTP server error\",\"category\":\"error\"},{\"value\":\"int64\",\"display\":\"Int64\",\"category\":\"number\"},{\"value\":\"noununcountable\",\"display\":\"Noun Uncountable\",\"category\":\"word\"},{\"value\":\"color\",\"display\":\"Color\",\"category\":\"color\"},{\"value\":\"nicecolors\",\"display\":\"Nice Colors\",\"category\":\"color\"},{\"value\":\"jobtitle\",\"display\":\"Job Title\",\"category\":\"company\"},{\"value\":\"chromeuseragent\",\"display\":\"Chrome User Agent\",\"category\":\"internet\"},{\"value\":\"minecraftmobpassive\",\"display\":\"Minecraft mob passive\",\"category\":\"minecraft\"},{\"value\":\"latitude\",\"display\":\"Latitude\",\"category\":\"address\"},{\"value\":\"appversion\",\"display\":\"App Version\",\"category\":\"app\"},{\"value\":\"car\",\"display\":\"Car\",\"category\":\"car\"},{\"value\":\"uint16\",\"display\":\"Uint16\",\"category\":\"number\"},{\"value\":\"adverbdegree\",\"display\":\"Adverb Degree\",\"category\":\"word\"},{\"value\":\"svg\",\"display\":\"Image SVG\",\"category\":\"html\"},{\"value\":\"int8\",\"display\":\"Int8\",\"category\":\"number\"},{\"value\":\"digitn\",\"display\":\"DigitN\",\"category\":\"string\"},{\"value\":\"adverbfrequencyindefinite\",\"display\":\"Adverb Frequency Indefinite\",\"category\":\"word\"},{\"value\":\"noun\",\"display\":\"Noun\",\"category\":\"word\"},{\"value\":\"pronounobject\",\"display\":\"Pronoun Object\",\"category\":\"word\"},{\"value\":\"errorruntime\",\"display\":\"Runtime error\",\"category\":\"error\"},{\"value\":\"errorvalidation\",\"display\":\"Validation error\",\"category\":\"error\"},{\"value\":\"firefoxuseragent\",\"display\":\"Firefox User Agent\",\"category\":\"internet\"},{\"value\":\"uuid\",\"display\":\"UUID\",\"category\":\"misc\"},{\"value\":\"creditcard\",\"display\":\"Credit Card\",\"category\":\"payment\"},{\"value\":\"phone\",\"display\":\"Phone\",\"category\":\"person\"},{\"value\":\"intn\",\"display\":\"IntN\",\"category\":\"number\"},{\"value\":\"bitcoinprivatekey\",\"display\":\"Bitcoin Private Key\",\"category\":\"payment\"},{\"value\":\"pronounpersonal\",\"display\":\"Pronoun Personal\",\"category\":\"word\"},{\"value\":\"sentence\",\"display\":\"Sentence\",\"category\":\"word\"},{\"value\":\"generate\",\"display\":\"Generate\",\"category\":\"generate\"},{\"value\":\"ssn\",\"display\":\"SSN\",\"category\":\"person\"},{\"value\":\"connective\",\"display\":\"Connective\",\"category\":\"word\"},{\"value\":\"pronounindefinite\",\"display\":\"Pronoun Indefinite\",\"category\":\"word\"},{\"value\":\"quote\",\"display\":\"Quote\",\"category\":\"word\"},{\"value\":\"animaltype\",\"display\":\"Animal Type\",\"category\":\"animal\"},{\"value\":\"weekday\",\"display\":\"Weekday\",\"category\":\"time\"},{\"value\":\"pronouninterrogative\",\"display\":\"Pronoun Interrogative\",\"category\":\"word\"},{\"value\":\"paragraph\",\"display\":\"Paragraph\",\"category\":\"word\"},{\"value\":\"city\",\"display\":\"City\",\"category\":\"address\"},{\"value\":\"minecraftwood\",\"display\":\"Minecraft wood\",\"category\":\"minecraft\"},{\"value\":\"bool\",\"display\":\"Boolean\",\"category\":\"misc\"},{\"value\":\"productdescription\",\"display\":\"Product Description\",\"category\":\"product\"},{\"value\":\"songartist\",\"display\":\"Song Artist\",\"category\":\"song\"},{\"value\":\"nounabstract\",\"display\":\"Noun Abstract\",\"category\":\"word\"}];\n\nconst FUNCS_VALUES: Set<string> = new Set(\n\tFUNCS.map(e => e.value.toLowerCase())\n);\n\nexport function hasFunc(name: string): boolean {\n\treturn FUNCS_VALUES.has(name.toLowerCase());\n}\n\nexport function getFuncs() {\n\treturn FUNCS;\n}\n","// Centralized style tokens for injected UI (avoid dependency on site CSS)\n\nexport const GOFAKEIT_COLORS = {\n\tprimary: '#ffa000',\n\twhite: '#ffffff',\n\tsuccess: '#48c774',\n\terror: '#ff3860',\n\tinfo: '#209cee',\n\ttext: '#ffffff',\n\tborder: '#686868',\n\tbackground: '#ffffff',\n};\n\nexport const GOFAKEIT_SPACING = {\n\tbase: 24, // px\n\thalf: 12, // px\n\tquarter: 8, // px\n};\n\nexport const GOFAKEIT_BORDER = {\n\tradius: 6, // px\n\twidth: 2, // px\n};\n\nexport const GOFAKEIT_FONT = {\n\tsize: 14, // px\n\tfamily: 'Helvetica, Arial, sans-serif',\n};\n","import { GOFAKEIT_COLORS, GOFAKEIT_SPACING, GOFAKEIT_BORDER, GOFAKEIT_FONT } from './styles';\n\n// Show error message as a floating tooltip over a form field\nexport function showFieldError(element: Element, message: string): void {\n  // Remove any existing error message\n  const existingError = document.querySelector('.gofakeit-error-tooltip');\n  if (existingError) {\n    existingError.remove();\n  }\n\n  // Create error tooltip element\n  const tooltip = document.createElement('div');\n  tooltip.className = 'gofakeit-error-tooltip';\n  tooltip.style.cssText = `\n    position: absolute;\n    z-index: 10001;\n    color: ${GOFAKEIT_COLORS.error};\n    font-size: ${GOFAKEIT_FONT.size}px;\n    font-family: ${GOFAKEIT_FONT.family};\n    background-color: ${GOFAKEIT_COLORS.background};\n    padding: ${GOFAKEIT_SPACING.quarter}px ${GOFAKEIT_SPACING.half}px;\n    border-radius: ${GOFAKEIT_BORDER.radius}px;\n    border: 1px solid ${GOFAKEIT_COLORS.error};\n    box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n    max-width: 300px;\n    word-wrap: break-word;\n    opacity: 0;\n    transform: translateY(-10px);\n    transition: opacity 0.3s ease, transform 0.3s ease;\n    pointer-events: none;\n  `;\n  tooltip.textContent = message;\n\n  // Add to body\n  document.body.appendChild(tooltip);\n\n  // Function to update tooltip position\n  function updateTooltipPosition() {\n    const rect = element.getBoundingClientRect();\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n    \n    const left = rect.left + scrollLeft;\n    const top = rect.top + scrollTop - tooltip.offsetHeight - 8;\n    \n    tooltip.style.left = `${left}px`;\n    tooltip.style.top = `${top}px`;\n  }\n\n  // Initial positioning\n  updateTooltipPosition();\n\n  // Add scroll and resize listeners\n  const scrollHandler = () => updateTooltipPosition();\n  const resizeHandler = () => updateTooltipPosition();\n  \n  // Listen to scroll events on window and all scrollable elements\n  window.addEventListener('scroll', scrollHandler, { passive: true });\n  window.addEventListener('resize', resizeHandler, { passive: true });\n  \n  // Also listen to scroll events on all elements with overflow scroll\n  const scrollableElements = document.querySelectorAll('*');\n  const scrollableListeners: Array<{ element: Element, handler: () => void }> = [];\n  \n  scrollableElements.forEach(el => {\n    const style = window.getComputedStyle(el);\n    if (style.overflow === 'scroll' || style.overflowY === 'scroll' || style.overflow === 'auto' || style.overflowY === 'auto') {\n      const listener = () => updateTooltipPosition();\n      el.addEventListener('scroll', listener, { passive: true });\n      scrollableListeners.push({ element: el, handler: listener });\n    }\n  });\n\n  // Fade in\n  requestAnimationFrame(() => {\n    tooltip.style.opacity = '1';\n    tooltip.style.transform = 'translateY(0)';\n  });\n\n  // Remove tooltip after 5 seconds with fade out\n  setTimeout(() => {\n    tooltip.style.opacity = '0';\n    tooltip.style.transform = 'translateY(-10px)';\n    \n    // Remove event listeners\n    window.removeEventListener('scroll', scrollHandler);\n    window.removeEventListener('resize', resizeHandler);\n    \n    // Remove scrollable element listeners\n    scrollableListeners.forEach(({ element, handler }) => {\n      element.removeEventListener('scroll', handler);\n    });\n    \n    setTimeout(() => {\n      if (tooltip.parentElement) {\n        tooltip.parentElement.removeChild(tooltip);\n      }\n    }, 300);\n  }, 5000);\n}\n","// Base URL for the Gofakeit API\nconst GOFAKEIT_API_BASE = 'https://api.gofakeit.com/funcs'\n\nexport interface ApiResponse {\n  success: boolean;\n  data?: string;\n  error?: string;\n  status?: number;\n}\n\n// Fetch data from gofakeit API\nexport async function callFunc(func: string): Promise<ApiResponse> {\n  // Check if the function contains query parameters\n  const questionMarkIndex = func.indexOf('?');\n  \n  if (questionMarkIndex !== -1) {\n    // Function has query parameters - use POST with JSON body\n    const functionName = func.substring(0, questionMarkIndex);\n    const queryString = func.substring(questionMarkIndex + 1);\n    \n    // Parse query parameters into an object\n    const params: Record<string, unknown> = {};\n    const searchParams = new URLSearchParams(queryString);\n    \n    for (const [key, value] of searchParams.entries()) {\n      // Try to parse as number if possible\n      const numValue = parseFloat(value);\n      params[key] = isNaN(numValue) ? value : numValue;\n    }\n    \n    return makeRequest('POST', `${GOFAKEIT_API_BASE}/${functionName}`, params);\n  } else {\n    // Simple function - use GET request\n    return makeRequest('GET', `${GOFAKEIT_API_BASE}/${func}`);\n  }\n}\n\n// Fetch random string from an array of strings using gofakeit API\nexport async function fetchRandomString(strings: string[]): Promise<ApiResponse> {\n  return makeRequest('POST', `${GOFAKEIT_API_BASE}/randomstring`, { strs: strings });\n}\n\n// Base HTTP request function\nasync function makeRequest(method: 'GET' | 'POST', url: string, body?: Record<string, unknown>): Promise<ApiResponse> {\n  try {\n    const options: {\n      method: string;\n      headers: Record<string, string>;\n      body?: string;\n    } = {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    };\n\n    if (method === 'POST' && body) {\n      options.body = JSON.stringify(body);\n    }\n\n    const response = await fetch(url, options);\n    \n    if (!response.ok) {\n      return {\n        success: false,\n        error: `HTTP error! status: ${response.status}`,\n        status: response.status\n      };\n    }\n    \n    const data = await response.text();\n    return {\n      success: true,\n      data: data\n    };\n  } catch (error) {\n    console.error(`[Gofakeit Autofill] Error in ${method} request to ${url}:`, error);\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Unknown error'\n    };\n  }\n}\n","import { callFunc } from './api';\nimport { handleError } from './autofill';\n\n// Get ISO week number for a date\nfunction getISOWeek(date: Date): number {\n  const d = new Date(date.getTime());\n  d.setUTCHours(0, 0, 0, 0);\n  // Thursday in current week decides the year\n  d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() || 7));\n  // January 4 is always in week 1\n  const week1 = new Date(d.getUTCFullYear(), 0, 4);\n  // Adjust to Thursday in week 1 and count number of weeks from date to week1\n  const week = Math.ceil((((d.getTime() - week1.getTime()) / 86400000) - 3 + (week1.getUTCDay() || 7)) / 7);\n  return week;\n}\n\n// Handle date/time input elements\nexport async function handleDateTimeInput(element: HTMLInputElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  const inputType = element.type.toLowerCase();\n  \n  try {\n    switch (inputType) {\n      case 'date': {\n        // Use the provided function or default to 'date'\n        const dateFunc = gofakeitFunc === 'true' ? 'date' : gofakeitFunc;\n        const dateResponse = await callFunc(dateFunc);\n        \n        if (!dateResponse.success) {\n          console.warn(`[Gofakeit Autofill] Error for ${inputType} input:`, dateResponse.error);\n          if (dateResponse.status === 400) {\n            handleError(element, `Failed to get random ${inputType}`);\n          }\n          return { success: false, usedFunc: dateFunc };\n        }\n        \n        // Parse the ISO date string (e.g., \"1935-03-01T19:02:35Z\") and extract just the date part\n        try {\n          const dateString = dateResponse.data!;\n          const dateMatch = dateString.match(/^(\\d{4}-\\d{2}-\\d{2})/);\n          if (dateMatch) {\n            element.value = dateMatch[1]; // Extract YYYY-MM-DD part\n          } else {\n            console.warn('[Gofakeit Autofill] Could not parse date from response:', dateString);\n            return { success: false, usedFunc: dateFunc };\n          }\n        } catch (error) {\n          console.warn('[Gofakeit Autofill] Error parsing date response:', error);\n          return { success: false, usedFunc: dateFunc };\n        }\n        break;\n      }\n        \n      case 'time': {\n        // Use gofakeit hour and minute functions to create time format\n        const hourResponse = await callFunc('hour');\n        const minuteResponse = await callFunc('minute');\n        \n        if (!hourResponse.success || !minuteResponse.success) {\n          console.warn('[Gofakeit Autofill] Error getting hour or minute:', hourResponse.error || minuteResponse.error);\n          if (hourResponse.status === 400 || minuteResponse.status === 400) {\n            handleError(element, 'Failed to get random time');\n          }\n          return { success: false, usedFunc: 'hour/minute' };\n        }\n        \n        // Format time as HH:MM\n        const hour = hourResponse.data!.padStart(2, '0');\n        const minute = minuteResponse.data!.padStart(2, '0');\n        element.value = `${hour}:${minute}`;\n        break;\n      }\n        \n      case 'datetime-local': {\n        // Use the provided function or default to 'date' (which includes time)\n        const datetimeFunc = gofakeitFunc === 'true' ? 'date' : gofakeitFunc;\n        const datetimeResponse = await callFunc(datetimeFunc);\n        \n        if (!datetimeResponse.success) {\n          console.warn(`[Gofakeit Autofill] Error for ${inputType} input:`, datetimeResponse.error);\n          if (datetimeResponse.status === 400) {\n            handleError(element, `Failed to get random ${inputType}`);\n          }\n          return { success: false, usedFunc: datetimeFunc };\n        }\n        \n        // Parse the ISO datetime string (e.g., \"1935-03-01T19:02:35Z\") and extract datetime-local format\n        try {\n          const datetimeString = datetimeResponse.data!;\n          const datetimeMatch = datetimeString.match(/^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}):\\d{2}/);\n          if (datetimeMatch) {\n            element.value = datetimeMatch[1]; // Extract YYYY-MM-DDTHH:MM part\n          } else {\n            console.warn('[Gofakeit Autofill] Could not parse datetime from response:', datetimeString);\n            return { success: false, usedFunc: datetimeFunc };\n          }\n        } catch (error) {\n          console.warn('[Gofakeit Autofill] Error parsing datetime response:', error);\n          return { success: false, usedFunc: datetimeFunc };\n        }\n        break;\n      }\n        \n      case 'month': {\n        // Use gofakeit year and month functions\n        const yearResponse = await callFunc('year');\n        const monthResponse = await callFunc('month');\n        \n        if (!yearResponse.success || !monthResponse.success) {\n          console.warn('[Gofakeit Autofill] Error getting year or month:', yearResponse.error || monthResponse.error);\n          if (yearResponse.status === 400 || monthResponse.status === 400) {\n            handleError(element, 'Failed to get random month');\n          }\n          return { success: false, usedFunc: 'year/month' };\n        }\n        \n        // Format month as YYYY-MM\n        const month = monthResponse.data!.padStart(2, '0');\n        element.value = `${yearResponse.data!}-${month}`;\n        break;\n      }\n        \n      case 'week': {\n        // Use the provided function or default to year + number range\n        const weekFunc = gofakeitFunc === 'true' ? 'date' : gofakeitFunc;\n        \n        if (weekFunc === 'date' || weekFunc.startsWith('daterange')) {\n          // Use date/daterange function and extract week from the result\n          const weekDateResponse = await callFunc(weekFunc);\n          \n          if (!weekDateResponse.success) {\n            console.warn('[Gofakeit Autofill] Error getting date for week:', weekDateResponse.error);\n            if (weekDateResponse.status === 400) {\n              handleError(element, 'Failed to get random week');\n            }\n            return { success: false, usedFunc: weekFunc };\n          }\n          \n          // Parse the ISO date string and extract week\n          try {\n            const dateString = weekDateResponse.data!;\n            const dateMatch = dateString.match(/^(\\d{4}-\\d{2}-\\d{2})/);\n            if (dateMatch) {\n              const date = new Date(dateMatch[1]);\n              const year = date.getFullYear();\n              const week = getISOWeek(date);\n              element.value = `${year}-W${week.toString().padStart(2, '0')}`;\n            } else {\n              console.warn('[Gofakeit Autofill] Could not parse date for week from response:', dateString);\n              return { success: false, usedFunc: weekFunc };\n            }\n          } catch (error) {\n            console.warn('[Gofakeit Autofill] Error parsing date for week:', error);\n            return { success: false, usedFunc: weekFunc };\n          }\n        } else {\n          // Use gofakeit year and number range for week (1-53)\n          const weekYearResponse = await callFunc('year');\n          const weekResponse = await callFunc('number?min=1&max=53');\n          \n          if (!weekYearResponse.success || !weekResponse.success) {\n            console.warn('[Gofakeit Autofill] Error getting year or week:', weekYearResponse.error || weekResponse.error);\n            if (weekYearResponse.status === 400 || weekResponse.status === 400) {\n              handleError(element, 'Failed to get random week');\n            }\n            return { success: false, usedFunc: 'year/number?min=1&max=53' };\n          }\n          \n          // Format week as YYYY-W## (ISO week format)\n          const week = weekResponse.data!.padStart(2, '0');\n          element.value = `${weekYearResponse.data!}-W${week}`;\n        }\n        break;\n      }\n        \n      default:\n        console.warn('[Gofakeit Autofill] Unknown date/time input type:', inputType);\n        return { success: false, usedFunc: gofakeitFunc };\n    }\n    \n    // Trigger events to ensure any listeners are notified\n    element.dispatchEvent(new Event('input', { bubbles: true }));\n    element.dispatchEvent(new Event('change', { bubbles: true }));\n    \n    return { success: true, usedFunc: gofakeitFunc === 'true' ? inputType : gofakeitFunc };\n    \n  } catch (error) {\n    console.warn(`[Gofakeit Autofill] Unexpected error handling ${inputType} input:`, error);\n    return { success: false, usedFunc: gofakeitFunc };\n  }\n}\n","import { callFunc } from './api';\nimport { handleError } from './autofill';\n\n// Handle text input elements (text, email, tel, password, search, url, color)\nexport async function handleTextInput(element: HTMLInputElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  const inputType = element.type.toLowerCase();\n  \n  // Map input types to appropriate gofakeit functions if 'true' is passed\n  let functionToCall = gofakeitFunc;\n  if (gofakeitFunc === 'true') {\n    switch (inputType) {\n      case 'email':\n        functionToCall = 'email';\n        break;\n      case 'tel':\n        functionToCall = 'phone';\n        break;\n      case 'password':\n        functionToCall = 'password';\n        break;\n      case 'search':\n        functionToCall = 'word';\n        break;\n      case 'url':\n        functionToCall = 'url';\n        break;\n      case 'color':\n        functionToCall = 'hexcolor';\n        break;\n      default:\n        functionToCall = 'word'; // Default for text inputs\n    }\n  }\n  \n  const response = await callFunc(functionToCall);\n  \n  if (!response.success) {\n    console.warn(`[Gofakeit Autofill] Error for function ${functionToCall}:`, response.error);\n    \n    if (response.status === 400) {\n      handleError(element, '', functionToCall);\n    }\n    return { success: false, usedFunc: functionToCall };\n  }\n  \n  element.value = response.data!;\n  \n  // Trigger events to ensure any listeners are notified\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n  element.dispatchEvent(new Event('change', { bubbles: true }));\n  \n  return { success: true, usedFunc: functionToCall };\n}\n\n// Handle textarea elements\nexport async function handleTextarea(element: HTMLTextAreaElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  // Use sentence function if 'true' is passed, otherwise use the provided function\n  const functionToCall = gofakeitFunc === 'true' ? 'sentence' : gofakeitFunc;\n  const response = await callFunc(functionToCall);\n  \n  if (!response.success) {\n    console.warn(`[Gofakeit Autofill] Error for function ${functionToCall}:`, response.error);\n    \n    if (response.status === 400) {\n      handleError(element, '', functionToCall);\n    }\n    return { success: false, usedFunc: functionToCall };\n  }\n  \n  element.value = response.data!;\n  \n  // Trigger events to ensure any listeners are notified\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n  element.dispatchEvent(new Event('change', { bubbles: true }));\n  \n  return { success: true, usedFunc: functionToCall };\n}\n","import { callFunc, fetchRandomString } from './api';\nimport { handleError } from './autofill';\n\n// Handle checkbox input elements\nexport async function handleCheckbox(element: HTMLInputElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  // Find the checkbox group by name\n  const checkboxGroup = findCheckboxGroup(element);\n  \n  if (checkboxGroup.length === 0) {\n    console.warn('[Gofakeit Autofill] No checkbox group found for element:', element);\n    return { success: false, usedFunc: 'bool' };\n  }\n  \n  // Use boolean function if 'true' is passed, otherwise use the provided function\n  const functionToCall = gofakeitFunc === 'true' ? 'bool' : gofakeitFunc;\n  \n  // For checkbox groups, we want to select multiple checkboxes\n  if (gofakeitFunc === 'true') {\n    // Select roughly half of the checkboxes in the group\n    const numToSelect = Math.max(1, Math.ceil(checkboxGroup.length / 2));\n    \n    // Clear all checkboxes first\n    checkboxGroup.forEach(cb => {\n      cb.checked = false;\n      cb.dispatchEvent(new Event('change', { bubbles: true }));\n    });\n    \n    // Select random checkboxes using API\n    const selectedIndices = new Set<number>();\n    for (let i = 0; i < numToSelect; i++) {\n      const boolResponse = await callFunc('bool');\n      if (boolResponse.success) {\n        const shouldSelect = boolResponse.data!.toLowerCase() === 'true' || boolResponse.data!.toLowerCase() === '1';\n        if (shouldSelect) {\n          // Find an unselected checkbox\n          const availableIndices = Array.from({ length: checkboxGroup.length }, (_, i) => i)\n            .filter(i => !selectedIndices.has(i));\n          \n          if (availableIndices.length > 0) {\n            const randomIndex = availableIndices[Math.floor(Math.random() * availableIndices.length)];\n            selectedIndices.add(randomIndex);\n            checkboxGroup[randomIndex].checked = true;\n            checkboxGroup[randomIndex].dispatchEvent(new Event('change', { bubbles: true }));\n          }\n        }\n      }\n    }\n  } else {\n    // For custom functions, use the response to determine which checkboxes to select\n    const response = await callFunc(functionToCall);\n    \n    if (!response.success) {\n      console.warn(`[Gofakeit Autofill] Error for function ${functionToCall}:`, response.error);\n      \n      if (response.status === 400) {\n        handleError(element, '', functionToCall);\n      }\n      return { success: false, usedFunc: functionToCall };\n    }\n    \n    // Clear all checkboxes first\n    checkboxGroup.forEach(cb => {\n      cb.checked = false;\n      cb.dispatchEvent(new Event('change', { bubbles: true }));\n    });\n    \n    // Parse the response to determine which checkboxes to select\n    const values = response.data!.split(',').map(v => v.trim());\n    \n    checkboxGroup.forEach((cb, index) => {\n      const shouldCheck = values.includes(cb.value) || values.includes(index.toString());\n      cb.checked = shouldCheck;\n      cb.dispatchEvent(new Event('change', { bubbles: true }));\n    });\n  }\n  \n  return { success: true, usedFunc: functionToCall };\n}\n\n// Handle radio input elements\nexport async function handleRadio(element: HTMLInputElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  // Find the radio group by name\n  const radioGroup = findRadioGroup(element);\n  \n  if (radioGroup.length === 0) {\n    console.warn('[Gofakeit Autofill] No radio group found for element:', element);\n    return { success: false, usedFunc: 'bool' };\n  }\n  \n  // Use boolean function if 'true' is passed, otherwise use the provided function\n  const functionToCall = gofakeitFunc === 'true' ? 'bool' : gofakeitFunc;\n  \n  // For radio groups, we want to select exactly one radio button\n  if (gofakeitFunc === 'true') {\n    // Clear all radio buttons first\n    radioGroup.forEach((rb: HTMLInputElement) => {\n      rb.checked = false;\n      rb.dispatchEvent(new Event('change', { bubbles: true }));\n    });\n    \n    // Select a random radio button using API\n    const boolResponse = await callFunc('bool');\n    if (boolResponse.success) {\n      const shouldSelect = boolResponse.data!.toLowerCase() === 'true' || boolResponse.data!.toLowerCase() === '1';\n      if (shouldSelect) {\n        const randomIndex = Math.floor(Math.random() * radioGroup.length);\n        radioGroup[randomIndex].checked = true;\n        radioGroup[randomIndex].dispatchEvent(new Event('change', { bubbles: true }));\n      }\n    }\n  } else {\n    // For custom functions, use the response to determine which radio button to select\n    const response = await callFunc(functionToCall);\n    \n    if (!response.success) {\n      console.warn(`[Gofakeit Autofill] Error for function ${functionToCall}:`, response.error);\n      \n      if (response.status === 400) {\n        handleError(element, '', functionToCall);\n      }\n      return { success: false, usedFunc: functionToCall };\n    }\n    \n    // Clear all radio buttons first\n    radioGroup.forEach((rb: HTMLInputElement) => {\n      rb.checked = false;\n      rb.dispatchEvent(new Event('change', { bubbles: true }));\n    });\n    \n    // Parse the response to determine which radio button to select\n    const value = response.data!.trim();\n    \n    // Try to find by value first, then by index\n    let selectedRadio = radioGroup.find((rb: HTMLInputElement) => rb.value === value);\n    if (!selectedRadio && !isNaN(Number(value))) {\n      const index = parseInt(value);\n      if (index >= 0 && index < radioGroup.length) {\n        selectedRadio = radioGroup[index];\n      }\n    }\n    \n    // If no match found, select the first one\n    if (selectedRadio) {\n      selectedRadio.checked = true;\n      selectedRadio.dispatchEvent(new Event('change', { bubbles: true }));\n    }\n  }\n  \n  return { success: true, usedFunc: functionToCall };\n}\n\n// Helper function to find checkbox group\nfunction findCheckboxGroup(element: HTMLInputElement): HTMLInputElement[] {\n  if (element.type !== 'checkbox') return [element];\n  \n  // Look for checkboxes with the same name or in the same container\n  const name = element.name;\n  const container = element.closest('form, div, fieldset') || document;\n  \n  if (name) {\n    // Find checkboxes with the same name\n    return Array.from(container.querySelectorAll(`input[type=\"checkbox\"][name=\"${name}\"]`));\n  } else {\n    // Find checkboxes in the same container\n    return Array.from(container.querySelectorAll('input[type=\"checkbox\"]'));\n  }\n}\n\n// Helper function to find radio group\nfunction findRadioGroup(element: HTMLInputElement): HTMLInputElement[] {\n  if (element.type !== 'radio') return [element];\n  \n  // Look for radio buttons with the same name\n  const name = element.name;\n  const container = element.closest('form, div, fieldset') || document;\n  \n  if (name) {\n    // Find radio buttons with the same name\n    return Array.from(container.querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`));\n  } else {\n    // Find radio buttons in the same container\n    return Array.from(container.querySelectorAll('input[type=\"radio\"]'));\n  }\n}\n\n// Handle select dropdown\nexport async function handleSelectWithFunction(element: HTMLSelectElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  const options = Array.from(element.options).map(option => option.value).filter(value => value !== '');\n  \n  if (options.length === 0) {\n    console.warn('[Gofakeit Autofill] Select element has no valid options:', element);\n    return { success: false, usedFunc: gofakeitFunc };\n  }\n  \n  let response;\n  if (gofakeitFunc === 'true') {\n    // Use random selection for 'true'\n    response = await fetchRandomString(options);\n  } else {\n    // Use custom function\n    response = await callFunc(gofakeitFunc);\n  }\n  \n  if (!response.success) {\n    console.warn(`[Gofakeit Autofill] Error for select:`, response.error);\n    if (response.status === 400) {\n      handleError(element, 'Failed to get selection');\n    }\n    return { success: false, usedFunc: gofakeitFunc };\n  }\n  \n  if (element.multiple) {\n    // Handle multiselect\n    Array.from(element.options).forEach(option => option.selected = false);\n    \n    if (gofakeitFunc === 'true') {\n      // For random selection, select multiple options (roughly half)\n      const numToSelect = Math.min(Math.ceil(options.length / 2), options.length);\n      const selectedValues = [response.data!];\n      \n      // Add more random selections\n      const remainingOptions = options.filter(opt => opt !== response.data!);\n      for (let i = 1; i < numToSelect && remainingOptions.length > 0; i++) {\n        const randomIndex = Math.floor(Math.random() * remainingOptions.length);\n        selectedValues.push(remainingOptions.splice(randomIndex, 1)[0]);\n      }\n      \n      selectedValues.forEach(value => {\n        const option = element.options.namedItem(value) || Array.from(element.options).find(opt => opt.value === value);\n        if (option) option.selected = true;\n      });\n    } else {\n      // Parse comma-separated values for custom function\n      const selectedValues = response.data!.split(',').map(val => val.trim()).filter(val => val !== '');\n      selectedValues.forEach(value => {\n        const option = element.options.namedItem(value) || Array.from(element.options).find(opt => opt.value === value);\n        if (option) option.selected = true;\n      });\n    }\n  } else {\n    element.value = response.data!;\n  }\n  \n  element.dispatchEvent(new Event('change', { bubbles: true }));\n  return { success: true, usedFunc: gofakeitFunc === 'true' ? 'random' : gofakeitFunc };\n}\n","import { callFunc } from './api';\nimport { handleError } from './autofill';\n\n// Handle number input elements\nexport async function handleNumberInput(element: HTMLInputElement, gofakeitFunc: string): Promise<{ success: boolean, usedFunc: string }> {\n  // Use number function if 'true' is passed, otherwise use the provided function\n  const functionToCall = gofakeitFunc === 'true' ? 'number' : gofakeitFunc;\n  const response = await callFunc(functionToCall);\n  \n  if (!response.success) {\n    console.warn(`[Gofakeit Autofill] Error for function ${functionToCall}:`, response.error);\n    \n    if (response.status === 400) {\n      handleError(element, '', functionToCall);\n    }\n    return { success: false, usedFunc: functionToCall };\n  }\n  \n  element.value = response.data!;\n  \n  // Trigger events to ensure any listeners are notified\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n  element.dispatchEvent(new Event('change', { bubbles: true }));\n  \n  return { success: true, usedFunc: functionToCall };\n}\n\n// Handle range input elements\nexport async function handleRangeInput(element: HTMLInputElement): Promise<{ success: boolean, usedFunc: string }> {\n  // For range inputs, always use gofakeit API with min/max from the element\n  const min = parseFloat(element.min) || 0;\n  const max = parseFloat(element.max) || 100;\n  \n  // Use number function with min/max parameters\n  const functionToCall = `number?min=${min}&max=${max}`;\n  const response = await callFunc(functionToCall);\n  \n  if (!response.success) {\n    console.warn(`[Gofakeit Autofill] Error for range input:`, response.error);\n    \n    if (response.status === 400) {\n      handleError(element, 'Failed to get random number for range');\n    }\n    return { success: false, usedFunc: functionToCall };\n  }\n  \n  element.value = response.data!;\n  \n  // Trigger events to ensure any listeners are notified\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n  element.dispatchEvent(new Event('change', { bubbles: true }));\n  \n  return { success: true, usedFunc: functionToCall };\n}\n","import { hasFunc } from './funcs';\nimport { GOFAKEIT_COLORS } from './styles';\nimport { showFieldError } from './field-error';\nimport { handleDateTimeInput } from './input-datetime';\nimport { handleTextInput, handleTextarea } from './input-text';\nimport { handleCheckbox, handleRadio, handleSelectWithFunction } from './input-misc';\nimport { handleNumberInput, handleRangeInput } from './input-number';\n\n// Chrome API type declaration\ndeclare const chrome: {\n  storage: {\n    sync: {\n      get: (keys: any, callback: (items: any) => void) => void;\n    };\n  };\n};\n\n// ============================================================================\n// MAIN PUBLIC FUNCTIONS (Entry Points)\n// ============================================================================\n\n// Autofill all form fields on the page\nexport async function autofillAll(): Promise<void> {\n  const elements = queryFormElements();\n  const smartEnabled = await isSmartFillEnabled();\n\n  const targetsBase = smartEnabled\n    ? elements\n    : elements.filter((el) => (el as Element).hasAttribute('data-gofakeit'));\n  const targets = targetsBase.filter((el) => !isDataGofakeitFalse(el));\n\n  if (targets.length === 0) {\n    if (!smartEnabled) {\n      showNotification('No data-gofakeit fields exist. Turn on Smart-fill to fill this page.', 'info');\n    } else {\n      showNotification('No form fields found to autofill', 'info');\n    }\n    return;\n  }\n\n  console.log(`[Gofakeit] Found ${targets.length} elements to generate data for`);\n  showNotification(`Starting data generation for ${targets.length} fields...`, 'info');\n\n  const results = await processElements(targets);\n  showResults(results.success, results.failed, 'Autofill');\n}\n\n// Autofill all fields within a specific container\nexport async function autofillContainer(container: HTMLElement): Promise<void> {\n  const elements = queryFormElements(container);\n  const smartEnabled = await isSmartFillEnabled();\n\n  const targetsBase = smartEnabled\n    ? elements\n    : elements.filter((el) => (el as Element).hasAttribute('data-gofakeit'));\n  const targets = targetsBase.filter((el) => !isDataGofakeitFalse(el));\n\n  if (targets.length === 0) {\n    if (!smartEnabled) {\n      showNotification('No data-gofakeit fields exist in this section. Turn on Smart-fill to fill it.', 'info');\n    } else {\n      showNotification('No form fields found in this container', 'info');\n    }\n    return;\n  }\n  \n  console.log(`[Gofakeit] Found ${targets.length} elements to generate data for in container`);\n  showNotification(`Starting data generation for ${targets.length} fields...`, 'info');\n  \n  const results = await processElements(targets);\n  showResults(results.success, results.failed, 'Container autofill');\n}\n\n// Main autofill function that routes to specific handlers\nexport async function autofillElement(element: Element): Promise<boolean> {\n  const gofakeitFunc = element.getAttribute('data-gofakeit');\n  if (typeof gofakeitFunc === 'string' && gofakeitFunc.trim().toLowerCase() === 'false') {\n    return false;\n  }\n  const smartEnabled = await isSmartFillEnabled();\n  \n  if (!gofakeitFunc && !smartEnabled) {\n    return false;\n  }\n\n  try {\n    // Handle select dropdowns\n    if (element instanceof HTMLSelectElement) {\n      const funcToUse = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : 'true';\n      const { success, usedFunc } = await handleSelectWithFunction(element, funcToUse);\n      if (success) {\n        showFunctionBadge(element, usedFunc);\n      }\n      return success;\n    }\n    \n    // Handle textarea elements\n    if (element instanceof HTMLTextAreaElement) {\n      const funcToUse = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : 'sentence';\n      const { success, usedFunc } = await handleTextarea(element, funcToUse);\n      if (success) {\n        showFunctionBadge(element, usedFunc);\n      }\n      return success;\n    }\n    \n    // Handle input elements\n    if (element instanceof HTMLInputElement) {\n      const inputType = element.type.toLowerCase();\n      \n      // Handle checkbox inputs\n      if (inputType === 'checkbox') {\n        const passToHandler = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : 'true';\n        const { success, usedFunc } = await handleCheckbox(element, passToHandler);\n        if (success) {\n          showFunctionBadge(element, usedFunc);\n        }\n        return success;\n      }\n      \n      // Handle radio inputs\n      if (inputType === 'radio') {\n        const passToHandler = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : 'true';\n        const { success, usedFunc } = await handleRadio(element, passToHandler);\n        if (success) {\n          showFunctionBadge(element, usedFunc);\n        }\n        return success;\n      }\n      \n      // Handle number inputs\n      if (inputType === 'number') {\n        const inferred = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : (await inferFunctionForInput(element));\n        const { success, usedFunc } = await handleNumberInput(element, inferred);\n        if (success) {\n          showFunctionBadge(element, usedFunc);\n        }\n        return success;\n      }\n      \n      // Handle range inputs\n      if (inputType === 'range') {\n        const { success, usedFunc } = await handleRangeInput(element);\n        if (success) {\n          showFunctionBadge(element, usedFunc);\n        }\n        return success;\n      }\n      \n      // Handle date/time inputs\n      if (inputType === 'date' || inputType === 'time' || inputType === 'datetime-local' || \n          inputType === 'month' || inputType === 'week') {\n        const inferred = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : (await inferFunctionForInput(element));\n        const { success, usedFunc } = await handleDateTimeInput(element, inferred);\n        if (success) {\n          showFunctionBadge(element, usedFunc);\n        }\n        return success;\n      }\n      \n      // Handle text inputs (text, email, tel, password, search, url, color, etc.)\n      const inferred = (gofakeitFunc && gofakeitFunc !== 'true') ? gofakeitFunc : (await inferFunctionForInput(element));\n      const { success, usedFunc } = await handleTextInput(element, inferred);\n      if (success) {\n        showFunctionBadge(element, usedFunc);\n      }\n      return success;\n    }\n    \n    console.warn('[Gofakeit] Unsupported element type:', element);\n    return false;\n    \n  } catch (error) {\n    console.error('[Gofakeit] Unexpected error generating data for element:', element, error);\n    return false;\n  }\n}\n\n// ============================================================================\n// PROCESSING FUNCTIONS (Called by main functions)\n// ============================================================================\n\n// Query all form elements that can be autofilled\nfunction queryFormElements(container?: HTMLElement): Element[] {\n  const selector = 'input, textarea, select';\n  const nodeList = container ? container.querySelectorAll(selector) : document.querySelectorAll(selector);\n  const elements: Element[] = [];\n  nodeList.forEach((el) => {\n    if (el instanceof HTMLInputElement) {\n      if (el.type === 'hidden' || el.disabled || el.readOnly) return;\n      elements.push(el);\n    } else if (el instanceof HTMLTextAreaElement) {\n      if (el.disabled || el.readOnly) return;\n      elements.push(el);\n    } else if (el instanceof HTMLSelectElement) {\n      if (el.disabled) return;\n      elements.push(el);\n    }\n  });\n  return elements;\n}\n\nfunction isDataGofakeitFalse(el: Element): boolean {\n  const val = (el as Element).getAttribute && (el as Element).getAttribute('data-gofakeit');\n  return typeof val === 'string' && val.trim().toLowerCase() === 'false';\n}\n\n// Get unique elements, handling checkbox and radio groups\nfunction getUniqueElements(elements: Element[]): Element[] {\n  const uniqueElements: Element[] = [];\n  const processedGroups = new Set<string>();\n  \n  for (const element of elements) {\n    if (element instanceof HTMLInputElement) {\n      const inputType = element.type.toLowerCase();\n      \n      if (inputType === 'checkbox' || inputType === 'radio') {\n        const name = element.name;\n        if (name && processedGroups.has(name)) {\n          // Skip if we've already processed this group\n          continue;\n        }\n        if (name) {\n          processedGroups.add(name);\n        }\n      }\n    }\n    \n    uniqueElements.push(element);\n  }\n  \n  return uniqueElements;\n}\n\n// Process multiple elements and track results\nasync function processElements(elements: Element[]): Promise<{ success: number, failed: number }> {\n  let successfulCount = 0;\n  let failedCount = 0;\n  \n  // Get unique elements to avoid processing checkbox/radio groups multiple times\n  const uniqueElements = getUniqueElements(elements);\n\n  for (const element of uniqueElements) {\n    try {\n      const success = await autofillElement(element);\n      if (success) {\n        successfulCount++;\n        \n        // Monitor if the value gets cleared after a short delay\n        setTimeout(() => {\n          if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\n            if (element.value === '') {\n              console.warn('[Gofakeit Autofill] Value was cleared for element:', element);\n            }\n          } else if (element instanceof HTMLSelectElement) {\n            if (element.value === '') {\n              console.warn('[Gofakeit Autofill] Value was cleared for select:', element);\n            }\n          }\n        }, 1000);\n        \n      } else {\n        failedCount++;\n      }\n    } catch (error) {\n      failedCount++;\n      console.warn(`[Gofakeit Autofill] Failed to autofill element:`, element, error);\n    }\n  }\n\n  return { success: successfulCount, failed: failedCount };\n}\n\n// Show results notification\nfunction showResults(successfulCount: number, failedCount: number, context: string): void {\n  // Show successful count notification\n  if (successfulCount > 0) {\n    console.log(`[Gofakeit] ${context} completed successfully for ${successfulCount} fields`);\n    showNotification(`Successfully generated data for ${successfulCount} fields!`, 'success');\n  }\n  \n  // Show failed count notification\n  if (failedCount > 0) {\n    console.error(`[Gofakeit] ${context} failed for ${failedCount} fields`);\n    showNotification(`Failed to generate data for ${failedCount} fields.`, 'error');\n  }\n  \n  // If no fields were processed at all\n  if (successfulCount === 0 && failedCount === 0) {\n    console.log(`[Gofakeit] ${context} - no fields were processed`);\n    showNotification(`No fields were processed.`, 'info');\n  }\n}\n\n// ============================================================================\n// UTILITY FUNCTIONS (Called by various functions)\n// ============================================================================\n\n// Handle error display and field highlighting\nexport function handleError(element: Element, error: string, functionName?: string): void {\n  if (element instanceof HTMLElement) {\n    element.style.border = `2px solid ${GOFAKEIT_COLORS.error}`;\n    \n    setTimeout(() => {\n      element.style.border = '';\n    }, 5000);\n  }\n  \n  const message = functionName ? `Invalid function: ${functionName}` : error;\n  showFieldError(element, message);\n}\n\n// Check if an element contains form fields with data-gofakeit attributes\nexport function hasFormFields(element: HTMLElement): boolean {\n  const formFields = element.querySelectorAll('input[data-gofakeit], textarea[data-gofakeit], select[data-gofakeit]');\n  return formFields.length > 0;\n}\n\n// Check if an element is a form field with data-gofakeit attribute\nexport function isFormField(element: HTMLElement): boolean {\n  return (\n    (element.tagName === 'INPUT' || element.tagName === 'TEXTAREA' || element.tagName === 'SELECT') &&\n    element.hasAttribute('data-gofakeit')\n  );\n}\n\n// Display a small badge showing the function used for this field\nfunction showFunctionBadge(element: Element, funcName: string): void {\n  if (!(element instanceof HTMLElement)) return;\n\n  const badge = document.createElement('div');\n  badge.textContent = funcName;\n  badge.style.position = 'fixed';\n  badge.style.background = GOFAKEIT_COLORS.primary;\n  badge.style.color = '#000';\n  badge.style.fontFamily = 'Arial, sans-serif';\n  badge.style.fontSize = '11px';\n  badge.style.padding = '3px 8px';\n  badge.style.borderRadius = '6px';\n  badge.style.boxShadow = '0 2px 6px rgba(0,0,0,0.25)';\n  badge.style.zIndex = '2147483647';\n  badge.style.opacity = '0';\n  badge.style.transform = 'translateY(-6px)';\n  badge.style.transition = 'opacity 200ms ease, transform 200ms ease';\n  badge.style.pointerEvents = 'none';\n\n  const updatePosition = () => {\n    const rect = element.getBoundingClientRect();\n    const vh = window.innerHeight || document.documentElement.clientHeight;\n    const vw = window.innerWidth || document.documentElement.clientWidth;\n\n    // If the element is completely out of the viewport, hide the badge entirely\n    const outOfView = rect.bottom <= 0 || rect.top >= vh || rect.right <= 0 || rect.left >= vw;\n    if (outOfView) {\n      badge.style.display = 'none';\n      return;\n    }\n\n    // Otherwise, ensure it's visible and position above-left of the field\n    if (badge.style.display === 'none') badge.style.display = 'block';\n    const top = rect.top - 8;\n    const left = rect.left;\n    badge.style.top = `${top}px`;\n    badge.style.left = `${left}px`;\n  };\n\n  document.body.appendChild(badge);\n  updatePosition();\n\n  // Animate in\n  requestAnimationFrame(() => {\n    badge.style.opacity = '1';\n    badge.style.transform = 'translateY(-12px)';\n  });\n\n  // Track movement while visible\n  const onScroll = () => updatePosition();\n  const onResize = () => updatePosition();\n  window.addEventListener('scroll', onScroll, true);\n  window.addEventListener('resize', onResize, true);\n\n  // Observe element size/position changes\n  let ro: ResizeObserver | null = null;\n  if (typeof ResizeObserver !== 'undefined') {\n    ro = new ResizeObserver(() => updatePosition());\n    try { ro.observe(element); } catch { /* ignore */ }\n  }\n\n  // Animate out and remove after extended delay\n  const DISPLAY_MS = 6000;\n  setTimeout(() => {\n    badge.style.opacity = '0';\n    badge.style.transform = 'translateY(-6px)';\n    setTimeout(() => {\n      window.removeEventListener('scroll', onScroll, true);\n      window.removeEventListener('resize', onResize, true);\n      if (ro) {\n        try { ro.disconnect(); } catch { /* ignore */ }\n        ro = null;\n      }\n      if (badge.parentNode) badge.parentNode.removeChild(badge);\n    }, 220);\n  }, DISPLAY_MS);\n}\n\n// Read smart-fill setting\nasync function isSmartFillEnabled(): Promise<boolean> {\n  return new Promise((resolve) => {\n    try {\n      chrome.storage.sync.get({ gofakeitSmartFill: true }, (items) => {\n        resolve(!!items.gofakeitSmartFill);\n      });\n    } catch {\n      resolve(false);\n    }\n  });\n}\n\n// Extract nearby/associated label text for context\nfunction getAssociatedLabelText(input: HTMLInputElement): string {\n  const texts: string[] = [];\n  const id = input.id;\n  // aria-labelledby\n  const labelledBy = input.getAttribute('aria-labelledby');\n  if (labelledBy) {\n    labelledBy.split(/\\s+/).forEach((ref) => {\n      const el = document.getElementById(ref);\n      if (el && el.textContent) texts.push(el.textContent);\n    });\n  }\n  // explicit label[for]\n  if (id) {\n    try {\n      const lbl = document.querySelector('label[for=\"' + id.replace(/\"/g, '\\\\\"') + '\"]') as HTMLLabelElement | null;\n      if (lbl && lbl.textContent) texts.push(lbl.textContent);\n    } catch { /* ignore */ }\n  }\n  // implicit parent label\n  const closestLabel = input.closest('label');\n  if (closestLabel && closestLabel.textContent) texts.push(closestLabel.textContent);\n  // previous sibling label (common in some UIs)\n  const prev = input.previousElementSibling as HTMLElement | null;\n  if (prev && prev.tagName === 'LABEL' && prev.textContent) texts.push(prev.textContent);\n  return texts.join(' ').toLowerCase();\n}\n\n// Infer best-fit function name for an input based on type/name/placeholder\nasync function inferFunctionForInput(input: HTMLInputElement): Promise<string> {\n  const type = input.type.toLowerCase();\n  const name = (input.name || '').toLowerCase();\n  const id = (input.id || '').toLowerCase();\n  const placeholder = (input.placeholder || '').toLowerCase();\n  const autocomplete = (input.autocomplete || '').toLowerCase();\n  const ariaLabel = (input.getAttribute('aria-label') || '').toLowerCase();\n  const labelText = getAssociatedLabelText(input);\n\n  const text = `${name} ${id} ${placeholder} ${autocomplete} ${ariaLabel} ${labelText}`;\n\n  // Helper to ensure function exists\n  const pick = (fn: string, fallback: string = 'word'): string => (hasFunc(fn) ? fn : fallback);\n\n  // Direct type mappings\n  if (type === 'email' || /email/.test(text)) return pick('email');\n  if (type === 'password' || /password|pass/.test(text)) return pick('password');\n  if (type === 'tel' || /phone|tel|mobile/.test(text)) return pick('phone');\n  if (type === 'url' || /url|website/.test(text)) return pick('url');\n  if (type === 'color' || /color/.test(text)) return pick('hexcolor');\n  // Numeric-like hints (avoid matching 'account' via word boundaries)\n  if (type === 'number' || /\\b(?:age|qty|quantity|count|amount)\\b/.test(text)) {\n    return hasFunc('number') ? 'number?min=1&max=9999' : 'word';\n  }\n\n  // Placeholder-only numeric hint: if no numeric type but placeholder looks numeric\n  // Example: placeholder=\"0.000\" → float-like; placeholder=\"123\" → int-like\n  if ((type === '' || type === 'text')) {\n    const placeholderRaw = (input.placeholder || '').trim();\n    if (/^[+-]?\\d+$/.test(placeholderRaw)) {\n      const digits = Math.min(placeholderRaw.replace(/[^0-9]/g, '').length || 1, 9);\n      const max = Math.pow(10, digits) - 1;\n      return `number?min=0&max=${max}`;\n    }\n    if (/^[+-]?\\d+\\.\\d+$/.test(placeholderRaw)) {\n      const parts = placeholderRaw.replace(/[^0-9.]/g, '').split('.');\n      const fracDigits = Math.min((parts[1] || '2').length, 6);\n      return `generate?str={number:0,100}.{generate:${'#'.repeat(fracDigits)}}`;\n    }\n  }\n\n  // Credit card number detection\n  const looksLikeCcField =\n    /credit\\s*card|card\\b|cc\\b/.test(text) && /(number|no|num)/.test(text) ||\n    /card[-_ ]?number|credit[-_ ]?card[-_ ]?number/.test(text) ||\n    ariaLabel.includes('credit card number') ||\n    placeholder.includes('••••') ||\n    (input.maxLength >= 16 && input.maxLength <= 19 && (/card|credit/.test(text)));\n  if (looksLikeCcField) {\n    return 'creditcardnumber';\n  }\n\n  // Credit card CVV/CVC/Security Code\n  if (/\\bcvv\\b|\\bcvc\\b|security\\s*code|card\\s*code|\\bcid\\b|\\bcv2\\b/.test(text)) {\n    if (hasFunc('creditcardcvv')) return 'creditcardcvv';\n  }\n\n  // Credit card Expiry / Expiration date\n  if (/\\bexp(iry|iration)?\\b|valid\\s*(thru|through)|mm\\s*\\/\\s*yy|yy\\s*\\/\\s*mm|mm\\s*yy|yy\\s*mm|expiry\\s*date|exp\\.?\\s*date/.test(text)\n      || /\\b\\d{2}\\s*\\/\\s*\\d{2}\\b/.test((input.value || '').toLowerCase())) {\n    if (hasFunc('creditcardexp')) return 'creditcardexp';\n  }\n\n  // After card-specific checks, fall back to general date/time\n  if (type === 'date' || /\\bdate\\b|\\bdob\\b|birthday/.test(text)) return pick('date');\n  if (type === 'time' || /\\btime\\b/.test(text)) return pick('date');\n  if (type === 'datetime-local' || /\\bdatetime\\b|appointment/.test(text)) return pick('date');\n\n  // Bank account and routing numbers\n  if (/\\baccount\\b\\s*(?:number|no)\\b|\\bacct\\b/.test(text) || /\\baccount\\s*number\\b/.test(placeholder)) {\n    if (hasFunc('achaccount')) return 'achaccount';\n  }\n  if (/routing\\s*(number|no)|\\baba\\b/.test(text)) {\n    if (hasFunc('achrouting')) return 'achrouting';\n  }\n\n  // Common field heuristics\n  // Address line 2 / unit identifiers (must come before generic address/street)\n  if (/(^|\\b)(apartment|apt|suite|unit|floor|bldg|building|room|ste|address[-_ ]?line[-_ ]?2|address2|addr2|line[-_ ]?2)(\\b|$)/.test(text)) {\n    return pick('unit');\n  }\n  if (/first\\s*name|firstname|first_name|given/.test(text)) return pick('firstname');\n  if (/last\\s*name|lastname|last_name|surname|family/.test(text)) return pick('lastname');\n  if (/full\\s*name|fullname/.test(text)) return pick('name');\n  if (/city/.test(text)) return pick('city');\n  if (/state|province|region/.test(text)) return pick('state');\n  if (/\\bpostal\\b|\\bpostal[-_ ]?code\\b|\\bpostcode\\b|\\bzip\\b|\\bzip[-_ ]?code\\b/.test(text)) {\n    return hasFunc('postcode') ? 'postcode' : 'zip';\n  }\n  if (/address|street/.test(text)) return pick('street');\n  if (/company|organization|org/.test(text)) return pick('company');\n  if (/job|title|role/.test(text)) return pick('jobtitle', pick('job'));\n  if (/website|domain/.test(text)) return pick('url');\n  if (/username|user\\b/.test(text)) return pick('username');\n\n  // Fallbacks\n  if (type === 'search') return 'word';\n  if (hasFunc('word')) return 'word';\n  return 'word';\n}\n\n// Find the closest container that has form fields with data-gofakeit attributes\nexport function findFormContainer(element: HTMLElement): HTMLElement | null {\n  // Check if the current element has form fields\n  if (hasFormFields(element)) {\n    return element;\n  }\n  \n  // Check parent elements\n  let parent = element.parentElement;\n  while (parent) {\n    if (hasFormFields(parent)) {\n      return parent;\n    }\n    parent = parent.parentElement;\n  }\n  \n  return null;\n}\n\n// Simple notification function (can be overridden by the consuming application)\nfunction showNotification(message: string, type: 'success' | 'error' | 'info' = 'info'): void {\n  console.log(`[Gofakeit ${type.toUpperCase()}] ${message}`);\n}\n"],"names":["FUNCS","FUNCS_VALUES","hasFunc","name","getFuncs","GOFAKEIT_COLORS","GOFAKEIT_SPACING","GOFAKEIT_BORDER","GOFAKEIT_FONT","showFieldError","element","message","existingError","tooltip","updateTooltipPosition","rect","scrollTop","scrollLeft","left","top","scrollHandler","resizeHandler","scrollableElements","scrollableListeners","el","style","listener","handler","GOFAKEIT_API_BASE","callFunc","func","questionMarkIndex","functionName","queryString","params","searchParams","key","value","numValue","makeRequest","fetchRandomString","strings","method","url","body","options","response","error","getISOWeek","date","d","week1","handleDateTimeInput","gofakeitFunc","inputType","dateFunc","dateResponse","handleError","dateString","dateMatch","hourResponse","minuteResponse","hour","minute","datetimeFunc","datetimeResponse","datetimeString","datetimeMatch","yearResponse","monthResponse","month","weekFunc","weekDateResponse","year","week","weekYearResponse","weekResponse","handleTextInput","functionToCall","handleTextarea","handleCheckbox","checkboxGroup","findCheckboxGroup","numToSelect","cb","selectedIndices","i","boolResponse","availableIndices","_","randomIndex","values","v","index","shouldCheck","handleRadio","radioGroup","findRadioGroup","rb","selectedRadio","container","handleSelectWithFunction","option","selectedValues","remainingOptions","opt","val","handleNumberInput","handleRangeInput","min","max","autofillAll","elements","queryFormElements","smartEnabled","isSmartFillEnabled","targets","isDataGofakeitFalse","showNotification","results","processElements","showResults","autofillContainer","autofillElement","funcToUse","success","usedFunc","showFunctionBadge","passToHandler","inferred","inferFunctionForInput","selector","nodeList","getUniqueElements","uniqueElements","processedGroups","successfulCount","failedCount","context","funcName","badge","updatePosition","vh","vw","onScroll","onResize","ro","resolve","items","getAssociatedLabelText","input","texts","id","labelledBy","ref","lbl","closestLabel","prev","type","placeholder","autocomplete","ariaLabel","labelText","text","pick","fn","fallback","placeholderRaw","digits","parts","fracDigits"],"mappings":"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"}